% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_page.R
\name{grid_page}
\alias{grid_page}
\title{Setup gridlayout UI for shiny app}
\usage{
grid_page(layout, ..., use_bslib_card_styles = FALSE, theme = NULL)
}
\arguments{
\item{layout}{Either a markdown table representation (see
\code{\link{md_to_gridlayout}}) or a \code{gridlayout} object defining the
desired layout for your Shiny app.}

\item{...}{Contents of each grid element. For instance the contents of the
header (as defined in \code{layout}) would be set with \code{header = h2("App Title")}. Any arguments that don't match the names used in the layout
definition are added to the page after the container. This can be used to
do things like things to the \code{head} or \code{meta} sections of the page.}

\item{use_bslib_card_styles}{Should the elemeents within the grid be given
the current bootstrap theme's card styling? This will only apply to
elements not wrapped in \link{\code{grid_panel()}}. Card styles must be set
explitely for those elements.}

\item{theme}{Optional argument to pass to \code{theme} argument of
\code{\link[shiny]{fluidPage}}.}
}
\value{
A UI definition that can be passed to the
\code{\link[shiny]{shinyUI}} function.
}
\description{
Setup gridlayout UI for shiny app
}
\examples{
# Only run these examples in interactive R sessions
if (interactive()) {
requireNamespace("shiny", quietly = TRUE)
requireNamespace("bslib", quietly = TRUE)

library(shiny)
my_layout <- "
|      |        |         |
|------|--------|---------|
|2rem  |200px   |1fr      |
|150px |header  |header   |
|1fr   |sidebar |distPlot |"

# The classic Geyser app with grid layout
shinyApp(
  ui = grid_page(
    layout = my_layout,
    theme = bslib::bs_theme(),
    header = h2("Old Faithful Geyser Data"),
    sidebar = sliderInput("bins","Number of bins:", min = 1, max = 50, value = 30),
    plot = plotOutput("distPlot", height = "100\%")
  ),
  server = function(input, output) {
    output$distPlot <- renderPlot({
      x    <- faithful[, 2]
      bins <- seq(min(x), max(x), length.out = input$bins + 1)
      hist(x, breaks = bins, col = 'darkgray', border = 'white')
    })
  }
)

}
}
\seealso{
grid_container
}
