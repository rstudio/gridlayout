% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/new_gridlayout.R
\name{new_gridlayout}
\alias{new_gridlayout}
\title{Construct a gridlayout object from basic parts}
\usage{
new_gridlayout(
  layout_mat,
  col_sizes = "auto",
  row_sizes = "auto",
  gap,
  element_list
)
}
\arguments{
\item{layout_mat}{A character matrix where each entry controls what element
id will take up that given position in the grid. For instance a header
element would take up every cell in the first row.}

\item{col_sizes}{A character vector of valid css sizes for the width of each
column in your grid as given by \code{layout_mat}. If a single value is passed,
it will be repeated for all columns.}

\item{row_sizes}{Same as \code{col_sizes}, but for row heights.}

\item{gap}{Valid css sizing for gap to be left between each element in your
grid. Defaults to \code{"1rem"}.}

\item{element_list}{List of elements with the \code{id}, \code{start_row}, \code{end_row},
\code{start_col}, and \code{end_col} format.}
}
\value{
Object of class \code{"gridlayout"}
}
\description{
Construct a gridlayout object from basic parts
}
\examples{

# Assemble list of elements along with their positions
elements_list <- list(
  list(id = "header", start_row = 1, end_row = 1,
       start_col = 1, end_col = 2),
  list(id = "plot",   start_row = 2, end_row = 2,
       start_col = 1, end_col = 1),
  list(id = "table",  start_row = 2, end_row = 2,
       start_col = 2, end_col = 2),
  list(id = "footer", start_row = 3, end_row = 3,
       start_col = 1, end_col = 2)
)

new_gridlayout(
  col_sizes = c("1fr", "2fr"),
  row_sizes = c("100px", "1fr", "1fr"),
  element_list = elements_list
)

# Can also use a matrix for more visually intuitive laying out
elements_mat <- matrix(c(
  "header", "header",
  "plot",   "table",
  "footer", "footer"),
  ncol = 2, byrow = TRUE
)

new_gridlayout(
  col_sizes = c("1fr", "2fr"),
  row_sizes = c("100px", "1fr", "1fr"),
  layout_mat = elements_mat
)

}
