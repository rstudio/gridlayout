% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_nested.R
\name{grid_nested}
\alias{grid_nested}
\title{Grid panel with nested gridlayout}
\usage{
grid_nested(area, layout, ..., id = NULL, title = NULL, flag_mismatches = TRUE)
}
\arguments{
\item{area}{Name of grid area, should match an area defined in the layout
section of the wrapping \code{grid_page()} or \code{grid_container()}.}

\item{layout}{Either a markdown table representation (see
\code{\link{md_to_gridlayout}}) or a \code{gridlayout} object defining the
desired layout for your Shiny app.}

\item{...}{Elements to include within the panel}

\item{id}{ID unique to this container (note that the HTML will be prefixed
with \verb{grid-} to avoid namespace clashes)}

\item{title}{Character string to go across top of panel with label. If left
blank the card contents will take up entire space.}

\item{flag_mismatches}{Should a mismatch between supplied \code{elements} ui
definitions and layout trigger a warning? In advanced cases you may want to
dynamically set your layout and sometimes omit panels.}
}
\value{
A \code{grid_panel} with a nested layout within it
}
\description{
Creates a panel for a layout with its own internal gridlayout
}
\examples{
if (interactive()) {
  library(gridlayout)
  library(shiny)

  # A centered text panel
  grid_panel_text_c <- function(...) grid_panel_text(..., h_align = "center")

  my_layout <- "
|A |B |
|C |D |"
  shinyApp(
    ui = grid_page(
      layout = my_layout,
      grid_panel_text_c("A", "A"),
      grid_panel_text_c("B", "B"),
      grid_panel_text_c("C", "C"),
      grid_panel_nested(
        "D",
        layout = my_layout,
        grid_panel_text_c("A", "A2"),
        grid_panel_text_c("B", "B2"),
        grid_panel_text_c("C", "C2"),
        grid_panel_text_c("D", "D2")
      )
    ),
    server = function(input, output) {}
  )
}
}
\seealso{
\link{grid_panel}, \link{grid_container}
}
