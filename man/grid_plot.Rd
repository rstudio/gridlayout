% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_plot.R
\name{grid_plot}
\alias{grid_plot}
\title{Grid Panel Plot Output}
\usage{
grid_plot(area, outputId = area, ..., has_border = TRUE)
}
\arguments{
\item{area}{Name of grid area, should match an area defined in the layout
section of the wrapping \code{grid_page()} or \code{grid_container()}.}

\item{outputId}{Output id of the plot output. Used to link to server code
generating plot. If left unset this will use the same value as the \code{area}
argument.}

\item{...}{
  Arguments passed on to \code{\link[=card_plot_output]{card_plot_output}}
  \describe{
    \item{\code{stretch}}{Set to \code{TRUE} if this \code{card_body} is eager to use any extra
vertical space is available in the card.}
  }}
}
\value{
A grid panel filled with plot output
}
\description{
A light wrapper for \code{shiny::plotOutput()} that uses gridlayout-friendly
sizing defaults.
}
\examples{

if (interactive()) {

shinyApp(
  ui = grid_page(
    layout = c(
      "15px 200px   1fr",
      "85px header  header",
      "1fr  sidebar distPlot"
    ),
    grid_panel_text("header", "This is my header", is_title = TRUE),
    grid_panel(
      "sidebar",
      title = "Settings",
      sliderInput("bins","Number of bins:", min = 1, max = 50, value = 30, width = "100\%")
    ),
    grid_panel_plot("distPlot")
  ),
  server = function(input, output) {
    output$distPlot <- renderPlot({
      x    <- faithful[, 2]
      bins <- seq(min(x), max(x), length.out = input$bins + 1)
      hist(x, breaks = bins, col = 'darkgray', border = 'white')
    })
  }
)

}

}
\seealso{
\link{card_plot_output}
}
