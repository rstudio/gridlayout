% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_card.R
\name{grid_card}
\alias{grid_card}
\title{Grid Card}
\usage{
grid_card(area, ...)
}
\arguments{
\item{area}{Area of grid corresponding to the wrapping grid containers grid
definition}

\item{...}{
  Arguments passed on to \code{\link[bslib:card]{bslib::card}}
  \describe{
    \item{\code{class}}{Additional CSS classes to include on the card div.}
    \item{\code{width}}{Any valid \link[htmltools:validateCssUnit]{CSS unit}; for
example, \code{height="100\%"}.}
    \item{\code{height}}{Any valid \link[htmltools:validateCssUnit]{CSS unit}; for
example, \code{height="100\%"}.}
    \item{\code{autowrap}}{The Bootstrap card is designed to contain only a few specific
types of elements: \code{div.card-header}, \code{div.card-body}, etc. If \code{autowrap}
is \code{TRUE}, any unnamed arguments to \code{card()} are checked to see if they are
known card items (like \code{\link[bslib:card_body]{card_header()}}, \code{\link[=card_plot]{card_plot()}}, etc.) and if not,
they are automatically wrapped in \code{\link[bslib:card_body]{card_body()}}. If \code{autowrap} is \code{FALSE},
then all unnamed arguments are nested directly within the card element with
no further processing.}
  }}
}
\value{

}
\description{
A wrapper around \link[bslib:card]{bslib::card} to enable placing on a grid layout using the
area parameter.
}
\seealso{
\code{\link[bslib:card]{bslib::card()}}
}
