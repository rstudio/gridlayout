% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_card.R
\name{grid_card}
\alias{grid_card}
\title{Grid-positioned card element}
\usage{
grid_card(
  area,
  ...,
  title = NULL,
  scrollable = FALSE,
  collapsible = TRUE,
  has_border = TRUE,
  item_gap = "10px",
  class = NULL
)
}
\arguments{
\item{area}{Name of grid area, should match an area defined in the layout
section of the wrapping \code{grid_page()} or \code{grid_container()}.}

\item{...}{Arguments (typically children) passed to the \code{htmltools::div()}
that contain the card's contents}

\item{title}{Character string to go across top of panel with label. If left
blank the card contents will take up entire space.}

\item{scrollable}{Should scroll-bars be added so content that is larger than
the panel can be seen?}

\item{collapsible}{Should the card be able to be collapsed (\code{TRUE} or
\code{FALSE})? Gridlayout will only show collapser if the layout allows it
(panel is entirely positioned within "auto" sized rows, and has a title).
Setting this to \code{FALSE} will mean collapsibility of the panel will never be
enabled, regardless of layout.}

\item{has_border}{Should the card be surrounded by a border? Set to \code{FALSE}
to turn off.}

\item{item_gap}{How much vertical space should there be between children of card?}

\item{class}{Additional CSS classes to include on the card div.}
}
\description{
The standard element for placing elements on the grid in a simple card
container
}
\examples{
if (FALSE) {
library(gridlayout)
library(shiny)
library(bslib)

shinyApp(
  ui = grid_page(
    layout = c(
      "header  header",
      "sidebar distPlot"
    ),
    row_sizes = c("50px", "1fr"),
    col_sizes = c("200px", "1fr"),
    grid_card_text("header", "This is my header"),
    grid_card(
      "sidebar",
      title = "Settings",
      sliderInput("bins","Number of bins:", 1, 50, 30, width = "100\%")
    ),
    grid_plot("distPlot")
  ),
  server = function(input, output) {
    output$distPlot <- renderPlot({
      x    <- faithful[, 2]
      bins <- seq(min(x), max(x), length.out = input$bins + 1)
      hist(x, breaks = bins, col = 'darkgray', border = 'white')
    })
  }
)
}
}
\seealso{
\link{grid_card_text, grid_plot, grid_place, card_plot_output}
}
