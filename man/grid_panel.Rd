% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grid_panel.R
\name{grid_panel}
\alias{grid_panel}
\title{Panel for grid page}
\usage{
grid_panel(
  ...,
  v_align = "stretch",
  h_align = "stretch",
  title = NULL,
  use_card_styles = TRUE,
  use_bslib_card_styles = FALSE,
  collapsable = FALSE,
  scrollable = FALSE
)
}
\arguments{
\item{...}{Elements to include within the panel}

\item{v_align, h_align}{Vertical and Horizontal alignment of content in panel.
Options include \verb{"center", "start", "end", "stretch"}. These are a direct
mapping to the the \href{https://developer.mozilla.org/en-US/docs/Web/CSS/justify-items}{css-spec for \code{justify-items}}
(=\code{h_align}) and
\href{https://developer.mozilla.org/en-US/docs/Web/CSS/align-items}{\code{align-items}}
(= \code{v_align}).}

\item{use_bslib_card_styles}{Should the card styles from bslib be used
instead of default \code{gridlayout} card styles? If this is set to \code{TRUE} it
will override \code{use_card_style}.}

\item{collapsable}{Should the card be able to be collapsed? Only really
functional when panel takes up entire width of page. Requires a title so
the user knows what panel is in collapsed state.}

\item{scrollable}{Should scroll-bars be added so content that is larger than
the panel can be seen?}

\item{use_card_style}{Should the element contained in panel be made to look
like an enclosed card?}
}
\value{
Elements from \code{...} wrapped in a \code{shiny::div()} with \code{class = "grid_panel"} and vertical/horizontal alignment css applied.
}
\description{
Panel for grid page
}
\examples{

# Simply a wrapper for shiny::div(...)
grid_panel(
  shiny::h2("R"),
  v_align = "center",
  h_align = "center"
)

if (interactive()) {

library(gridlayout)
library(shiny)
requireNamespace("bslib", quietly = TRUE)
requireNamespace("fontawesome", quietly = TRUE)
my_layout <- "
|      |        |       |
|------|--------|-------|
|2rem  |200px   |1fr    |
|80px  |header  |header |
|1fr   |sidebar |content|"

content_layout <- "
|    |         |            |
|----|---------|------------|
|    |1fr      |4fr         |
|1fr |icon     |bin_chooser |
|4fr |settings |plot        |"

# The classic Geyser app with grid layout
app <- shinyApp(
  ui = grid_page(
    layout = my_layout,
    theme = bslib::bs_theme(),
    header = gridlayout::grid_panel(
      h2(id = "header", "This is my header content"),
      v_align = "center"
    ),
    sidebar = p("Here is my sidebar and all the content that may be desired within it!"),
    content = grid_container(
      id = "content",
      layout = content_layout,
      elements = list(
        icon = grid_panel(
          h2(fontawesome::fa("r-project", fill = "steelblue"), height = "80px"),
          v_align = "center",
          h_align = "center"
        ),
        bin_chooser = grid_panel(
          sliderInput("bins", label = "Number of bins", min = 1, max = 50, value = 30),
          v_align = "center"
        ),
        settings = textOutput('current_bin_num'),
        plot = plotOutput("distPlot", height = "100\%")
      )
    )
  ),
  server = function(input, output) {
    output$distPlot <- renderPlot({
      x    <- faithful[, 2]
      bins <- seq(min(x), max(x), length.out = input$bins + 1)
      hist(x, breaks = bins, col = 'darkgray', border = 'white')
    })
    output$current_bin_num <- renderText({
      paste("There are currently", input$bins, "bins in our histogram.")
    })
  }
)
}

}
