{"version":3,"sources":["misc-helpers.ts","make_el.ts","draw_browser_header.ts","icons.ts","make_incrementer.ts","focused_modal.ts","make_css_unit_input.ts","index.ts","../../../../../../../../usr/local/lib/node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"index.js","sourceRoot":"..","sourcesContent":["import { Grid_Pos } from \"./index\";\n// Functions related to grid construction\n\nexport interface XY_Pos {\n  x: number;\n  y: number;\n}\n\nexport enum Drag_Type {\n  top_left = \"top-left\",\n  bottom_right = \"bottom-right\",\n  center = \"center\",\n}\n\n// Builds the start/end css string for a grid-{row,column}\nexport function make_template_start_end(start: number, end?: number): string {\n  // If we only have a single value just assume we take up one row\n  // If single index is a negative one, we need to subtract instead of add to it\n  const negative_index: boolean = start < 0;\n\n  // Grid works with lines so if we want an element to end at the 4th column we\n  // need to tell it to end at the (4+1)5th line, so we add one\n  end = end ? end + 1 : start + (negative_index ? -1 : 1);\n  // end = end ? +end + 1 : start + (negative_index ? -1 : 1);\n\n  return `${start} / ${end}`;\n}\n\nexport function set_element_in_grid(el: HTMLElement, grid_bounds: Grid_Pos) {\n  if (grid_bounds.start_row) {\n    el.style.gridRow = make_template_start_end(\n      grid_bounds.start_row,\n      grid_bounds.end_row\n    );\n  }\n  if (grid_bounds.start_col) {\n    el.style.gridColumn = make_template_start_end(\n      grid_bounds.start_col,\n      grid_bounds.end_col\n    );\n  }\n  el.style.display = \"block\"; // make sure we can see the element\n}\n\n// grid-template-{column,row}: ...\n// Take a vector of css sizes and turn into the format for the css argument for\nexport function sizes_to_template_def(defs: Array<string>) {\n  return concat(defs, \" \");\n}\n\nexport function concat(\n  string_vec: Array<string>,\n  collapse_char: string = \" \"\n): string {\n  return string_vec.reduce(\n    (concatted, current, i) =>\n      concatted + (i > 0 ? collapse_char : \"\") + current,\n    \"\"\n  );\n}\n\nexport function concat_nl(...component_strings: string[]) {\n  return concat(component_strings, \"\\n\");\n}\n\nexport function concat_sp(...component_strings: string[]) {\n  return concat(component_strings, \" \");\n}\n\nexport function as_array<T>(content: T | Array<T>): Array<T> {\n  if (content instanceof Array) {\n    return content;\n  } else {\n    return [content];\n  }\n}\n\n// Passing an undefined value to a compare like min or max will always give undefined\n// These functions let you default to the second option in the case the first is falsy\nexport function compare_w_missing(\n  compare_fn: (...values: number[]) => number,\n  maybe_a: number | null,\n  b: number\n) {\n  return maybe_a ? compare_fn(maybe_a, b) : b;\n}\nexport function min_w_missing(maybe_a: number | null, b: number) {\n  return compare_w_missing(Math.min, maybe_a, b);\n}\nexport function max_w_missing(maybe_a: number | null, b: number) {\n  return compare_w_missing(Math.max, maybe_a, b);\n}\n\nexport interface Selection_Rect {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\n// Produce bounding rectangle relative to parent of any element\nexport function get_bounding_rect(el: HTMLElement): Selection_Rect | null {\n  if (el.offsetParent === null) {\n    return null;\n  }\n  const top = el.offsetTop;\n  const left = el.offsetLeft;\n  const height = el.offsetHeight;\n  const width = el.offsetWidth;\n  return { left: left, right: left + width, top: top, bottom: top + height };\n}\n\nexport function boxes_overlap(\n  box_a: Selection_Rect,\n  box_b: Selection_Rect\n): boolean {\n  const horizontal_overlap = intervals_overlap(\n    [box_a.left, box_a.right],\n    [box_b.left, box_b.right]\n  );\n  const vertical_overlap = intervals_overlap(\n    [box_a.top, box_a.bottom],\n    [box_b.top, box_b.bottom]\n  );\n\n  return horizontal_overlap && vertical_overlap;\n\n  // Figure out of two intervals overlap eachother\n  function intervals_overlap([a_start, a_end], [b_start, b_end]) {\n    //   aaaaaaaaaa\n    // bbbbbb\n    //         bbbbbb\n    const a_contains_b_endpoint =\n      (a_start >= b_start && a_start <= b_end) ||\n      (a_end >= b_start && a_end <= b_end);\n\n    //   aaaaaa\n    // bbbbbbbbbb\n    const b_covers_a = a_start <= b_start && a_end >= b_end;\n\n    return a_contains_b_endpoint || b_covers_a;\n  }\n}\n\nexport function update_rect_with_delta(\n  rect: Selection_Rect,\n  delta: XY_Pos,\n  dir: Drag_Type\n): Selection_Rect {\n  // Need to destructure down to numbers to avoid copy\n  const new_rect: Selection_Rect = { ...rect };\n\n  // The bounding here means that we dont let the user drag the box \"inside-out\"\n  if (dir === Drag_Type.top_left) {\n    new_rect.left = new_rect.left + delta.x;\n    new_rect.top = new_rect.top + delta.y;\n  } else if (dir === Drag_Type.bottom_right) {\n    (new_rect.right = new_rect.right + delta.x), new_rect.left;\n    (new_rect.bottom = new_rect.bottom + delta.y), new_rect.top;\n  } else {\n    // Just move the box\n    new_rect.left += delta.x;\n    new_rect.top += delta.y;\n    new_rect.right += delta.x;\n    new_rect.bottom += delta.y;\n  }\n\n  // Make sure positions are proper for bounding box (in case box was flipped inside out)\n  if (new_rect.left > new_rect.right) {\n    const { left, right } = new_rect;\n    new_rect.right = left;\n    new_rect.left = right;\n  }\n  if (new_rect.top > new_rect.bottom) {\n    const { top, bottom } = new_rect;\n    new_rect.bottom = top;\n    new_rect.top = bottom;\n  }\n\n  return new_rect;\n}\n\nexport function get_css_unit(css_size: string): string {\n  return css_size.match(/[^ \\d | \\.]+$/g)[0] || \"px\";\n}\n\nexport function get_css_value(css_size: string): number {\n  return Number(css_size.match(/^[\\d | \\.]+/g)[0]);\n}\n","import { Grid_Pos } from \".\";\nimport {\n  as_array,\n  set_element_in_grid,\n} from \"./misc-helpers\";\n\nexport interface Event_Listener {\n  event: string;\n  func: (event: Event) => void;\n}\n\ninterface Element_Opts {\n  event_listener?: Event_Listener | Array<Event_Listener>;\n  styles?: object;\n  innerHTML?: string;\n  data_props?: object;\n  grid_pos?: Grid_Pos;\n  props?: object;\n}\n\n// This is a heavy-lifter that takes care of building elements and placing them\n// on the grid etc.. It only create's an element if it needs to, which means\n// that we dont get dom leaks caused by recalling stuff over and over again.\nexport function make_el(\n  parent: HTMLElement,\n  sel_txt: string,\n  opts: Element_Opts = {}\n) {\n  const get_tag_regex = /^([^#\\.]+)+/g;\n  const get_id_regex = /(?<=#)([^\\.]+)/g;\n  const get_class_regex = /(?<=\\.)([^\\.#]+)/g;\n\n  const tag_type: string = sel_txt.match(get_tag_regex)[0];\n  const el_id: RegExpMatchArray = sel_txt.match(get_id_regex);\n  const class_list: RegExpMatchArray = sel_txt.match(get_class_regex);\n\n  let el: HTMLElement = parent.querySelector(sel_txt);\n  if (!el) {\n    // Element doesn't exists so we need to make it\n    el = document.createElement(tag_type);\n    if (el_id) {\n      el.id = el_id[0];\n    }\n\n    if (class_list) {\n      class_list.forEach((x) => el.classList.add(x));\n    }\n\n    if (opts.props) {\n      Object.assign(el, opts.props);\n    }\n\n    parent.appendChild(el);\n  }\n\n  if (opts.event_listener) {\n    as_array(opts.event_listener).forEach(\n      (listener) => (el[\"on\" + listener.event] = listener.func)\n    );\n  }\n\n  if (opts.styles) {\n    Object.assign(el.style, opts.styles);\n  }\n\n  if (opts.innerHTML) {\n    el.innerHTML = opts.innerHTML;\n  }\n\n  if (opts.data_props) {\n    Object.assign(el.dataset, opts.data_props);\n  }\n\n  if (opts.grid_pos) {\n    set_element_in_grid(el, opts.grid_pos);\n  }\n\n  return el;\n}\n\n// Given a list of elements from a query selector, remove them all\nexport function remove_elements(els_to_remove: NodeListOf<Element>): void {\n  els_to_remove.forEach((e) => e.remove());\n}\n","import { Shiny } from \"./index\";\n\nexport function draw_browser_header() {\n  const header_svg = document.getElementById(\"editor-browser-header\");\n  const {\n    width: width_of_bar,\n    height: height_of_bar,\n  } = header_svg.getBoundingClientRect();\n\n  // Clear out anything that may be in the svg already\n  header_svg.innerHTML = \"\";\n  // First make the buttons for closing, minimizing and maximizing window\n  const button_r = height_of_bar / 4.5;\n  for (let i = 1; i <= 3; i++) {\n    header_svg.innerHTML += `\n    <circle cx=${i * button_r * 3}px\n            cy = 50%\n            r = ${button_r}px\n    > </circle>`;\n  }\n\n  // Next make the browser url bar\n  const url_bar_start = 4 * button_r * 3;\n  // Bar is takes up middle 65% of header area\n  const url_bar_rel_height = 0.65;\n  const url_bar_height = height_of_bar * url_bar_rel_height;\n  const url_bar_margin = (height_of_bar - url_bar_height) / 2;\n  header_svg.innerHTML += `\n  <rect x = ${url_bar_start}px\n        y = ${url_bar_margin}px\n        width = ${width_of_bar - url_bar_start - 10}px\n        height = ${height_of_bar * url_bar_rel_height}px\n        stroke = \"black\"\n        stroke-width: 3px\n        fill = \"none\"\n        rx = ${url_bar_height / 2}px\n        ry = ${url_bar_height / 2}px\n  ></rect>`;\n\n  const url_address = Shiny ? \"www.myShinyApp.com\" : \"www.myGridApp.com\";\n  header_svg.innerHTML += `\n  <text x = ${url_bar_start + 13}px\n        y = ${height_of_bar / 2}px\n        alignment-baseline = \"central\"\n  >\n    ${url_address}\n  </text>\n`;\n}\n","export const vertical_drag_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M21 11H3V9H21V11M21 13H3V15H21V13Z\" />\n</svg>`;\n\nexport const horizontal_drag_icon = `<svg style=\"width:24px;height:24px;max-height:100%;\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M11 21H9V3H11V21M15 3H13V21H15V3Z\" />\n</svg>`;\n\nexport const trashcan_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" />\n</svg>`;\n\nexport const bottom_right_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const se_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const nw_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,17.59L17.59,19L7,8.41V15H5V5H15V7H8.41L19,17.59Z\" />\n</svg>`;\n\nexport const top_left_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const drag_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M22.67,12L18.18,16.5L15.67,14L17.65,12L15.67,10.04L18.18,7.53L22.67,12M12,1.33L16.47,5.82L13.96,8.33L12,6.35L10,8.33L7.5,5.82L12,1.33M12,22.67L7.53,18.18L10.04,15.67L12,17.65L14,15.67L16.5,18.18L12,22.67M1.33,12L5.82,7.5L8.33,10L6.35,12L8.33,13.96L5.82,16.47L1.33,12M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10Z\" />\n</svg>`;\n\nexport const plus_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n</svg>`;\n\nexport const minus_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,13H5V11H19V13Z\" />\n</svg>`;","import { minus_icon, plus_icon } from \"./icons\";\nimport { make_el } from \"./make_el\";\n\n// Builds an up down button and value input\nexport function make_incrementer({\n  parent_el,\n  start_val = 2,\n  id = \"incrementer\",\n  label = \"my incrementer\",\n  on_increment = (x) => console.log(x),\n}): (new_value: number) => void {\n\n  const plus_minus_div = make_el(\n    parent_el,\n    `div#${id}_incrementer.plus-minus-input.settings-grid`,\n    {\n      innerHTML: `<span class = \"label\">${label}</span>`,\n    }\n  );\n\n  const inputs_div = make_el(plus_minus_div, \"div.plus-minus-input-controls\");\n\n  const minus_btn = make_el(inputs_div, \"button.plus-minus-input-btn.minus\", {\n    props: {name: \"plus button\"},\n    innerHTML: minus_icon,\n    event_listener: {\n      event: \"click\",\n      func: increment_counter(-1),\n    },\n  });\n  const current_value = make_el(inputs_div, \"span.plus-minus-input-value\", {\n    innerHTML: start_val.toString(),\n  });\n\n  make_el(inputs_div, \"button.plus-minus-input-btn.plus\", {\n    props: {name: \"minus button\"},\n    innerHTML: plus_icon,\n    event_listener: {\n      event: \"click\",\n      func: increment_counter(1),\n    },\n  });\n\n  function update_value(new_value: number) {\n    current_value.innerHTML = new_value.toString();\n\n    if (new_value === 1) {\n      minus_btn.classList.add(\"disabled\");\n    } else {\n      minus_btn.classList.remove(\"disabled\");\n    }\n  }\n  function increment_counter(amount) {\n    return function () {\n      const new_value = +current_value.innerHTML + amount;\n\n      update_value(new_value);\n      on_increment(new_value);\n    };\n  }\n\n  return update_value;\n}\n","import { make_el, Event_Listener } from \"./make_el\";\n\ninterface Modal_Options {\n  background_callbacks?: Event_Listener | Array<Event_Listener>;\n  modal_callbacks?: Event_Listener | Array<Event_Listener>;\n  header_text?: string;\n}\nexport function focused_modal(opts: Modal_Options) {\n  const background = make_el(\n    document.querySelector(\"body\"),\n    \"div.background-blurrer\",\n    {\n      event_listener: opts.background_callbacks,\n    }\n  );\n\n  const modal = make_el(background, \"div.modal\", {\n    event_listener: opts.modal_callbacks,\n  });\n\n  if (opts.header_text) {\n    make_el(modal, \"div.modal_header\", {\n      innerHTML: opts.header_text,\n      styles: {\n        paddingBottom: \"1rem\",\n      },\n    });\n  }\n\n  return {\n    background,\n    modal,\n    remove: () => background.remove(),\n  };\n}\n","import { horizontal_drag_icon, vertical_drag_icon } from \"./icons\";\nimport { make_el } from \"./make_el\";\nimport { get_css_value, get_css_unit } from \"./misc-helpers\";\n\nexport interface CSS_Input {\n  form: HTMLElement;\n  current_value: () => string;\n  update_value: (new_value: string) => void;\n}\n// =============================================================================\n// From here on are a series of general purpose helper functions not\n// specifically related to the app and its state\n// Input with value text box on left and unit selector dropdown on right\n// Used to make valid css sizes\nexport function make_css_unit_input({\n  parent_el,\n  selector = \"\",\n  start_val = 1,\n  start_unit = \"fr\",\n  on_change = (x: string) => console.log(\"css unit change\", x),\n  allowed_units = [\"fr\", \"px\", \"rem\"],\n  form_styles = {},\n  drag_dir = \"none\",\n}): CSS_Input {\n  const allow_drag = drag_dir !== \"none\";\n\n  const form = make_el(parent_el, `form${selector}.css-unit-input`, {\n    styles: form_styles,\n    event_listener: [\n      { event: \"change\", func: on_update },\n      {\n        event: \"submit\",\n        func: function (e) {\n          // Needed to stop pressing enter causing page to refresh\n          e.preventDefault();\n        },\n      },\n    ],\n  });\n\n  const value_input = <HTMLInputElement>(\n    make_el(form, \"input.css-unit-input-value\", {\n      props: {\n        type: \"number\",\n        min: 0,\n        value: start_val,\n        step: 1,\n        \"aria-live\": \"polite\",\n      },\n    })\n  );\n\n  const unit_selector = <HTMLSelectElement>(\n    make_el(form, \"select.css-unit-input-select\", {\n      props: { name: \"units\" },\n    })\n  );\n\n  const resizer = make_el(form, \"div.css-unit-input-dragger\", {\n    innerHTML: drag_dir === \"y\" ? vertical_drag_icon : horizontal_drag_icon,\n  });\n\n  // Place an invisible div over the main one that we let be dragged. This means\n  // we can use the nice drag interaction callbacks without the ugly default\n  // drag behavior of two copies of the div and zooming back to the start pos etc.\n  make_el(resizer, \"div.css-unit-input-drag-detector\", {\n    props: { draggable: true },\n    event_listener: [\n      {\n        event: \"dragstart\",\n        func: function (event) {\n          this.dataset.baseline = value_input.value;\n          this.dataset.start = event[drag_dir];\n        },\n      },\n      {\n        event: \"drag\",\n        func: function (event) {\n          const drag_pos = event[drag_dir];\n          // At the end of the drag we get a drag event with 0 values that throws stuff off\n          if (drag_pos === 0) return;\n          const new_value = Math.max(\n            0,\n            +this.dataset.baseline + (event[drag_dir] - this.dataset.start)\n          );\n          value_input.value = new_value.toString();\n          on_change(current_value());\n        },\n      },\n    ],\n  });\n\n  allowed_units.forEach(function (unit_type) {\n    const unit_option = <HTMLOptionElement>(\n      make_el(unit_selector, `option.${unit_type}`, {\n        props: { value: unit_type },\n        innerHTML: unit_type,\n      })\n    );\n\n    if (unit_type === start_unit) {\n      unit_option.selected = true;\n    }\n  });\n  function current_value() {\n    return `${value_input.value}${unit_selector.value}`;\n  }\n  function on_update() {\n    const val = current_value();\n    update_value(val);\n    on_change(val);\n  }\n\n  function update_value(new_value: string) {\n    value_input.value = get_css_value(new_value).toString();\n    const new_unit = get_css_unit(new_value);\n\n    for (let opt of unit_selector.children as HTMLCollectionOf<\n      HTMLOptionElement\n    >) {\n      opt.selected = opt.value === new_unit;\n    }\n\n    if (new_unit === \"px\" && allow_drag) {\n      form.classList.add(\"with-drag\");\n    } else {\n      form.classList.remove(\"with-drag\");\n    }\n  }\n\n  update_value(`${start_val}${start_unit}`);\n\n  return { form, current_value, update_value };\n}\n","// JS entry point\nimport { Event_Listener, make_el, remove_elements } from \"./make_el\";\nimport { draw_browser_header } from \"./draw_browser_header\";\nimport { make_incrementer } from \"./make_incrementer\";\nimport { focused_modal } from \"./focused_modal\";\nimport { make_css_unit_input, CSS_Input } from \"./make_css_unit_input\";\nimport {\n  make_template_start_end,\n  sizes_to_template_def,\n  set_element_in_grid,\n  concat_nl,\n  as_array,\n  max_w_missing,\n  min_w_missing,\n  boxes_overlap,\n  get_bounding_rect,\n  get_css_unit,\n  get_css_value,\n  Selection_Rect,\n  update_rect_with_delta,\n  XY_Pos,\n  Drag_Type,\n} from \"./misc-helpers\";\nimport { trashcan_icon, drag_icon, se_arrow, nw_arrow } from \"./icons\";\n\nexport const Shiny = (window as any).Shiny;\n\ninterface Grid_Settings {\n  num_rows: (new_value: number) => void;\n  num_cols: (new_value: number) => void;\n  gap: CSS_Input;\n}\n\nexport interface Grid_Pos {\n  start_col?: number;\n  end_col?: number;\n  start_row?: number;\n  end_row?: number;\n}\n\ninterface Drag_Res {\n  xy: XY_Pos;\n  grid: Grid_Pos;\n}\n\ninterface Drag_Options {\n  watching_element: HTMLElement;\n  drag_dir: Drag_Type;\n  grid_element?: HTMLElement;\n  on_start?: (start_loc: XY_Pos) => void;\n  on_drag?: (drag_info: Drag_Res) => void;\n  on_end?: (drag_info: Drag_Res) => void;\n}\n\nwindow.onload = function () {\n  draw_browser_header();\n  // Keep track of the grid controls here. Tradeoff of a global variable\n  // feels worth it for direct access to the values without doing a dom query\n  const grid_controls = { rows: [], cols: [] };\n  // All the currently existing cells making up the grid\n  let current_cells = [];\n\n  // This holds the grid element dom node. Gets filled in the onload callback\n  // I am using a global variable here because we query inside this so much that\n  // it felt silly to regrab it every time as it never moves.\n  const grid_holder: HTMLElement = document.querySelector(\"#grid_holder\");\n  const settings_panel: HTMLElement = document.querySelector(\n    \"#settings .card-body\"\n  );\n\n  const grid_settings: Grid_Settings = {\n    num_rows: make_incrementer({\n      parent_el: settings_panel,\n      id: \"num_rows\",\n      start_val: 2,\n      label: \"Number of rows\",\n      on_increment: (x) => update_num_rows_or_cols(\"rows\", x),\n    }),\n    num_cols: make_incrementer({\n      parent_el: settings_panel,\n      id: \"num_cols\",\n      start_val: 2,\n      label: \"Number of cols\",\n      on_increment: (x) => update_num_rows_or_cols(\"cols\", x),\n    }),\n    gap: make_css_unit_input({\n      parent_el: make_el(\n        settings_panel,\n        \"div#gap_size_chooser.plus_minus_input.settings-grid\",\n        {\n          innerHTML: `<span class = \"label\">Panel gap size</span>`,\n        }\n      ),\n      selector: \"#gap_size_chooser\",\n      on_change: (x) => update_grid({ gap: x }),\n      allowed_units: [\"px\", \"rem\"],\n    }),\n  };\n\n  function update_num_rows_or_cols(dir, new_count) {\n    const current_vals =\n      dir === \"rows\" ? get_current_rows() : get_current_cols();\n\n    if (new_count > current_vals.length) {\n      current_vals.push(\"1fr\");\n    } else if (new_count < current_vals.length) {\n      current_vals.pop();\n    } else {\n      // No change, shouldn't happen but maybe...\n    }\n    update_grid({ [dir]: current_vals });\n  }\n\n  if (Shiny) {\n    Shiny.addCustomMessageHandler(\"update-grid\", function (opts) {\n      update_grid(opts);\n    });\n\n    Shiny.addCustomMessageHandler(\"add-elements\", function (elements_to_add) {\n      interface Shiny_Element_Msg {\n        id: string;\n        start_row: number;\n        end_row: number;\n        start_col: number;\n        end_col: number;\n      };\n      elements_to_add.forEach((el: Shiny_Element_Msg) => {\n        add_element({\n          id: el.id,\n          grid_pos: el,\n        });\n      });\n    });\n\n    Shiny.addCustomMessageHandler(\"code_modal\", function (code_to_show) {\n      show_code(\"Paste the following code into your app to update the layout\", {\n        type: \"R\",\n        code: code_to_show,\n      });\n    });\n  } else {\n    // If in pure-client-side mode we need to provide a default grid and also wireup the code button\n    update_grid({\n      rows: [\"1fr\", \"1fr\"],\n      cols: [\"1fr\", \"1fr\"],\n      gap: \"1rem\",\n    });\n\n    document.getElementById(\"get_code\").addEventListener(\"click\", function () {\n      const current_layout = gen_code_for_layout();\n      show_code(\"Place the following in your CSS:\", current_layout);\n    });\n  }\n  interface Code_Text {\n    type: string;\n    code: string;\n  }\n  function show_code(\n    message: string,\n    code_blocks: Code_Text | Array<Code_Text>\n  ) {\n    const code_modal = focused_modal({\n      header_text: `${message}`,\n      modal_callbacks: {\n        event: \"click\",\n        func: function (event) {\n          // This is needed to stop clicks on modal from triggering the cancel\n          // event that is attached to the background\n          event.stopPropagation();\n        },\n      },\n      background_callbacks: {\n        event: \"click\",\n        func: close_modal,\n      },\n    });\n\n    as_array(code_blocks).forEach(function (code_to_show) {\n      const num_of_lines: number = code_to_show.code.match(/\\n/g).length;\n\n      const code_section = make_el(\n        code_modal.modal,\n        `div#${code_to_show.type}.code_chunk`,\n        {\n          styles: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n            gridTemplateRows: \"1fr, auto\",\n            gridGap: \"4px\",\n            gridTemplateAreas: concat_nl(\n              `\"code_type copy_btn\"`,\n              `\"code_text code_text\"`\n            ),\n          },\n        }\n      );\n\n      let code_text: HTMLInputElement;\n\n      make_el(code_section, \"strong\", {\n        innerHTML: code_to_show.type,\n        styles: { gridArea: \"code_type\" },\n      });\n\n      make_el(code_section, \"button#copy_code\", {\n        innerHTML: \"Copy to clipboard\",\n        styles: { gridArea: \"copy_btn\" },\n        event_listener: {\n          event: \"click\",\n          func: function () {\n            code_text.select();\n            document.execCommand(\"copy\");\n          },\n        },\n      });\n\n      code_text = make_el(code_section, \"textarea#code_for_layout\", {\n        innerHTML: code_to_show.code,\n        props: { rows: num_of_lines + 3 },\n        styles: {\n          width: \"100%\",\n          background: \"#f3f2f2\",\n          fontFamily: \"monospace\",\n          display: \"block\",\n          padding: \"0.75rem\",\n          marginBottom: \"10px\",\n          borderRadius: \"5px\",\n          gridArea: \"code_text\",\n        },\n      }) as HTMLInputElement;\n    });\n\n    const action_buttons = make_el(code_modal.modal, \"div#action_buttons\", {\n      styles: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n      },\n    });\n    make_el(action_buttons, \"button#close_code_model\", {\n      innerHTML: \"Close\",\n      event_listener: {\n        event: \"click\",\n        func: close_modal,\n      },\n    });\n\n    function close_modal() {\n      code_modal.remove();\n    }\n  }\n\n  function fill_grid_cells() {\n    const grid_dims = { rows: get_current_rows(), cols: get_current_cols() };\n    const num_rows = grid_dims.rows.length;\n    const num_cols = grid_dims.cols.length;\n    // Grab currently drawn cells (if any) so we can check if we need to redraw\n    // or if this was simply a column/row sizing update\n    current_cells = [];\n    const need_to_reset_cells = current_cells.length != num_rows * num_cols;\n\n    if (need_to_reset_cells) {\n      remove_elements(grid_holder.querySelectorAll(\".grid-cell\"));\n      for (let row_i = 1; row_i <= num_rows; row_i++) {\n        for (let col_i = 1; col_i <= num_cols; col_i++) {\n          current_cells.push(\n            make_el(grid_holder, `div.r${row_i}.c${col_i}.grid-cell`, {\n              data_props: { row: row_i, col: col_i },\n              grid_pos: { start_row: row_i, start_col: col_i },\n            })\n          );\n        }\n      }\n\n      // Build each column and row's sizing controler\n      for (let type in grid_controls) {\n        // Get rid of old ones to start with fresh slate\n        remove_elements(grid_holder.querySelectorAll(`.${type}-controls`));\n        grid_controls[type] = grid_dims[type].map(function (\n          size: string,\n          i: number\n        ) {\n          // The i + 1 is because grid is indexed at 1, not zero\n          const grid_i = i + 1;\n\n          return make_css_unit_input({\n            parent_el: grid_holder,\n            selector: `#control_${type}${grid_i}.${type}-controls`,\n            start_val: get_css_value(size),\n            start_unit: get_css_unit(size),\n            on_change: () => update_grid(get_layout_from_controls()),\n            form_styles: {\n              [`grid${\n                type === \"rows\" ? \"Row\" : \"Column\"\n              }`]: make_template_start_end(grid_i),\n            },\n            drag_dir: type === \"rows\" ? \"y\" : \"x\",\n          });\n        });\n      }\n      const current_selection_box = make_el(\n        grid_holder,\n        \"div#current_selection_box.added-element\"\n      );\n      const drag_canvas = make_el(grid_holder, \"div#drag_canvas\");\n\n      drag_on_grid({\n        watching_element: drag_canvas,\n        grid_element: current_selection_box,\n        drag_dir: Drag_Type.bottom_right,\n        on_start: () => {\n          current_selection_box.style.borderColor = get_next_color();\n        },\n        on_end: ({ grid }) => {\n          name_new_element({\n            grid_pos: grid,\n            selection_box: current_selection_box,\n          });\n        },\n      });\n\n      // Make sure any added elements sit on top by re-appending them to grid holder\n      // Make sure that the drag detector sits over everything\n      [\n        drag_canvas,\n        ...grid_holder.querySelectorAll(\".added-element\"),\n      ].forEach((el) => grid_holder.appendChild(el));\n    } else {\n    }\n  }\n  function get_drag_extent_on_grid(selection_rect: Selection_Rect): Grid_Pos {\n    // Reset bounding box definitions so we only use current selection extent\n    const sel_bounds: Grid_Pos = { start_col: null, start_row: null };\n\n    current_cells.forEach(function (el) {\n      // Cell is overlapped by selection box\n      if (boxes_overlap(get_bounding_rect(el), selection_rect)) {\n        const el_row: number = +el.dataset.row;\n        const el_col: number = +el.dataset.col;\n        sel_bounds.start_row = min_w_missing(sel_bounds.start_row, el_row);\n        sel_bounds.end_row = max_w_missing(sel_bounds.end_row, el_row);\n        sel_bounds.start_col = min_w_missing(sel_bounds.start_col, el_col);\n        sel_bounds.end_col = max_w_missing(sel_bounds.end_col, el_col);\n      }\n    });\n\n    return sel_bounds;\n  }\n\n  interface Grid_Update_Options {\n    rows?: Array<string>;\n    cols?: Array<string>;\n    gap?: string;\n  }\n  function update_grid(opts: Grid_Update_Options) {\n    const old_num_rows = get_current_rows().length;\n    const old_num_cols = get_current_cols().length;\n    const old_gap = grid_holder.style.getPropertyValue(\"--grid-gap\");\n    const new_gap = opts.gap || old_gap;\n    const new_num_rows = opts.rows ? opts.rows.length : old_num_rows;\n    const new_num_cols = opts.cols ? opts.cols.length : old_num_cols;\n\n    // Make sure settings panel is up-to-date\n    grid_settings.num_rows(new_num_rows);\n    grid_settings.num_cols(new_num_cols);\n    grid_settings.gap.update_value(new_gap);\n\n    const grid_numbers_changed =\n      old_num_rows !== new_num_rows || old_num_cols !== new_num_cols;\n    if (grid_numbers_changed) {\n      // Check for elements that may get dropped\n      const all_els = current_elements();\n      let in_danger_els = [];\n      let auto_removed_el_ids = [];\n\n      all_els.forEach(function (el) {\n        const sits_outside_grid =\n          el.end_row > new_num_rows || el.end_col > new_num_cols;\n        const completely_outside_grid =\n          el.start_row > new_num_rows || el.start_col > new_num_cols;\n\n        if (completely_outside_grid) {\n          auto_removed_el_ids.push(el.id);\n        } else if (sits_outside_grid) {\n          in_danger_els.push(el);\n        }\n      });\n\n      remove_added_elements(auto_removed_el_ids);\n\n      if (in_danger_els.length > 0) {\n        const fix_els_modal = focused_modal({\n          header_text: `\n        <h2>The following elements dont fit on the new grid layout.</h2>\n        <p>Below, choose to either remove the element or to shink its bounds to the new grid sizing</p>\n        `,\n        });\n\n        const radio_inputs_html = in_danger_els.reduce(\n          (radio_group, el) =>\n            `\n          ${radio_group}\n          <div class = \"radio-set-group\">\n            <div class = \"radio-set-label\"> ${el.id} </div>\n            <div class = \"radio-set-options\">\n              <input type=\"radio\" id = \"delete_${el.id}\" name=\"${el.id}\" value=\"delete\" checked>\n              <label for=\"delete_${el.id}\">Delete</label>\n              <input type=\"radio\" id = \"shrink_${el.id}\" name=\"${el.id}\" value=\"shrink\">\n              <label for=\"shrink_${el.id}\">Shink</label>\n            </div>\n          </div>\n        `,\n          \"\"\n        );\n\n        const delete_or_edit_form = make_el(\n          fix_els_modal.modal,\n          \"form#delete_or_fix_list\",\n          {\n            innerHTML: `<div class = \"update-action-form\"> ${radio_inputs_html} </div>`,\n            event_listener: {\n              event: \"submit\",\n              func: function () {\n                const form = this;\n                const to_delete = in_danger_els.filter(\n                  (d) => form[d.id].value === \"delete\"\n                );\n\n                remove_added_elements(to_delete.map((d) => d.id));\n                const to_edit = in_danger_els.filter(\n                  (d) => form[d.id].value === \"shrink\"\n                );\n                to_edit.forEach((el) => {\n                  const el_node: HTMLElement = grid_holder.querySelector(\n                    `#${el.id}`\n                  );\n                  el_node.style.gridRow = make_template_start_end(\n                    el.start_row,\n                    Math.min(el.end_row, new_num_rows)\n                  );\n                  el_node.style.gridColumn = make_template_start_end(\n                    el.start_col,\n                    Math.min(el.end_col, new_num_cols)\n                  );\n                });\n\n                fix_els_modal.remove();\n                // Now that we've updated elements properly, we should be able to\n                // just recall the function and it won't spit an error\n                update_grid({\n                  rows: opts.rows,\n                  cols: opts.cols,\n                  gap: opts.gap,\n                });\n              },\n            },\n          }\n        );\n\n        make_el(delete_or_edit_form, \"input#name_submit\", {\n          props: { type: \"submit\" },\n        });\n\n        make_el(fix_els_modal.modal, \"p.notice-text\", {\n          innerHTML:\n            \"Note that elements residing completely in the removed row or column are automatically deleted.\",\n        });\n\n        return;\n      }\n    }\n\n    if (opts.rows) {\n      grid_holder.style.gridTemplateRows = sizes_to_template_def(opts.rows);\n    }\n    if (opts.cols) {\n      grid_holder.style.gridTemplateColumns = sizes_to_template_def(opts.cols);\n    }\n    if (opts.gap) {\n      // To give a consistant gap around everything we also add margin of same size\n      grid_holder.style.setProperty(\"--grid-gap\", opts.gap);\n    }\n\n    if (grid_numbers_changed) fill_grid_cells();\n\n    if (Shiny) {\n      Shiny.setInputValue(\"grid_sizing\", {\n        rows: grid_holder.style.gridTemplateRows.split(\" \"),\n        cols: grid_holder.style.gridTemplateColumns.split(\" \"),\n        gap: grid_holder.style.getPropertyValue(\"--grid-gap\"),\n      });\n    }\n\n    return grid_holder;\n  }\n\n  function get_layout_from_controls() {\n    const sizes = {};\n    for (let type in grid_controls) {\n      sizes[type] = grid_controls[type].map((unit_input) =>\n        unit_input.current_value()\n      );\n    }\n    return sizes;\n  }\n\n  function name_new_element({ grid_pos, selection_box }) {\n    const modal_divs = focused_modal({\n      background_callbacks: {\n        // Clicking outside of the modal will cancel the naming. Seems natural\n        event: \"click\",\n        func: reset_el_creation,\n      },\n      modal_callbacks: {\n        event: \"click\",\n        func: function (event) {\n          // This is needed to stop clicks on modal from triggering the cancel\n          // event that is attached to the background\n          event.stopPropagation();\n        },\n      },\n    });\n\n    const modal_div = modal_divs.modal;\n\n    make_el(modal_div, \"div.instructions\", {\n      innerHTML: `\n      <h2>Name your element:</h2>\n      <p>This name will be used to place items in your app.\n      For instance if you want to place a plot in this element,\n      this name will match the label of the plot output\n      </p>\n      `,\n    });\n\n    const name_form = make_el(modal_div, \"form#name_form\", {\n      event_listener: {\n        event: \"submit\",\n        func: function () {\n          const id = this[\"name_input\"].value.replace(/\\s/g, \"_\");\n\n          const element_exists: boolean = !!current_elements().find(\n            (el) => el.id === id\n          );\n          if (element_exists) {\n            // Cant have duplicate ids!\n            warn_about_bad_id(\n              `You already have an element with the id ${id}, all ids need to be unique.`\n            );\n            return;\n          }\n          if (id.match(/^[^a-zA-Z]/g)) {\n            warn_about_bad_id(`Valid ids need to start with a character.`);\n            return;\n          }\n\n          // Add the new element in to grid\n          add_element({\n            id,\n            color: selection_box.style.borderColor,\n            grid_pos,\n          });\n\n          reset_el_creation();\n        },\n      },\n    });\n    make_el(name_form, \"input#cancel_btn\", {\n      props: { type: \"button\", value: \"cancel\" },\n      event_listener: { event: \"click\", func: reset_el_creation },\n    });\n\n    make_el(name_form, \"input#name_input\", {\n      props: { type: \"text\" },\n      event_listener: {\n        // Don't leave warning message up while user is typing\n        event: \"input\",\n        func: hide_warning_msg,\n      },\n    }).focus(); // So user can immediately type in id\n\n    make_el(name_form, \"input#name_submit\", {\n      props: { type: \"submit\" },\n    });\n\n    function warn_about_bad_id(msg) {\n      make_el(modal_div, \"span#bad_id_msg.notice-text\", {\n        innerHTML: msg,\n        styles: { color: \"orangered\" },\n      });\n    }\n    function hide_warning_msg() {\n      const warn_msg = modal_div.querySelector(\"span#bad_id_msg\");\n      if (warn_msg) {\n        warn_msg.remove();\n      }\n    }\n    function reset_el_creation() {\n      // All done here so get rid of the whole interface.\n      modal_divs.remove();\n      // Remove the temporary dragged element\n      selection_box.style.display = \"none\";\n    }\n  }\n\n  // Adds a new element of a given id to the app. Both in the grid window\n  // and the addeded elements panel\n  function add_element({ id, color = get_next_color(), grid_pos }) {\n    const element_in_grid = make_el(\n      grid_holder,\n      `div#${id}.el_${id}.added-element`,\n      {\n        grid_pos,\n        styles: {\n          borderColor: color,\n          position: \"relative\",\n        },\n      }\n    );\n\n    [Drag_Type.top_left, Drag_Type.bottom_right, Drag_Type.center].forEach(\n      function (handle_type) {\n        drag_on_grid({\n          watching_element: make_el(\n            element_in_grid,\n            `div.dragger.visible.${handle_type}`,\n            {\n              styles: { background: color },\n              innerHTML: handle_type === \"center\"\n              ? drag_icon\n              : handle_type === Drag_Type.bottom_right\n                ? se_arrow\n                : nw_arrow\n            }\n          ),\n          grid_element: element_in_grid,\n          drag_dir: handle_type,\n        });\n      }\n    );\n\n    const element_in_list = make_el(\n      document.querySelector(\"#added_elements\"),\n      `div.el_${id}.added-element`,\n      {\n        innerHTML: id,\n        styles: {\n          borderColor: color,\n        },\n        event_listener: [\n          {\n            event: \"mouseover\",\n            func: function () {\n              this.classList.add(\"hovered\");\n              element_in_grid.classList.add(\"hovered\");\n            },\n          },\n          {\n            event: \"mouseout\",\n            func: function () {\n              this.classList.remove(\"hovered\");\n              element_in_grid.classList.remove(\"hovered\");\n            },\n          },\n        ],\n      }\n    );\n    \n    make_el(element_in_list, \"button.remove_el\", {\n      innerHTML: trashcan_icon,\n      event_listener: {\n        event: \"click\",\n        func: function () {\n          remove_added_elements(id);\n        },\n      },\n    });\n\n    // Let shiny know we have a new element\n    send_elements_to_shiny();\n  }\n\n  function get_grid_pos(grid_el: HTMLElement): Grid_Pos {\n    return {\n      start_row: +grid_el.style.gridRowStart,\n      start_col: +grid_el.style.gridColumnStart,\n      end_row: +grid_el.style.gridRowEnd - 1,\n      end_col: +grid_el.style.gridColumnEnd - 1,\n    };\n  }\n\n  function drag_on_grid(opts: Drag_Options): void {\n    let drag_feedback_rect: HTMLElement;\n    let start_rect: Selection_Rect;\n    let start_loc: XY_Pos;\n\n    const editor_el: HTMLElement = document.querySelector(\"#editor\");\n\n    opts.watching_element.onmousedown = function (event: MouseEvent) {\n      start_loc = event as DragEvent;\n\n      // make sure dragged element is on top\n      grid_holder.appendChild(opts.grid_element);\n\n      // If this is a new element drag there wont be a bounding box for the grid\n      // element yet, so we need to make a new zero-width/height one at start\n      // of the drag\n      start_rect = get_bounding_rect(opts.grid_element) || {\n        left: event.offsetX,\n        right: event.offsetX,\n        top: event.offsetY,\n        bottom: event.offsetY,\n      };\n\n      drag_feedback_rect = make_el(\n        grid_holder.querySelector(\"#drag_canvas\"),\n        \"div.drag-feedback-rect\",\n        {\n          styles: {\n            ...bounding_rect_to_css_pos(start_rect),\n          },\n        }\n      );\n\n      if (opts.on_start) opts.on_start(start_loc);\n\n      // Add listener to editor so we can continue to track this drag\n      editor_el.addEventListener(\"mousemove\", drag);\n      editor_el.addEventListener(\"mouseup\", drag_end);\n    };\n\n    function drag(event: MouseEvent) {\n      const curr_loc: XY_Pos = event;\n      // Sometimes the drag event gets fired with nonsense zeros\n      if (curr_loc.x === 0 && curr_loc.y === 0) return;\n\n      const new_rect = update_rect_with_delta(\n        start_rect,\n        { x: curr_loc.x - start_loc.x, y: curr_loc.y - start_loc.y },\n        opts.drag_dir\n      );\n\n      Object.assign(\n        drag_feedback_rect.style,\n        bounding_rect_to_css_pos(new_rect)\n      );\n      const grid_extent = get_drag_extent_on_grid(new_rect);\n      set_element_in_grid(opts.grid_element, grid_extent);\n\n      if (opts.on_drag) opts.on_drag({ xy: curr_loc, grid: grid_extent });\n    }\n\n    function drag_end(event: MouseEvent) {\n      const end_loc: XY_Pos = event;\n      drag_feedback_rect.remove();\n      start_rect = null;\n      start_loc = null;\n      if (opts.on_end)\n        opts.on_end({\n          xy: end_loc,\n          grid: get_grid_pos(opts.grid_element || this.parentElement),\n        });\n\n      editor_el.removeEventListener(\"mousemove\", drag);\n      editor_el.removeEventListener(\"mouseup\", drag_end);\n    }\n\n    function bounding_rect_to_css_pos(rect: Selection_Rect) {\n      return {\n        left: `${rect.left}px`,\n        top: `${rect.top}px`,\n        width: `${rect.right - rect.left}px`,\n        height: `${rect.bottom - rect.top}px`,\n      };\n    }\n  }\n\n  interface Element_Info {\n    id: string;\n    start_row: number;\n    end_row: number;\n    start_col: number;\n    end_col: number;\n  }\n\n  function current_elements(): Array<Element_Info> {\n    let elements: Array<Element_Info> = [];\n\n    (grid_holder.querySelectorAll(\".added-element\") as NodeListOf<\n      HTMLElement\n    >).forEach(function (el: HTMLElement) {\n      // Ignore the selection box\n      if (el.id === \"current_selection_box\") return;\n      const grid_area = el.style.gridArea.split(\" / \");\n      elements.push({\n        id: el.id,\n        start_row: +grid_area[0],\n        start_col: +grid_area[1],\n        // Subtract one here because the end in css is the end line, not row\n        end_row: +grid_area[2] - 1,\n        end_col: +grid_area[3] - 1,\n      });\n    });\n\n    return elements;\n  }\n\n  function send_elements_to_shiny() {\n    if (Shiny) {\n      const elements_by_id = {};\n      current_elements().forEach(function (el) {\n        elements_by_id[el.id] = el;\n      });\n      Shiny.setInputValue(\"elements\", elements_by_id);\n    }\n  }\n\n  function gen_code_for_layout(): Array<Code_Text> {\n    const container_selector = \"#container\";\n    const elements = current_elements();\n\n    const element_defs = elements.map((el) =>\n      concat_nl(\n        `#${el.id} {`,\n        `  grid-column: ${make_template_start_end(el.start_col, el.end_col)};`,\n        `  grid-row: ${make_template_start_end(el.start_row, el.end_row)};`,\n        `}`\n      )\n    );\n\n    const css_code = concat_nl(\n      `${container_selector} {`,\n      `  display: grid;`,\n      `  grid-template-columns: ${grid_holder.style.gridTemplateColumns};`,\n      `  grid-template-rows: ${grid_holder.style.gridTemplateRows};`,\n      `  grid-gap: ${grid_holder.style.getPropertyValue(\"--grid-gap\")}`,\n      `}`,\n      ...element_defs\n    );\n\n    const html_code = concat_nl(\n      `<div id = ${container_selector}>`,\n      ...elements.map((el) =>\n        concat_nl(`  <div id = \"#${el.id}\">`, `  </div>`)\n      ),\n      `</div>`\n    );\n\n    return [\n      { type: \"css\", code: css_code },\n      { type: \"html\", code: html_code },\n    ];\n  }\n\n  function get_current_rows() {\n    return grid_holder.style.gridTemplateRows.split(\" \");\n  }\n\n  function get_current_cols() {\n    return grid_holder.style.gridTemplateColumns.split(\" \");\n  }\n\n  // Get the next color in our list of colors.\n  function get_next_color() {\n    const colors = [\n      \"#e41a1c\",\n      \"#377eb8\",\n      \"#4daf4a\",\n      \"#984ea3\",\n      \"#ff7f00\",\n      \"#ffff33\",\n      \"#a65628\",\n      \"#f781bf\",\n    ];\n    const all_elements = grid_holder.querySelectorAll(\".added-element\");\n    // If we have more elements than colors we simply recycle\n    return colors[all_elements.length % colors.length];\n  }\n\n  // Removes elements the user has added to the grid by id\n  function remove_added_elements(ids: string | Array<string>) {\n    as_array(ids).forEach((el_id) => {\n      remove_elements(\n        document.querySelectorAll(`div.el_${el_id}.added-element`)\n      );\n    });\n\n    send_elements_to_shiny();\n  }\n}; // End of the window.onload callback\n\nwindow.onresize = function () {\n  draw_browser_header();\n};\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}