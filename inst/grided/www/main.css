/* Styles for my app */
body {
  --side-gaps: 0.7rem;
  --blue: #007bff;
  --light-gray: #9e9e9e;
  --gray: #cecece;
  --dark-gray: #4f4f4f;
  --off-white: #efefef;
  --off-black: #2c2c2c;
  --edge-round: 5px;
  --element_roundness: 10px;
  --browser-menu-height: 30px;
  --editor-radius: 10px;
  --outline-color: var(--light-gray);
  --editor-left-pad: 160px;
  --editor-top-pad: 110px;
}

#grided__holder {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 18px;
  display: grid;
  grid-template-columns: 300px 1fr 150px;
  grid-template-rows: 50px auto auto 1fr;
  grid-template-areas:
    "header       header header"
    "settings     editor editor"
    "instructions editor editor"
    "elements     editor editor";
  padding: var(--side-gaps);
  height: calc(100vh - 2*var(--side-gaps));
  grid-gap: var(--side-gaps);
  align-items: stretch;
  justify-items: stretch;
  background: white;
}

/* Styles that apply to every panel in grid */
#grided__holder > *,
.focused_modal {
  box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;
  padding: var(--side-gaps);
  border-radius: var(--edge-round);
}

h3 {
  margin: calc(-1 * var(--side-gaps)); /* Make header span top of boxes */
  background: var(--blue);
  padding: calc(0.75 * var(--side-gaps)) var(--side-gaps);
  border-radius: var(--edge-round) var(--edge-round) 0 0;
  color: white;
}

.panel-body {
  margin-top: calc(2 * var(--side-gaps));
}

/* Makes icons lineup better with the text in headers */
h3 > svg {
  margin-bottom: -5px;
}

* {
  box-sizing: border-box;
}

img {
  max-width: 100%;
  max-height: 100%;
}

#grided__header {
  grid-area: header;
  margin: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#grided__header > h2 {
  margin: 0;
}

.code_btns {
  display: flex;
  align-items: center;
}

#grided__header button {
  font-size: 1.2rem;
  height: 100%;
  margin-left: 5px;
}

#grided__settings {
  grid-area: settings;
}

button.minus_btn.disabled {
  opacity: 0.2;
  cursor: not-allowed;
  pointer-events: none;
}

.settings-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  justify-items: center;
  align-items: center;
  grid-gap: 0.75rem;
}

.settings-grid > .input-label {
  text-align: right;
  justify-self: end;
}

#grided__instructions {
  grid-area: instructions;
}


#grided__elements {
  grid-area: elements;
}

#grided__elements button.remove_el {
  background: rgba(255, 255, 255, 0);
  border: none;
  cursor: pointer;
}

#grided__editor {
  grid-area: editor;
  /* Leaves space for the row and column editing controls */
  padding-left: var(--editor-left-pad);
  padding-top: var(--editor-top-pad);
  padding-bottom: 1.5rem; /* So the add a row buttons on very bottom arent off screen */
  min-width: 400px; /* So when starting small stuff isn't squished to uselessness */
  overflow: hidden;
  position: relative;
}

#editor-wrapper {
  --grid-gap: 1rem;
  border: 2px solid var(--outline-color);
  border-radius: var(--editor-radius);
  width: 100%;
  min-height: 100%;
  position: relative;
  display: grid;
  grid-template-rows: var(--browser-menu-height) 1fr;
}

#editor-browser-header{
  --bar-height: 35px; /* Height of the url bar */
  --buttons-width: 70px;
  width: 100%;
  height: 100%;
  border-bottom: 2px solid var(--outline-color);
  border-radius: var(--editor-radius) var(--editor-radius) 0 0;
  background: var(--off-white);
  display: flex;
}

#editor-app-window {
  position: relative;
  width: 100%;
  height: 100%;
  overflow-y: scroll;
}
/* Make position absolute so we can easily position the controls where we want them */
#editor-app-window > div {
  position: absolute;
}

#buttons-container {
  width: var(--buttons-width);
  display: flex;
  justify-content: space-evenly;
  align-items: center;
}
#buttons-container > div {
  --button-size: 12px;
  background: var(--blue);
  width: var(--button-size);
  height: var(--button-size);
  border-radius: calc(var(--button-size)/2);
}

#url-box {
  --vert-offset: 3px;
  --url-box-height: calc(100% - 2 * var(--vert-offset));
  width: calc(100% - var(--buttons-width) - var(--vert-offset));
  margin-top: var(--vert-offset);
  height: var(--url-box-height);
  border: 1px solid black;
  border-radius: calc(var(--bar-height) - 2 * var(--vert-offset));
  display: flex;
  align-items: center;
  overflow: hidden;
}

#url-box > span {
  margin-left: 5px;
  font-family: monospace;
}


#grided__editor .added-element {
  background: none;
  /* pointer-events: none; So the cells beneath the elements can be selected still */
  position: relative;
  /* This is neccesary so that content doesn't force tracks to be larger than 
     requested */
  /* overflow: hidden;  */
}

/* Apply to both the list of elements and the elements in the grid itself */
.added-element {
  border-radius: var(--element_roundness);
  border-width: 3px;
  border-style: solid;
  transition: border-width .2s ease-in-out;
}

#added_elements .added-element {
  height: 35px;
  margin: 0 0 5px 0;
  padding: 0.65rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#added_elements .added-element.hovered {
  /* Emphasize by making a bit bigger */
  transform: scale(1.05);
}

#grided__editor .added-element.hovered,
#current_selection_box.added-element {
  border-width: 7px;
}

.added-element .dragger {
  --radius: 18px;
  font-size: 12px;
  position: absolute;
  height: var(--radius);
  width: var(--radius);
  cursor: grab;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--off-white);
  opacity: 0.5;
}

.added-element .dragger > svg {
  transform: scale(0.85);
}

.added-element .dragger.top-left {
  top: -2px;
  left: -2px;
  cursor: nw-resize;
}
.added-element .dragger.bottom-right {
  bottom: -2px;
  right: -2px;
  cursor: se-resize;
}

.added-element .dragger.center {
  top: calc(50% - var(--radius)/2);
  right: calc(50% - var(--radius)/2);
  border-radius: var(--element_roundness);
  cursor: grab;
}
.added-element .dragger.center:active {
  cursor: grabbing;
}

.added-element .dragger i {
  display: inline-block;
}

.added-element .dragger.top-left i {
  transform: rotate(315deg);
}
.added-element .dragger.bottom-right i {
  transform: rotate(135deg);
}

.added-element .dragger.top-left,
.added-element .dragger.bottom-right {
  border-radius: var(--element_roundness) 0;
}

.added-element.disabled,
.grid-cell.disabled,
#drag_canvas.disabled {
  opacity: 0;
  pointer-events: none;
}

#added_elements,
#grided__settings > div {
  position: relative;
}

#grided__settings > div.disabled::after,
#added_elements.disabled::after{
  content: "Interaction mode on:\AReturn to edit mode to modify elements";
  white-space: break-spaces;
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  padding-top: 1rem;
  text-align: center;
  background:#ffffffd4;
  cursor: not-allowed;
}



#current_selection_box.added-element {
  border-style: dashed;
  display: none;
  pointer-events: none;
}

/* This is filler text to make auto sizing work. It's invisible to the user
   so it doesn't distract. Not sure if this is the best way to do it but I think
   it's worth a go. 
*/
.added-element .filler_text {
  color: rgba(128, 128, 128, 0.5);
  user-select: none;
  display: none;
}
.added-element.in-auto-row .filler_text {
  display: block;
}


#drag_canvas {
  margin-left: calc(-1*var(--grid-gap));
  margin-top: calc(-1*var(--grid-gap));
  width: calc(100% + 2*var(--grid-gap));
  height: calc(100% + 2*var(--grid-gap));
  grid-row: 1/-1;
  grid-column: 1/-1;
  position: relative;
}

.drag-feedback-rect {
  pointer-events: none;
  position: absolute;
  background: linear-gradient(90deg, var(--dark-gray) 50%, transparent 50%), linear-gradient(90deg, var(--dark-gray) 50%, transparent 50%), linear-gradient(0deg, var(--dark-gray) 50%, transparent 50%), linear-gradient(0deg, var(--dark-gray) 50%, transparent 50%);
  background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
  background-size: 15px 4px, 15px 4px, 4px 15px, 4px 15px;
  animation: border-dance 16s infinite linear;
}

@keyframes border-dance {
  0% {
    background-position: 0 0, 100% 100%, 0 100%, 100% 0;
  }
  100% {
    background-position: 100% 0, 0 100%, 0 0, 100% 100%;
  }
}


