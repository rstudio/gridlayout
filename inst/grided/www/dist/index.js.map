{"version":3,"sources":["misc-helpers.ts","make_el.ts","draw_browser_header.ts","icons.ts","make_incrementer.ts","focused_modal.ts","make_css_unit_input.ts","make_toggle_switch.ts","find_rules_by_selector.ts","index.ts"],"names":[],"mappings":";;;;;;AGAa,OAAA,CAAA,kBAAA,GAAqB,+IAArB;ADAb,AGAA,AFIa,AGJb,AFAA,AGAA,ILAA,AGAA,ACAA,AFAA,AGAA,GJIa,CAAA,GDJb,AIAA,AFAA,ECAA,AEAA,CLAA,AIAA,AFAA,ECAA,AEAA,KLAA,AIAA,AFAA,CFAA,AIAA,AFAA,CCAA,AEAA,CFAA,AEAA,IJIa,GDJb,ACIoC,AGJpC,AFAA,CFAA,AIAA,AFAA,GCAA,AEAA,CFAA,AEAA,0JJIa;AAIA,OAAA,CAAA,aAAA,GAAgB,8LAAhB;ADNb,AGKA,AFKa,AGXb,AFAA,AGCA,IDDA,AFAA,GDWa,CAAA,CDVG,AGKA,AELA,IDDhB,AFAA,GEAA,AFAA,MCMA,CAA8B,ACN9B,AFAA,CEAA,AFAA,EDWa,CELb,AELA,CLAA,AKCE,CFI+C,AFKf,EDVC,GKAnC,CDDA,AFAA,CEAA,AFAA,AGGE,EHDF,MGDA,EAGE,OAHF,EAIE,SAJF,EAIqC,0HJMxB;ADTX,AGKA,AFQW,AIRX,MLLM,AGKA,AEAA,CJQK,CAAA,OIRI,CLLC,AGKA,AFQL,EIRO,CLLC,AGKA,AFQG,QDbK,AKKT,CLLU,AGKT,AEAD,CFAC,MEAD,CFAC,AEAO,CFCxB,KHNiB,AKKD,CLLyB,CKKT,CFCxB,CAAC,aAAT,CAAuB,GEDP,CAAlB,ELLmB,AGMjB,CHNF,AGKmB,EAEjB,wBAFiB,EAGjB,mFFKS;AEJP,AFQO,AGlBb,ACOE,EAAA,EFGI,ACVN,GHkBa,CAAA,GIXX,CAAA,IJWW,EERO,ACVpB,CHkBwB,AIXtB,CFGoB,AEHZ,CDPV,GDU0B,CAAC,GCV3B,CAAA,ACOE,EAAmB,cDPrB,CAAA,ACOE,EDAF,ACAsC,oIJWzB;ADhBL,AGOJ,AFaS,AGdb,AFNA,AGMI,GFFiB,CAAnB,AEEE,ELNI,CCoBK,CDpBL,ACoBK,CCpBG,EFGV,EKGO,EAAE,MLHC,CAAC,ACiBJ,GAAiB,ACpB9B,CAAiC,EAAjC,EAMC,aFHK,EAHE,2ICoBK;ADpBL,AGYN,AFYW,AGjBb,ACFsC,GAApC,GLJS,AGWH,ADXN,CDuBW,CAAA,GEZA,GAAG,CDXL,EDuBE,CDvBU,AEAZ,EDuBc,ACvBd,CFAY,AEAZ,EFAY,AGWP,CHXO,AGWP,KHZR,EGYQ,CAAQ,SGhBxB,CHgBgB,EAAoB,WAApB,EAAiC,yZFYpC;ADxBL,AMHR,AHgBI,AFeS,AGpBb,ACAE,IFKE,EHXQ,AEAV,AGMM,CJoBK,CAAA,AC1BX,GAAA,AGMW,EHNX,CAAA,AGMc,GJoBH,CEfK,CHXO,CGWL,AFeK,ED1BA,CKMT,CLNS,AGWD,AELR,CLNS,AGWA,MHbjB,AKQQ,CLVmB,AKUX,CLHtB,QKGc,EAAmB,cAAnB,CAAd,gHJoBW;AEhBoC,AFoBpC,AGvBb,ALZA,AMYE,EAAA,CFGc,CAAd,AJfF,EGKE,CD8BW,CAAA,GIvBX,CAAA,GHPS,GD8BE,AFnCb,AGKW,CGOT,CHPS,AGOD,CJuBgB,AFnC1B,IGKW,GHLX,CAAA,AMYE,CHPS,CAAA,AGOU,GHPP,CAAH,GAAI,OHLf,AMYE,CNZF,CMYqC,CNOrC,oGEgBa;AKlCb,ADYI,IAAA,EHPF,EAAA,CILc,EJKd,EAAA,AGOW,CHPX,CGOa,gBCZf,CAAuC,aAAvC,EAA4D;ANQ1D,AMPA,AHiBA,AEPmC,ELHnC,CKGA,GFOI,ADbJ,EAAE,ECaM,CAAC,ADbP,CFGQ,CAAC,AEHT,KAAA,IFGF,AGUA,CDbE,CCaoB,ADbpB,CFGqB,EAAvB,AEHK,CFL4B,CASjC,WEJE,GAAgB;AIHlB,AHiBE,ACPJ,ALOA,AMLE,EAAA,EFKE,EGjBI,AJIN,EAAA,CEMc,ALOP,EGbP,AGQA,CAAA,CFKE,ADbF,CCaE,ADbF,KHaF,AMLE,CNKkB,AMLV,CCZa,AHiBnB,CAAQ,EGjBc,CDYxB,EFKE,AJAJ,AMLiB,CDFjB,CDOmB,ACPiB,ALOD,EKPnC,EEVQ,AFmBP,CCPC,EAAwB,WFKtB,CGjBsB,CAAC,AHiBY,aGjBb,EAAsB;ANQ9C,AMRmD,AHkB/C,AJAJ,AMLE,IAAA,ELLI,AGUF,ACPJ,ALOM,AGdN,GGSO,ECb4C,AJI9C,AGSI,GLLK,ADUA,AGdT,CCcQ,ACPJ,CFPJ,CFIY,AGUF,AJAoB,CKP1B,EAAA,CEX2C,AHkBjC,ACPV,AFPJ,CCce,EJAsB,COlBS,APkBR,CGdtC,CIJ4D,AJI5D,GFIyB,ADUK,AGd3B,CHcyC,ECVhB,AGSI,GHTrC,ODUmC,CAAnC,EGdK,GAAmB;AIHtB,AHkBE,AJAJ,AMNW,MFMP,ACPJ,AFPA,AGQW,EDDX,AFPA,CHcO,CMNQ,CDDf,AFPA,CCcU,AENO,CCZd,AFWH,AFPA,CCcY,ACPZ,AFPA,GIJwB,APkBT,COlBU,EPkBP,QAAQ,CAAC,COlBxB,APkBuB,CAAR,CAAY,GOlBY,IPkBxB,CAAoB,GAApB,EAAyB,EAAzB,COlBhB,APkBa,GAAiC,IAAhD;ACVA,AMRuD,AHmBjD,AJAP,AMPU,KCb0C,ADY3B,CDAxB,AFPA,CFIK,CGWC,GHXG,CAAC,EIGF,CJHK,CAAb,CIGQ,CJHQ,AEJJ,CFIK,AIGT,EDQW,ADfP,EFIS,AGWA,ADfT,CFIZ,AIGQ,EJHgB,CAAC,CEJb,CFIZ,AIGQ,CAAA,CJHqB,EIGlB,AFPC,CAAA,CEOJ,EFPO,CEOF,SFPG,CAAD,EAAE;AFKf,AMTqD,AHkB3C,ADdU,AGSpB,APVJ,GQJE,CNUE,AKIA,APVQ,EMSV,EAAA,GAAA,AFRsB,EEQtB,ANTF,CEMc,AIGZ,CJHa,GELgB,AGSb,CHTc,CGSZ,EHTI,CAAY,CFKhC,AELoB,CAAA,GFKI,sBACX,CAAC,GAAG,QAAJ,GAAe,CADJ,GACK,4CADL,GAGV,QAHU,GAGF,qBAHtB;AAKD,AGEoC,AJKvC,AGjBsC,AGUhC,GLjB6B,AEOrB,CFYZ,CGAE,CCJF,AFRoC,AGUhC,GNOG,EMPE,EAAE,EDFF,GAAA,EAAA,CCCS,GNQpB,CKTW,ALSc,KKTd,CAAA,CLSX,EKTc,ALSyB,CKT5B,GAAI;AETb,AHmBC,AJAD,AGfA,AGQI,APZN,CAAA,KQAQ,AFUN,ALSM,AGfA,AGQF,EDFJ,ECEQ,CDFR,ANVU,COYA,CDFV,CAAA,ELSgB,GAAqB,CGfjB,AJJtB,EAAqB,CIII,GHeqB,AMPjC,CNOkC,COnBjB,GAAG,ADYrB,CNO2B,AGfd,CHe4B,AGf5B,AGQP,OHRO,CACrB,GIL6B,CAAA,EAAA,APmBM,CAArC,COlBK,CJGkB,EAErB,KILW,CAAC,GJKL,EAAP,GAAS,GINoB,CAAA,CAE7B,MAF6B,CAEtB,UAAC,WAAD,EAA2B,UJEb,EAGrB;AIJA,APiBF,AGZI,AGKE,APZN,EAAA,EIOI,EEEJ,ECGM,CNOC,EOjBL,ARFF,CAAA,CIOa,EAAE,CEEL,CCGK,CAAE,CDHP,ALUO,EKVP,CLWN,ADpBJ,COYsB,APZtB,CQEE,ADUqB,CCVrB,CFOQ,ANTV,CQEE,EAAI,CDUW,CDHP,ACGyC,CDHzC,GAAG,ALWT,CAAA,ADpBJ,ECoBI,AMRW,CDHL,ACGJ,CCVW,APkBT,COlBU,CFOD,EFFuB,EILtC,CAAA,CAAuB,CJKV,CHaX,CAAA,COlBF,APkBkB,AGbyB,CILf,EPkB1B,CAAoB,UAAA,CAAA,COlBqB,CAAC,APkBrB,aOlBoB,CAA3C,CAAA;ANWF,AMX6D,AHkB7D,AJA6B,AGd3B,AGOG,APZL,EAAA,CQF+B,AJIR,CIJvB,AJIA,EFUM,AIHN,EAAA,CDUO,ECVP,ALU6B,ADnB7B,CCmB8B,ADnB9B,CMSA,ALU+B,CKV/B,KJGmB,CDOU,CAAU,CCPjB,GDOO,CCPH,AFZ1B,CCmB6C,ADnB7C,ECmB6B,CAAA,ADnB7B,IEYsB,GAAe,CAArC,CApBiC,CAqBjC,IFbA;AKoBE,AJD8C,AGThD,AGFkB,APPlB,EAAA,CCkBI,CICF,AJFe,EKTjB,AFCM,CHUF,IAFJ,ADjBA,CAAA,EKmBY,CCXH,CDWG,ADVI,EEDP,CFCU,CEDV,ANRT,CAAA,GAAA,CMQS,CDUF,EDTY,CAAA,CEDV,CAAA,CNRT,EMQY,EFCO,CAAQ,OEDd,CAAD,EAAU,IFCH,EAAwB,+BAAxB,CAAnB;AFIA,AMVA,AHiBE,ACZyB,ALY5B,AGTC,AGNwB,APJzB,CAJD,CCyBA,CMjBE,APRU,CKuBR,EHPI,AMVA,AJQA,GCSC,EAAA,ACZoB,CNXR,EQML,CJQC,AJdL,CKqBH,CGfkB,CFKS,AFGhB,CEHiB,GAAR,ANXjB,CMW6B,ANX7B,CEgBc,GAAG,AEFT,CAAA,GFElB,CFhBU,GIcQ,CAAQ,CJdhB,EQMqC,CAAC,AFKrB,EAA+B,CAA/B,CAAA,ANXjB,CAAA,CQMV,AJQkB,EAAoB,MJd5B,GAAS,EAAT,CAAZ,GAMA,oBIQoB,EAAyD;AFG3E,AGOE,ACb0D,ALe9D,AGXI,AGGF,EAAA,CDPS,CDaP,ADTA,EFEI,AINsD,GFIrD,CCSC,CDTC,AGGT,CFMU,AENV,OAAA,CLDoB,AKCZ,GLDe,COzBzB,CF0BE,EAAe,GFML,MHP0B,GAAG,CKCvC,EApBmC,CAsBnC,cLHA;AACA,AMXA,AHiBgB,AJGlB,AGZY,MFGJ,AMXH,AFKH,AFGU,EEHV,EFGc,CEHd,CFGgB,CCSA,ACZhB,CELW,AFKX,KELgB,CNWI,AMXpB,EAAkB,CNWK,AMVrB,AHgBwB,CHNF,AGMG,MAAX,EAAA,KHNqB,GAAG,cAAjB,IAAmC,CAA1D;AACA,AMVC,AHekC,AI/BrC,ALsBW,AGMT,APdF,EEYE,CMZA,CCdF,CLqB6E,CEF3E,ACSM,GCZC,ARFO,GEYJ,CAAC,AO1Bb,GAAA,CF4BmB,EDTJ,CCSsB,ELFnC,AIPa,CGnBf,CAAA,AHmBe,EJOW,EKEmB,CDT9B,ACS+B,GPd9C,CAAwC,CMKzB,CGnBf,AHmBe,CGnBf,EHmBkB,ANLlB,CMKmB,CCSkB,APdkB,COcG,CAArB,CDTnB,ACShB,APdF,EEac,AIRW,ANL0C,IMKjD,EAAa,KAAb,CAAH,CJOW,EIPW,CJQV,kBADD,GAEZ,cAFY,GAEE,sBAFF,IAGR,YAAY,GAAG,aAAf,GAA+B,EAHvB,IAGyB,uBAHzB,GAIP,aAAa,GAAG,kBAJT,GAI2B,mGAJ3B,GAQX,cAAc,GAAG,CARN,GAQO,mBARP,GASX,cAAc,GAAG,CATN,GASO,gBAT/B;AAYA,AMrBE,AHWK,ADLL,AGOF,APfA,EOeA,CFFA,CDLE,EFeI,AIlBN,EAAA,GAAA,EAAA,AFGW,AGOA,CDVX,ACUY,CHPC,EFeI,GAAG,EEfP,CAAA,CGOb,CAAuB,ELQH,CAAA,KAAA,AEjBuD,GFiB/C,oBAAR,GAA+B,mBAAnD,+JKRA;ALSA,AMrBE,AHeH,AIhCD,ARkCA,AGXI,AGiBF,APzBA,EEuBA,AKEA,EExCF,ALuBI,EEJF,GLec,EOjBJ,CNqBA,CAAC,AKEA,CAAC,ENNd,CKfa,ALgBX,CGZgB,EEJL,AFIO,EFelB,AInBW,CLeb,COjBY,ADuBV,CCvBU,ACjBZ,ARoCE,AMIuB,CLFC,CMrBd,AFEC,CGnBb,CDiBgB,GFEH,ALeb,CKfa,CLkBX,CQrCF,CAAA,AHmBgB,EAAH,ALeb,EAGyB,CKlBP,KJoBJ,KMtBwB,CAAC,ONsBZ,AOvC3B,CDiB+C,ACjB/C,EPuC8B,CMtBkB,CNqBtB,AMrBY,CAAtB,CAAmC,ENsBnB,MMtBpB,CAAA,CAAiD,IAAjD,CACN,KNoBoB,AKExB,GLAY,OMtBO,CAAC,KNsBK,GAAG,CAFJ,GAEK,CMtBV,CADT,EAEW,KAFnB,gDNqBsB,GAKpB,WALoB,GAKT,eALf;AAQD,AMzBE,APgBD,AGbI,AGqBJ,AP7BA,EO6BA,IDzBA,ALiBA,AGbI,AJRE,EMIN,ELiBA,CKjBA,AFIS,EEJT,AFIW,AGqBA,CDzBX,ACyBY,CNRZ,KAAA,AGdkB,AJPE,CCqBpB,EAAA,ADrBgC,CO6BhC,CAAuB,GP7Bc,GAAG,CAAxC,CAHiE,CAKjE,8DO2BA;ACvBD,AHjBD,AIJA,ARoCE,AGZI,AG0BJ,APhCA,EOgCA,EElDF,ARoCE,EKjBA,AFKI,CCpBN,CAAA,AJgCE,EGZQ,CHYR,CGZU,CHYV,AMcW,CD/BH,AC+BI,GD/BJ,EAAA,EDfV,CIJA,EJIA,ACeU,AC+BR,CElDF,AFmDI,IDhCM,AFKmB,CELnB,AFKoB,CAAC,CKxB/B,ALwB6B,CKxB7B,AHmBa,IDfb,ECeU,GAAS,WGnBnB,CAAA,6EFkDE,EAOE,CAPF,EA/CmC,CAyDnC;AL7DF,AIsBE,ALeuB,AGdL,MEDZ,CJtBR,CAAA,QIsBkB,GAAG,QJtBrB,AIsB6B,GJtB7B,EIsBkC,MAAhC,WJtBF;AMAA,ACEA,AHsBE,AFJ2E,AG0C3E,AP1CA,EO0CA,AP1CA,CIAkB,CKlBpB,ALkBE,CJAG,CMIG,CExBR,CAAA,ARoBQ,EMII,CNJD,EMII,ACsCF,CAAC,AP1CA,GAAG,ESlBjB,CTkBoB,CAAT,CSlBX,AHsBe,CAAA,CCsCb,AP1CsB,CO2CpB,IE7DJ,ATkB6B,CQpB7B,ACEA,AHsBe,CAAQ,EExBvB,ARoBiC,OMIlB,EAAmB,KGtBlC,ATkB+C,CSlB/C,ETkBkD,CMIT,ANJU,CAAJ,GQpB/C,ARoBuD,CAA1B,CAA3B,CAPiE,CMWjC,ANHhC,GMG+C,iBAAlC,EAAqD,cCsClE,EAME,CANF;ADrCE,ALeF,AGZA,AG2CA,EAAA,ED9CE,ELeI,AGZA,IEHE,EAAE,CC8CC,CN/BG,AM+BF,GN/Ba,EGZN,GAAG,CEJ4C,CLgBlC,AM+BhC,CN/BiC,AMgC/B,KNhCuB,CAAc,AGZjB,CAAA,OAAA,CAAQ,KHYL,EAA8B,CAA9B,CAAzB,CGZsB,EAAoB,6BAApB,EAAmD,0KG2CzE,EAaE,CAbF;AEpEF,AHuBI,ALeF,AGZE,AGyDF,AP/DA,EO+DA,EEnFF,AHuBI,AFGA,EHYI,GDlBI,ECkBC,EGZA,AGyDA,CN7CG,AM6CF,AP/DG,CIMF,EJNE,CMGC,EAAE,CACd,CNJM,ECkBc,AGZF,AGyDtB,CEnFF,ARsC2B,AGZF,AG0DrB,APhEmB,GSpBvB,AToBE,ICkBwB,CAAxB,AGZa,EK1Bf,CAAA,uBAAA,CAAA,mNFmFE,EAaE,CAbF;AD3DM,ALeN,AGdyE,AGyEzE,AP7ED,EO6EC,CHzEsB,CAAtB,EEDM,ALeA,KKfK,EAAE,AC0EF,CAAC,EN3DI,GAAG,EKff,GC0EJ,CACE,SN5DgC,CAAC,OAAD,CAAlC,8CM2DA,EAIE,CAJF;AEjGF,AHuByB,ALiBvB,AGZA,AG2EA,EH3EA,AG2EA,EEvGF,EHuByB,ALiBnB,EAAE,EKjBqB,CLiBL,AGZtB,CEL6B,AFK7B,CG2EW,CAAC,GN/DgB,CQxC9B,ARwC+B,CGZ7B,CAAQ,CK5BV,GFuGE,CACE,GExGJ,CAAA,CL4BE,CHYsB,CAAqB,AGZvB,OHYE,CAAtB,KQxCF,CAAA,oBL4BE,EAAwD,qBG2ExD,EAIE,CAJF;ADhFI,AFMF,AGgFF,APpGF,EOoGE,EHhFE,CEPgB,EAEd,ANfN,CAAA,CIoBS,EAAE,EGgFE,CAAC,UAAZ,CACE,MPrGJ,GAAA,uBAAA,yHOoGE,EAME,CANF;AE5FF,AHQQ,ALgBN,AGZU,AGwFX,IEpGD,EHQQ,ALgBF,AGZM,CHYL,EAAL,CGZc,CEJH,ALgBF,CGZO,CEJH,QADT,GGPN,GAAA,OAAA,CAAA,sBAAA,CAAA;AHSQ,ALgBJ,AGbO,AJPX,KIM0D,CEFlD,GNJQ,CMIJ,EAAE,cAAU,CAAV,CNJd,CMIyB,ANHvB,EADF,EAEE,WAFF,EAGE,SAHF,EAGiC;ASPjC,AHSU,ALgBN,AGbA,AGlCJ,AP+BE,ISTF,ARyBI,AGbA,EHaE,ADhBA,CO/BN,CAAA,CN+CS,EQzBT,ELYa,CKZb,CLYe,EHaE,ADhBA,CCgBC,ADhBA,GSTlB,CAAA,ALYe,CAAA,GGlCf,CP+BE,EO/BF,AP+B6B,EST7B,ARyBS,CQzBT,ARyBgC,AGf0B,QHejD,CAAL,MM/CJ;ADgCU,AFGN,AJHA,IIGA,AJHA,EAAE,CAAC,CMAG,CAAC,CAAC,ENAR,CAAS,KIGK,EAAE,IEHV,CNAN,GAAwB,WAAW,CAAC,SAAZ,CAAsB,QAAtB,EAAxB;ASTJ,AHUS,ALeL,AGZE,AJHH,ISVH,ELaM,EHYE,GGZG,EHYP,AGZS,EHYE,KGbK,QKZpB,GAAA,OAAA,CAAA,0BAAA,CAAA;AHKM,ALqBA,AGZA,KEXc,CFWd,IAAI,EAAE,iBAAiB,CAAC,CAAD;AKZhB,AHDuD,AL0B9D,AGfc,AJDlB,GMVa,CAAb,EL0BI,ADhBA,CSTO,CAAA,ARyBL,CAAC,EAAH,EQzBO,CRyBC,EQzBQ,CTSL,CAAC,CCgBZ,GQzB8B,CAAC,ETSnC,EAAyB,CSTd;AA6Bb,AHhBE,ALaG,AGnBqD,AJGtD,GIHF,CKsBS,ATnBP,EMGI,ANHF,CAAC,KSmBP,ATnBI,CAAS,IMGM,GACf,GNJA,GAAsB,CAAC,EMIvB,CAAA,OAAA,CAAQ,ANJ0B,CAAC,GMInC,EAAc,ENJS,GAAsB,CAAvB,EAA0B,QAA1B,EAAtB,UMIA,EAA4C;AAC1C,ANJH,IMIG,KAAK,EAAE;AGcb,AHbQ,ALYJ,AGZF,CKaF,KHbQ,ELYA,EKZI,CGaD,ALbA,CEAG,MLYV,CQCJ,CHda,ALaO,CQCD,ELbjB,CAAsB,SAAtB,EAAuC;AKcvC,AHbM,ALYF,AGZF,AJLF,ESkBA,ELbE,EEAI,ALYF,ADjBA,GMKK,CGaT,CAAA,AHbW,CAFA,ILcG,CAAC,AGZA,AJLA,CIKC,AJLA,CSkBhB,CAAA,IRDI,CAAmB,EGZrB,AJLF,EAA2B,CSkB3B,ALb4B,CKa5B,GAAA,CAAA,ARDwB,CQCxB,ARDuB,EAAE,CQCzB,ALbqC,CAAC,QAAV,CKa5B,CLbE;AKcF,AHbM,ALWwB,ADhB5B,ESkBF,ETlBE,EMKI,ANLF,CAAC,GSkBL,CAAA,AHbW,CNLT,CMKW,ANLF,ECgBmB,EAAE,CAAC,CQEjC,CAAA,EHhBW,KLcmB,CAAa,ADhBzC,GCgB4B,ADhBD,CCgBkB,CAAjB,CAAA,CQE9B,CAAA,GAAA,CAAA,CAAA,CTlBwC,CAAC,CSkBzC,QTlB6B,CAAsB,MSkBnD,ETlB6B,EAA3B;ASmBF,AHbM,ALU2C,AGV/C,AJLD,ESkBD,IHbM,CLUF,CGVE,EKaN,AHbU,CGaV,CHbY,CAJD,IFII,EKaf,CAAA,ELboB,CAAlB,EAAqB,OKavB,CAAA,GAAA,CAAA,CAAA,GAAA,YAAA;AACD,AHbO,ALUH,AGVC,CKSN,EAAW,GLTL,KKSa,ILTJ,CKSJ,ALTK,GEAK,KGSF,CLTb,CAAoB,CKSP,EAAA,ALTb,CKSN,ALT8B,UAAxB;AELO,AFMR,AJNH,KIIE,CJJE,KIMK,MJNM,CAAC,OAAhB,EAAyB;ASmB3B,AHpBgD,ALkB5C,AGVE,AJNF,GMFA,CADF,ANGE,ESkBE,ALZA,AJNA,CSkBC,ATlBA,CCgBC,IAAI,ADhBR,CSkBJ,ARFa,ADhBA,EIME,CKYC,ALZA,EHUZ,EAAgB,KGVd,CAAoB,AJNtB,ESkBY,CTlBa,CAAC,EIMxB,CAA2B,QJNQ,CAAC,CIMpC,MJNwB,GAAsB,CAAvB,EAA0B,QAA1B,EAAzB;ASmBF,AHVA,ALQI,AGVD,AJNF,ESkBD,IHVM,ALQF,MAAM,CAAC,MKRQ,ALQf,CAAc,EKPhB,ALOE,CQEJ,CAAA,ARFsB,IAAI,CAAC,EKPzB,CAAA,ELOE,KKPF,CAAQ,GGSV,CHTE,EGQY,AHRE,CGUhB,6BHVE,EAA8C;AGWhD,AHVI,ALOD,AGVF,IEGG,KAAK,EAAE;AAAE,ANRb,EAAA,EAAE,CAAC,CMQU,IAAI,ANRjB,CAAS,CMQU,MNRnB,GAAmB,OAAnB,CAf+B,CAeH;ASmB5B,AHXW,ALST,AGXF,AJLD,ICgBG,EQEI,IRFE,CAAC,AGXA,QKaU,GAAG,ARFpB,CAAmB,EAAnB,GGXF,CAA2B,MAA3B,EAAiC;AKaT,AHZwB,ALW/C,AGXC,GEAA,CGYsB,AHbxB,IGa4B,EAAE,CLZrB,CKYa,WLZb;AKYyB,AHPlC,AFJI,AJ1BN,ISqCoC,EHP5B,CN9BR,CSqCwC,ATrCxC,ESqC0C,ALX9B,GEIG,GAAG,GFJG,GAAG,CAAC,EEIP,CAAA,CN9BlB,GAAA,GM8BkB,CAAQ,EFJY,CAAC,CEIrB,EAAc,MFJR,GAA2B,AJ1BnD,EAqBA,IIKM,aEIY,EAA4C;AGOtC,AHNpB,ALOF,AGVI,AJNN,GSeE,CAJc,AHFZ,CGOF,CRAI,AGVA,IHUI,CAAC,EKPE,EAAE,GFHG,CAAC,IEGI,ELOrB,EAAyB,CKPC,AFHV,CAAZ,EEGS,GAAmB,OAAA,CAAA,kBAAnB,GAAwC,OAAA,CAAA;AADO,ALS1D,AGVE,GECY,CAAhB,ALSE,CK5CH,CAuCC,AFLI,YHUF,AGVc,CHUd,AGVe,QHUf,CAAS,AGVK,CAAZ,GHUW,CAAC,cAAd,EAA8B,OAA9B,CACE,UAAC,QAAD,EAAS;AQDb,AHJA,ALKkB,AGVf,AJPL,KIEI,CKcE,GThBU,ICiBK,EAAE,CAAC,GQDL,GAAG,CRCS,CQD7B,CANc,CAQd,ITlBF,CCiBuC,ADjBD,CCiBE,GDjBxC,ECiBuB,ADjBkC,CCiBpC,GAA4B,QAAQ,CAAC,IAAtC;AQElB,AHNA,ALI6D,AGT5D,AJPD,KCeE,IDfK,MAAM,CAAC,IAAD,EAAO,GAAP,CAAb;ASmBA,ARDC,ADjBF;AMYC,AFJA,EEIA,OFJO,EEIP,CAAA,OAAA,CAAQ,CFJR,MEIA,EAAiB,kCAAjB,EAAqD;AGOrD,AHNE,ALMF,AGVD,AJXD,IMeI,EGMI,ARAF,CDrBN,CAAA,CMeS,CLMC,CKNC,ALMA,MQAQ,ARAjB,EAAiB,CQAgB,QAAQ,CAAC,ATrB5C,GAAA,USqBmC,CAAuB,UTrB1D,ESqBmC,CAAjC;AAEA,AHRW,ALOT,IAAA,EQCI,AHRK,ILOH,CAAC,IKPW,EAAE,ALOpB,CAAc,EQCI,ARDF,CAAC,EQCiB,GRDlC,EAAwB,GQCkB,CAAC,ARDf,CAAC,MAA7B,MQCkC,CAClC,sBADkC,CAApC;AAIA,AHZS,ALQR,AGtEH,AJmDA,KMUuD,CGa/C,CL1ER,CAAA,CJmDgB,MAAhB,CACE,GSsBmB,GAAkB,EL1EvC,EJmDA,CInDA,CJqDE,aAFF,EInDA,AJqD6B;ASsBzB,AHZA,ANVF,ISsBE,AHZA,ENVF,MSsBU,EAAE,IHZI,CNVhB,CMUkB,CACd,GNXJ,KAAA,CAAA,ESsBY,ATtBZ,CSsBY,gBAAA,CAAiB;AACzB,AHXE,ALON,ADnBA,IAAA,ESuBI,AHXE,ALOF,IAAI,CKPG,ALOF,EKPI,EGWA,EAAE,ATvBf,GCmBA,ADnBA,ECmBoB,CDnBpB,CMWI,OGWyB;AAEzB,AHXE,ALOJ,ADpByB,ICoBzB,EQIE,AHXE,ALOF,CAAC,CQIC,EAAE,AHXE,EAAE,ILOV,GAAe,CQEY,GRFR,CAAC,EKPA,KAAV,EAAe,ALOzB;AQKE,AHXI,ALOP,MQIG,OHXS,EGWA,EAAE,CAHc,EHRrB,CAAa,QAAb,GAAwB,WAAW,CAAC,KAApC;AGYJ,AHXI,ANbR,MSwBI,GTxBG,ESwBE,EAAE,AHXE,MNbI,CMaT,ANbU,CMaG,KAAb,ANbD,CACL,ESmB2B,AHPA,KAAK,CAAC,ENZhC,MMY+B,CAA1B,ENZN,EAAY,OAAZ,EAAqB,CAArB,EAAsB;ASwBpB,AHXG,ALOP,ADnBI,MSuBA,ARJA,IAAI,CAAC,ADnBL,OSuBY,EAAE,ATvBL,CCmBb,EAAqB,CDnBJ,CAAC,GAAG,CAAJ,GAAQ,USuBN,CAAD,EAAE,ATvBH,GAAwB,EAA5B,CAAT,GAA2C,OAA3C;ASuBqB,AHhBrB,ALaF,ADpBoD,GAF/C,CCsBL,CKdgB,ANLhB,EMaE,ANhBG,CAAP,ECsBQ,CAAC,IQGgB,ERHvB,CAAc,EAAE,CAAC,OAAjB,EAA0B,IAAI,CAAC,GQGe,CAAC,MAAD,ARH9C,EQGuD,CAAT,CAAvB;AAAkC,AHRrD,ALML,ADlBF,MMYO,KAAK,EAAE,MADT;AGIyB,AHFvB,KGEM,CADyB,AHD/B,IAAI,EAAE,cAAU,KAAV,EAAe;AGSzB,AHRM,ALMR,AD7BF,IS+BI,ERFE,CD7BN,CAAA,EC6BU,CAAC,CQEC,AHRI,EGQF,AT/Bd,GAAA,EC6BE,CKNsB,CLMH,EKNM,ANvB3B,KMuBgC,CAAC,GGQnB,CAAA,IHRkB,CAAtB,CADmB,CAEnB,SGOI,CAAiB;AACzB,ARFF,IAAA,EQEE,SAAS,EAAE,CRFb,CAAA,YQC2B,ORD3B,CAAoB,EAApB,EAAwB,IAAI,CAAC,QAA7B;AQGE,AHRI,ALMP,ADpBH,MSsBM,EAAE,CTtBQ,CSsBN,EHRI,MNdd,ESoB+B,AHNT,CNdG,IMcE,CAAjB,EAAoB;AGSxB,AHRI,ANfgB,MSuBpB,ATvBoB,MMeV,GGQD,EAAE,CAHc,GHLN,ENfC,CMeE,ENfF,EMeM,ANfN,CMeO,GAAL,CAChB,CADgB,EAEhB,CAAC,KAAK,OAAL,CAAa,QAAd,IAA0B,KAAK,CAAC,QAAD,CAAL,GAAkB,KAAK,OAAL,CAAa,KAAzD,CAFgB,CAAlB;AGSJ,AHLI,ALGR,MQEI,EHLI,CLGD,EQEE,ARFT,EQEW,MHLQ,CAAC,KAAZ,GAAoB,CGCC,QHDQ,CAAC,QAAV,EAApB;AGMJ,AHLI,ALGT,MQEK,CTzBoB,CMoBhB,GNpBgB,EAAA,GAAA,CMoBP,CGKD,AHLE,CNpBM,CSyBN,CTzBM,GAAA,OMoBO,EAAd,ANpBO,CMoBhB,ANpBgB,QSyBL,ATzBK,CSyBN,CTzBM,CSyBJ,GTzBkC;ASyB7B,AHJlB,ANrBiB,IAAA,WSyBC,MTzBD,CAAA,EAAA,CAAA,GAAA,SAAA,CSyBwB,ATzBxB,CSyByB,CTzBzB,CAAA,ISyBwB,EAAS,CAAT,CAAvB;AAAkC,AHhBvD,ALvCN,KK+BoB,EL/BpB,CAAA,OAAA,GAAA,OAAA,EAuDA;AQL+B,AHrBwB,GAArD,EGqBY,CARyB;AAenC,AHDF,ALAF,ADzBE,EMyBA,EGCE,GAAG,EAAE,ARDO,ADzBP,MMyBM,ANzBA,CMyBC,ANzBA,OMyBd,CAAsB,ALAxB,CAAgC,KQCvB,CAAA,ET1BM,CMyBmB,CNzBC,GCyBnC,CDzBe,CCyBmD,ADzBhE,GMyBsB,EAAmB,KGClC,CAAoB;AACvB,AHDF,ALAF,ADzBD,ECyBC,IQCI,EHDI,OGCK,ARDA,CAAC,CQCC,EHDI,GACf,CLDJ,CAAsB,EQCP,CAAA,IHAX,CAAA,EGAW,ARDQ,CQEjB,ARFgB,EAAE,EKCpB,CAAQ,SGAG,EAET,EHFF,EAAuB,YAAU,SAAjC,EAA8C,0BGAnC,EAGT;AACE,AHHF,ALFuB,MKEvB,EGGE,GHHG,ALFkB,CAAC,CKEjB,ALFkB,IQKd,EAAE,ARLU,EAAA;AQIvB,AHFS,ALFwB,AD3BzC,GC2BE,IQCe,AT5BjB,CS2B6B,AHEZ,AN7BjB,KM6BsB,EAAE,EN7BxB,GAAA,SAAA;ASmCM,AHNS,ALDd,MQOK,CHP8C,OGOtC,EAAE,mBARa;AASvB,AHNE,AN1BR,MSgCM,AHNE,GN1BQ,MSgCD,AHNE,EGMA,AHNE,CN1BnB,GAAyB,eSgCP,CAAD,EAAE;AAAK,AHR4B,ALFpD,ADtB0B,KMwBpB,CADF,ANvBsB,CCsB1B,CAAA,OQUwB,QRVxB,ADtB0B,GSgCS,ARVnC,ADtB0B,CSgCU,CThCV,aCsB1B;AQUsC,UAAA,GAAG,EAAE;AAAP,AHFhC,ON9BsB,CM8BlB,CGE2B,CAAX,CThCE,EAAA,GAAA,CM8BT,EN9BS,EAAA,CM8BJ,EN9BI,QM8BtB,CN9BsB,CM8BQ,AN9BR,QAAA,EAAA,IAA8B;ASgCT,AHDzC,AN/BoB,IAAA,EM+BpB,CGRuB,UHQZ,CAAC,GN/BQ,CAAA,EAAA,CAAA,CM+BpB,EN/BoB,CM+BG,IAAvB,IN/BoB,CAAA,EAAA,CAAA;ASiCpB,AHDD,MGCC,aAAa,EAAE,CAAC,IAAD,EAAO,KAAP;AAVQ,AHU1B,GAXD,EGCO;AAf8B,ATPrC,GSOA,MTPO,MAAM,CAAC,iBAAD,EAAoB,GAApB,CAAb;AMiCA,ANhCD,WMgCU,aAAT,GAAsB;AGGtB,AHFE,WGEO,AHFA,KAAG,WAAW,CAAC,KAAf,CGET,CAAiC,CHFD,EGEhC,EAAsC,SAAtC,AHF6C,CAAC,CGEC,IHF7C;AACD,ANpCH,OAAA,CAAA,SAAA,GAAA,SAAA;;ASsCI,AHDF,ANjCF,QSkCU,CTlCM,EMiCL,MNjCX,CAA4B,ESkCN,AHDpB,GGEI,AHFc,ENjCpB,CSmCS,CTnCwC,ISmCnC,MAAR,GAAiB,gBAAgB,EAAjC,GAAsC,gBAAgB,EADxD;AHAA,ANjCF,MAAI,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","file":"index.js","sourceRoot":"..","sourcesContent":["import { Grid_Pos } from \"./index\";\n// Functions related to grid construction\n\nexport interface XY_Pos {\n  x: number;\n  y: number;\n}\n\nexport enum Drag_Type {\n  top_left = \"top-left\",\n  bottom_right = \"bottom-right\",\n  center = \"center\",\n}\n\n// Builds the start/end css string for a grid-{row,column}\nexport function make_template_start_end(start: number, end?: number): string {\n  // If we only have a single value just assume we take up one row\n  // If single index is a negative one, we need to subtract instead of add to it\n  const negative_index: boolean = start < 0;\n\n  // Grid works with lines so if we want an element to end at the 4th column we\n  // need to tell it to end at the (4+1)5th line, so we add one\n  end = end ? end + 1 : start + (negative_index ? -1 : 1);\n  // end = end ? +end + 1 : start + (negative_index ? -1 : 1);\n\n  return `${start} / ${end}`;\n}\n\nexport function set_element_in_grid(\n  el: HTMLElement,\n  grid_bounds: Grid_Pos,\n  el_styles?: CSSStyleDeclaration\n) {\n  if (grid_bounds.start_row) {\n    el.style.gridRowStart = grid_bounds.start_row.toString();\n  }\n  if (grid_bounds.end_row) {\n    el.style.gridRowEnd = (grid_bounds.end_row + 1).toString();\n  }\n  if (grid_bounds.start_col) {\n    el.style.gridColumnStart = grid_bounds.start_col.toString();\n  }\n  if (grid_bounds.end_col) {\n    el.style.gridColumnEnd = (grid_bounds.end_col + 1).toString();\n  }\n\n  el.style.display = \"block\"; // make sure we can see the element\n}\n\n// grid-template-{column,row}: ...\n// Take a vector of css sizes and turn into the format for the css argument for\nexport function sizes_to_template_def(defs: Array<string>) {\n  return concat(defs, \" \");\n}\n\nexport function concat(\n  string_vec: Array<string>,\n  collapse_char: string = \" \"\n): string {\n  return string_vec.reduce(\n    (concatted, current, i) =>\n      concatted + (i > 0 ? collapse_char : \"\") + current,\n    \"\"\n  );\n}\n\nexport function concat_nl(...component_strings: string[]) {\n  return concat(component_strings, \"\\n\");\n}\n\nexport function concat_sp(...component_strings: string[]) {\n  return concat(component_strings, \" \");\n}\n\nexport function as_array<T>(content: T | Array<T>): Array<T> {\n  if (content instanceof Array) {\n    return content;\n  } else {\n    return [content];\n  }\n}\n\n// Passing an undefined value to a compare like min or max will always give undefined\n// These functions let you default to the second option in the case the first is falsy\nexport function compare_w_missing(\n  compare_fn: (...values: number[]) => number,\n  maybe_a: number | null,\n  b: number\n) {\n  return maybe_a ? compare_fn(maybe_a, b) : b;\n}\nexport function min_w_missing(maybe_a: number | null, b: number) {\n  return compare_w_missing(Math.min, maybe_a, b);\n}\nexport function max_w_missing(maybe_a: number | null, b: number) {\n  return compare_w_missing(Math.max, maybe_a, b);\n}\n\nexport interface Selection_Rect {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\n// Produce bounding rectangle relative to parent of any element\nexport function get_bounding_rect(el: HTMLElement): Selection_Rect | null {\n  if (el.offsetParent === null) {\n    return null;\n  }\n  const top = el.offsetTop;\n  const left = el.offsetLeft;\n  const height = el.offsetHeight;\n  const width = el.offsetWidth;\n  return { left: left, right: left + width, top: top, bottom: top + height };\n}\n\nexport function boxes_overlap(\n  box_a: Selection_Rect,\n  box_b: Selection_Rect\n): boolean {\n  const horizontal_overlap = intervals_overlap(\n    [box_a.left, box_a.right],\n    [box_b.left, box_b.right]\n  );\n  const vertical_overlap = intervals_overlap(\n    [box_a.top, box_a.bottom],\n    [box_b.top, box_b.bottom]\n  );\n\n  return horizontal_overlap && vertical_overlap;\n\n  // Figure out of two intervals overlap eachother\n  function intervals_overlap([a_start, a_end], [b_start, b_end]) {\n    //   aaaaaaaaaa\n    // bbbbbb\n    //         bbbbbb\n    const a_contains_b_endpoint =\n      (a_start >= b_start && a_start <= b_end) ||\n      (a_end >= b_start && a_end <= b_end);\n\n    //   aaaaaa\n    // bbbbbbbbbb\n    const b_covers_a = a_start <= b_start && a_end >= b_end;\n\n    return a_contains_b_endpoint || b_covers_a;\n  }\n}\n\nexport function update_rect_with_delta(\n  rect: Selection_Rect,\n  delta: XY_Pos,\n  dir: Drag_Type\n): Selection_Rect {\n  // Need to destructure down to numbers to avoid copy\n  const new_rect: Selection_Rect = { ...rect };\n\n  // The bounding here means that we dont let the user drag the box \"inside-out\"\n  if (dir === Drag_Type.top_left) {\n    new_rect.left = new_rect.left + delta.x;\n    new_rect.top = new_rect.top + delta.y;\n  } else if (dir === Drag_Type.bottom_right) {\n    (new_rect.right = new_rect.right + delta.x), new_rect.left;\n    (new_rect.bottom = new_rect.bottom + delta.y), new_rect.top;\n  } else {\n    // Just move the box\n    new_rect.left += delta.x;\n    new_rect.top += delta.y;\n    new_rect.right += delta.x;\n    new_rect.bottom += delta.y;\n  }\n\n  // Make sure positions are proper for bounding box (in case box was flipped inside out)\n  if (new_rect.left > new_rect.right) {\n    const { left, right } = new_rect;\n    new_rect.right = left;\n    new_rect.left = right;\n  }\n  if (new_rect.top > new_rect.bottom) {\n    const { top, bottom } = new_rect;\n    new_rect.bottom = top;\n    new_rect.top = bottom;\n  }\n\n  return new_rect;\n}\n\nexport function get_css_unit(css_size: string): string {\n  return css_size.match(/[^ \\d | \\.]+$/g)[0] || \"px\";\n}\n\nexport function get_css_value(css_size: string): number {\n  return Number(css_size.match(/^[\\d | \\.]+/g)[0]);\n}\n\n\n","import { Grid_Pos } from \".\";\nimport {\n  as_array,\n  set_element_in_grid,\n} from \"./misc-helpers\";\n\nexport interface Event_Listener {\n  event: string;\n  func: (event: Event) => void;\n}\n\ninterface Element_Opts {\n  event_listener?: Event_Listener | Array<Event_Listener>;\n  styles?: object;\n  innerHTML?: string;\n  data_props?: object;\n  grid_pos?: Grid_Pos;\n  props?: object;\n}\n\n// Safari doesn't support lookbehinds for regex so we have to make it manually\nfunction extract_id(sel_txt: string): string|null {\n  const id_match: RegExpMatchArray = sel_txt.match(/#([^\\.]+)/g);\n  return id_match ? id_match[0].replace(\"#\", \"\"): null;\n}\n\nfunction extract_classes(sel_txt:string): Array<string>|null {\n  const class_list: RegExpMatchArray = sel_txt.match(/\\.([^\\.#]+)/g);\n  return class_list \n    ? [...class_list].map(c => c.replace(\"\\.\", \"\"))\n    : null;\n}\n\n// This is a heavy-lifter that takes care of building elements and placing them\n// on the grid etc.. It only create's an element if it needs to, which means\n// that we dont get dom leaks caused by recalling stuff over and over again.\nexport function make_el(\n  parent: HTMLElement,\n  sel_txt: string,\n  opts: Element_Opts = {}\n  ) {  \n\n  const tag_type: string = sel_txt.match(/^([^#\\.]+)+/g)[0];\n  const el_id = extract_id(sel_txt);\n  const class_list = extract_classes(sel_txt);\n\n  let el: HTMLElement = parent.querySelector(sel_txt);\n  if (!el) {\n    // Element doesn't exists so we need to make it\n    el = document.createElement(tag_type);\n    if (el_id) {\n      // debugger;\n      el.id = el_id;\n    }\n\n    if (class_list) {\n      class_list.forEach((x) => el.classList.add(x));\n    }\n\n    if (opts.props) {\n      Object.assign(el, opts.props);\n    }\n\n    parent.appendChild(el);\n  }\n\n  if (opts.event_listener) {\n    as_array(opts.event_listener).forEach(\n      (listener) => (el[\"on\" + listener.event] = listener.func)\n    );\n  }\n\n  if (opts.styles) {\n    Object.assign(el.style, opts.styles);\n  }\n\n  if (opts.innerHTML) {\n    el.innerHTML = opts.innerHTML;\n  }\n\n  if (opts.data_props) {\n    Object.assign(el.dataset, opts.data_props);\n  }\n\n  if (opts.grid_pos) {\n    set_element_in_grid(el, opts.grid_pos);\n  }\n\n  return el;\n}\n\n// Given a list of elements from a query selector, remove them all\nexport function remove_elements(els_to_remove: NodeListOf<Element>): void {\n  els_to_remove.forEach((e) => e.remove());\n}\n","import { Shiny } from \"./index\";\n\nexport function draw_browser_header() {\n  const header_svg = document.getElementById(\"editor-browser-header\");\n  const {\n    width: width_of_bar,\n    height: height_of_bar,\n  } = header_svg.getBoundingClientRect();\n\n  // Clear out anything that may be in the svg already\n  header_svg.innerHTML = \"\";\n  // First make the buttons for closing, minimizing and maximizing window\n  const button_r = height_of_bar / 4.5;\n  for (let i = 1; i <= 3; i++) {\n    header_svg.innerHTML += `\n    <circle cx=${i * button_r * 3}px\n            cy = 50%\n            r = ${button_r}px\n    > </circle>`;\n  }\n\n  // Next make the browser url bar\n  const url_bar_start = 4 * button_r * 3;\n  // Bar is takes up middle 65% of header area\n  const url_bar_rel_height = 0.65;\n  const url_bar_height = height_of_bar * url_bar_rel_height;\n  const url_bar_margin = (height_of_bar - url_bar_height) / 2;\n  header_svg.innerHTML += `\n  <rect x = ${url_bar_start}px\n        y = ${url_bar_margin}px\n        width = ${width_of_bar - url_bar_start - 10}px\n        height = ${height_of_bar * url_bar_rel_height}px\n        stroke = \"black\"\n        stroke-width: 3px\n        fill = \"none\"\n        rx = ${url_bar_height / 2}px\n        ry = ${url_bar_height / 2}px\n  ></rect>`;\n\n  const url_address = Shiny ? \"www.myShinyApp.com\" : \"www.myGridApp.com\";\n  header_svg.innerHTML += `\n  <text x = ${url_bar_start + 13}px\n        y = ${height_of_bar / 2}px\n        alignment-baseline = \"central\"\n  >\n    ${url_address}\n  </text>\n`;\n}\n","export const vertical_drag_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M21 11H3V9H21V11M21 13H3V15H21V13Z\" />\n</svg>`;\n\nexport const horizontal_drag_icon = `<svg style=\"width:24px;height:24px;max-height:100%;\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M11 21H9V3H11V21M15 3H13V21H15V3Z\" />\n</svg>`;\n\nexport const trashcan_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" />\n</svg>`;\n\nexport const bottom_right_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const se_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const nw_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,17.59L17.59,19L7,8.41V15H5V5H15V7H8.41L19,17.59Z\" />\n</svg>`;\n\nexport const top_left_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const drag_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M22.67,12L18.18,16.5L15.67,14L17.65,12L15.67,10.04L18.18,7.53L22.67,12M12,1.33L16.47,5.82L13.96,8.33L12,6.35L10,8.33L7.5,5.82L12,1.33M12,22.67L7.53,18.18L10.04,15.67L12,17.65L14,15.67L16.5,18.18L12,22.67M1.33,12L5.82,7.5L8.33,10L6.35,12L8.33,13.96L5.82,16.47L1.33,12M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10Z\" />\n</svg>`;\n\nexport const plus_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n</svg>`;\n\nexport const minus_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,13H5V11H19V13Z\" />\n</svg>`;","import { minus_icon, plus_icon } from \"./icons\";\nimport { make_el } from \"./make_el\";\n\n// Builds an up down button and value input\nexport function make_incrementer({\n  parent_el,\n  start_val = 2,\n  id = \"incrementer\",\n  label = \"my incrementer\",\n  on_increment = (x) => console.log(x),\n}): (new_value: number) => void {\n\n  const plus_minus_div = make_el(\n    parent_el,\n    `div#${id}_incrementer.plus-minus-input.settings-grid`,\n    {\n      innerHTML: `<span class = \"label\">${label}</span>`,\n    }\n  );\n\n  const inputs_div = make_el(plus_minus_div, \"div.plus-minus-input-controls\");\n\n  const minus_btn = make_el(inputs_div, \"button.plus-minus-input-btn.minus\", {\n    props: {name: \"plus button\"},\n    innerHTML: minus_icon,\n    event_listener: {\n      event: \"click\",\n      func: increment_counter(-1),\n    },\n  });\n  const current_value = make_el(inputs_div, \"span.plus-minus-input-value\", {\n    innerHTML: start_val.toString(),\n  });\n\n  make_el(inputs_div, \"button.plus-minus-input-btn.plus\", {\n    props: {name: \"minus button\"},\n    innerHTML: plus_icon,\n    event_listener: {\n      event: \"click\",\n      func: increment_counter(1),\n    },\n  });\n\n  function update_value(new_value: number) {\n    current_value.innerHTML = new_value.toString();\n\n    if (new_value === 1) {\n      minus_btn.classList.add(\"disabled\");\n    } else {\n      minus_btn.classList.remove(\"disabled\");\n    }\n  }\n  function increment_counter(amount) {\n    return function () {\n      const new_value = +current_value.innerHTML + amount;\n\n      update_value(new_value);\n      on_increment(new_value);\n    };\n  }\n\n  return update_value;\n}\n","import { make_el, Event_Listener } from \"./make_el\";\n\ninterface Modal_Options {\n  background_callbacks?: Event_Listener | Array<Event_Listener>;\n  modal_callbacks?: Event_Listener | Array<Event_Listener>;\n  header_text?: string;\n}\nexport function focused_modal(opts: Modal_Options) {\n  const background = make_el(\n    document.querySelector(\"body\"),\n    \"div.background-blurrer\",\n    {\n      event_listener: opts.background_callbacks,\n    }\n  );\n\n  const modal = make_el(background, \"div.modal\", {\n    event_listener: opts.modal_callbacks,\n  });\n\n  if (opts.header_text) {\n    make_el(modal, \"div.modal_header\", {\n      innerHTML: opts.header_text,\n      styles: {\n        paddingBottom: \"1rem\",\n      },\n    });\n  }\n\n  return {\n    background,\n    modal,\n    remove: () => background.remove(),\n  };\n}\n","import { horizontal_drag_icon, vertical_drag_icon } from \"./icons\";\nimport { make_el } from \"./make_el\";\nimport { get_css_value, get_css_unit } from \"./misc-helpers\";\n\nexport interface CSS_Input {\n  form: HTMLElement;\n  current_value: () => string;\n  update_value: (new_value: string) => void;\n}\n// =============================================================================\n// From here on are a series of general purpose helper functions not\n// specifically related to the app and its state\n// Input with value text box on left and unit selector dropdown on right\n// Used to make valid css sizes\nexport function make_css_unit_input({\n  parent_el,\n  selector = \"\",\n  start_val = 1,\n  start_unit = \"fr\",\n  on_change = (x: string) => console.log(\"css unit change\", x),\n  allowed_units = [\"fr\", \"px\", \"rem\"],\n  form_styles = {},\n  drag_dir = \"none\",\n}): CSS_Input {\n  const allow_drag = drag_dir !== \"none\";\n\n  const form = make_el(parent_el, `form${selector}.css-unit-input`, {\n    styles: form_styles,\n    event_listener: [\n      { event: \"change\", func: on_update },\n      {\n        event: \"submit\",\n        func: function (e) {\n          // Needed to stop pressing enter causing page to refresh\n          e.preventDefault();\n        },\n      },\n    ],\n  });\n\n  const value_input = <HTMLInputElement>(\n    make_el(form, \"input.css-unit-input-value\", {\n      props: {\n        type: \"number\",\n        min: 0,\n        value: start_val,\n        step: 1,\n        \"aria-live\": \"polite\",\n      },\n    })\n  );\n\n  const unit_selector = <HTMLSelectElement>(\n    make_el(form, \"select.css-unit-input-select\", {\n      props: { name: \"units\" },\n    })\n  );\n\n  const resizer = make_el(form, \"div.css-unit-input-dragger\", {\n    innerHTML: drag_dir === \"y\" ? vertical_drag_icon : horizontal_drag_icon,\n  });\n\n  // Place an invisible div over the main one that we let be dragged. This means\n  // we can use the nice drag interaction callbacks without the ugly default\n  // drag behavior of two copies of the div and zooming back to the start pos etc.\n  make_el(resizer, \"div.css-unit-input-drag-detector\", {\n    props: { draggable: true },\n    event_listener: [\n      {\n        event: \"dragstart\",\n        func: function (event) {\n          this.dataset.baseline = value_input.value;\n          this.dataset.start = event[drag_dir];\n        },\n      },\n      {\n        event: \"drag\",\n        func: function (event) {\n          const drag_pos = event[drag_dir];\n          // At the end of the drag we get a drag event with 0 values that throws stuff off\n          if (drag_pos === 0) return;\n          const new_value = Math.max(\n            0,\n            +this.dataset.baseline + (event[drag_dir] - this.dataset.start)\n          );\n          value_input.value = new_value.toString();\n          on_change(current_value());\n        },\n      },\n    ],\n  });\n\n  allowed_units.forEach(function (unit_type) {\n    const unit_option = <HTMLOptionElement>(\n      make_el(unit_selector, `option.${unit_type}`, {\n        props: { value: unit_type },\n        innerHTML: unit_type,\n      })\n    );\n\n    if (unit_type === start_unit) {\n      unit_option.selected = true;\n    }\n  });\n  function current_value() {\n    return `${value_input.value}${unit_selector.value}`;\n  }\n  function on_update() {\n    const val = current_value();\n    update_value(val);\n    on_change(val);\n  }\n\n  function update_value(new_value: string) {\n    value_input.value = get_css_value(new_value).toString();\n    const new_unit = get_css_unit(new_value);\n\n    for (let opt of unit_selector.children as HTMLCollectionOf<\n      HTMLOptionElement\n    >) {\n      opt.selected = opt.value === new_unit;\n    }\n\n    if (new_unit === \"px\" && allow_drag) {\n      form.classList.add(\"with-drag\");\n    } else {\n      form.classList.remove(\"with-drag\");\n    }\n  }\n\n  update_value(`${start_val}${start_unit}`);\n\n  return { form, current_value, update_value };\n}\n","import { make_el } from \"./make_el\";\n\nexport function make_toggle_switch(\n  parent: HTMLElement,\n  off_text: string,\n  on_text: string,\n  on_change: (is_on: boolean) => void\n) {\n  const container = make_el(parent, \"div.toggle-switch\");\n  make_el(container, \"span.off-text\", {\n    innerHTML: off_text,\n  });\n  const label = make_el(container, \"label.switch\");\n  make_el(container, \"span.on-text\", {\n    innerHTML: on_text,\n  });\n  make_el(label, \"input\", {\n    props: { type: \"checkbox\" },\n    event_listener: {\n      event: \"change\",\n      func: (event) => {\n        on_change((event.target as HTMLInputElement).checked);\n      },\n    },\n  });\n\n  make_el(label, \"span.slider\");\n\n  // Add styles\n  const style_sheet: CSSStyleSheet = document.styleSheets[0];\n\n  style_sheet.insertRule(`\n    div.toggle-switch {\n      display: inline-grid;\n      grid-template-columns: 1fr auto 1fr;\n      grid-gap: 3px;\n      width: 180px;\n      align-items: center;\n      justify-items: center;\n    }\n  `);\n\n  style_sheet.insertRule(`\n  .toggle-switch > span {\n    font-size: 0.85rem;\n  }\n`);\n  style_sheet.insertRule(`\n    .toggle-switch > .off-text {\n      text-align: end;\n    }\n  `);\n\n  style_sheet.insertRule(\n    `.switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n  }`,\n    0\n  );\n\n  // Hide default HTML checkbox\n  style_sheet.insertRule(\n    `.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }`,\n    0\n  );\n\n  style_sheet.insertRule(\n    `.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: 34px;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    border-radius: 50%;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `input:checked + .slider {\n    background-color: #2196F3;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `input:focus + .slider {\n    box-shadow: 0 0 1px #2196F3;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `input:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }`,\n    0\n  );\n}\n","// Assumes that only one stylesheet has rules for the given selector and\n// that only one rule targeting that selector alone is defined\nexport function find_rules_by_selector(selector_text: string) {\n  // Find the stylesheet which contains the containers styles\n  const defines_ruleset = (selector_text: string) => (rule: CSSRule) =>\n    (rule as CSSStyleRule).selectorText === selector_text;\n  \n\n  const stylesheets_w_selector = [\n    ...document.styleSheets,\n  ].filter((style_sheet: CSSStyleSheet) =>\n    [...style_sheet.rules].find(defines_ruleset(selector_text))\n  );\n\n  const n_sheets: number = stylesheets_w_selector.length;\n  if(n_sheets === 0){\n    // No rules declared so make a new rule and append to last style sheet\n  } else {\n    // Take the latest style sheet and (hope) that's the correct one\n    return ([...stylesheets_w_selector[n_sheets-1].cssRules].find(\n      defines_ruleset(selector_text)\n    ) as CSSStyleRule).style;\n\n  } \n}\n","// JS entry point\nimport { Event_Listener, make_el, remove_elements } from \"./make_el\";\nimport { draw_browser_header } from \"./draw_browser_header\";\nimport { make_incrementer } from \"./make_incrementer\";\nimport { focused_modal } from \"./focused_modal\";\nimport { make_css_unit_input, CSS_Input } from \"./make_css_unit_input\";\nimport {\n  make_template_start_end,\n  sizes_to_template_def,\n  set_element_in_grid,\n  concat_nl,\n  as_array,\n  max_w_missing,\n  min_w_missing,\n  boxes_overlap,\n  get_bounding_rect,\n  get_css_unit,\n  get_css_value,\n  Selection_Rect,\n  update_rect_with_delta,\n  XY_Pos,\n  Drag_Type,\n} from \"./misc-helpers\";\nimport { make_toggle_switch } from \"./make_toggle_switch\";\nimport { trashcan_icon, drag_icon, se_arrow, nw_arrow } from \"./icons\";\nimport { find_rules_by_selector } from \"./find_rules_by_selector\";\n\nexport const Shiny = (window as any).Shiny;\n\ninterface Grid_Settings {\n  num_rows: (new_value: number) => void;\n  num_cols: (new_value: number) => void;\n  gap: CSS_Input;\n}\n\nexport interface Grid_Pos {\n  start_col?: number;\n  end_col?: number;\n  start_row?: number;\n  end_row?: number;\n}\n\ninterface Drag_Res {\n  xy: XY_Pos;\n  grid: Grid_Pos;\n}\n\ninterface Drag_Options {\n  watching_element: HTMLElement;\n  drag_dir: Drag_Type;\n  grid_element?: HTMLElement;\n  on_start?: (start_loc: XY_Pos) => void;\n  on_drag?: (drag_info: Drag_Res) => void;\n  on_end?: (drag_info: Drag_Res) => void;\n}\n\nconst enum App_Mode {\n  ShinyNew,\n  ShinyExisting,\n  ClientSide,\n}\nwindow.onload = function () {\n  draw_browser_header();\n  // Keep track of the grid controls here. Tradeoff of a global variable\n  // feels worth it for direct access to the values without doing a dom query\n  const grid_controls = { rows: [], cols: [] };\n  // All the currently existing cells making up the grid\n  let current_cells = [];\n\n  // This holds the grid element dom node. Gets filled in the onload callback\n  // I am using a global variable here because we query inside this so much that\n  // it felt silly to regrab it every time as it never moves.\n  const grid_holder: HTMLElement = document.querySelector(\"#grid_page\");\n\n  const settings_panel: HTMLElement = document.querySelector(\n    \"#settings .card-body\"\n  );\n\n  const grid_settings: Grid_Settings = {\n    num_rows: make_incrementer({\n      parent_el: settings_panel,\n      id: \"num_rows\",\n      start_val: 2,\n      label: \"Number of rows\",\n      on_increment: (x) => update_num_rows_or_cols(\"rows\", x),\n    }),\n    num_cols: make_incrementer({\n      parent_el: settings_panel,\n      id: \"num_cols\",\n      start_val: 2,\n      label: \"Number of cols\",\n      on_increment: (x) => update_num_rows_or_cols(\"cols\", x),\n    }),\n    gap: make_css_unit_input({\n      parent_el: make_el(\n        settings_panel,\n        \"div#gap_size_chooser.plus_minus_input.settings-grid\",\n        {\n          innerHTML: `<span class = \"label\">Panel gap size</span>`,\n        }\n      ),\n      selector: \"#gap_size_chooser\",\n      on_change: (x) => update_grid({ gap: x }),\n      allowed_units: [\"px\", \"rem\"],\n    }),\n  };\n\n  function update_num_rows_or_cols(dir, new_count) {\n    const current_vals =\n      dir === \"rows\" ? get_current_rows() : get_current_cols();\n\n    if (new_count > current_vals.length) {\n      current_vals.push(\"1fr\");\n    } else if (new_count < current_vals.length) {\n      current_vals.pop();\n    } else {\n      // No change, shouldn't happen but maybe...\n    }\n    update_grid({ [dir]: current_vals });\n  }\n\n  const app_mode: App_Mode = grid_holder.hasChildNodes()\n    ? App_Mode.ShinyExisting\n    : Shiny\n    ? App_Mode.ShinyNew\n    : App_Mode.ClientSide;\n\n  if (app_mode === App_Mode.ShinyExisting) {\n    // Container styles are in this object\n    const styles_for_container = find_rules_by_selector(\"#grid_page\");\n\n    const current_rows = styles_for_container.gridTemplateRows.split(\" \");\n    const current_cols = styles_for_container.gridTemplateColumns.split(\" \");\n    // I dont know why this is just .gap and not gridGap\n    const current_gap = styles_for_container.gap;\n\n    // If grided is running on an existing app, we need to parse the children and\n    // add them as elements;\n    const children = [...grid_holder.children];\n\n    children.forEach(function (el) {\n      add_element({\n        id: el.id,\n        grid_pos: get_grid_pos(el as HTMLElement),\n        existing_element: el as HTMLElement,\n      });\n    });\n\n    // Make sure grid matches the one the app is working with\n    update_grid({\n      rows: current_rows,\n      cols: current_cols,\n      gap: current_gap,\n    });\n\n    // Make grid cells transparent so the app is seen beneath them\n    find_rules_by_selector(\".grid-cell\").background = \"none\";\n\n    // And edit mode toggle to allow user to interact with app \n    make_toggle_switch(\n      document.querySelector(\"#header .code_btns\"),\n      \"Edit layout\",\n      \"Interact mode\",\n      (interact_is_on: boolean) => {\n        const update_el = function (el: Element) {\n          if (interact_is_on) {\n            el.classList.add(\"disabled\");\n          } else {\n            el.classList.remove(\"disabled\");\n          }\n        };\n        document.querySelectorAll(\".added-element\").forEach(update_el);\n        document.querySelectorAll(\".grid-cell\").forEach(update_el);\n        update_el(document.querySelector(\"#drag_canvas\"));\n      }\n    );\n\n  } else if (app_mode === App_Mode.ShinyNew) {\n    Shiny.addCustomMessageHandler(\"update-grid\", function (opts) {\n      update_grid(opts);\n    });\n\n    interface Shiny_Element_Msg {\n      id: string;\n      start_row: number;\n      end_row: number;\n      start_col: number;\n      end_col: number;\n    }\n    Shiny.addCustomMessageHandler(\"add-elements\", function (\n      elements_to_add: Shiny_Element_Msg[]\n    ) {\n      elements_to_add.forEach((el: Shiny_Element_Msg) => {\n        add_element({\n          id: el.id,\n          grid_pos: el,\n        });\n      });\n    });\n\n    Shiny.addCustomMessageHandler(\"code_modal\", function (code_to_show) {\n      show_code(\"Paste the following code into your app to update the layout\", {\n        type: \"R\",\n        code: code_to_show,\n      });\n    });\n  } else {\n    // If in pure-client-side mode we need to provide a default grid and also wireup the code button\n    update_grid({\n      rows: [\"1fr\", \"1fr\"],\n      cols: [\"1fr\", \"1fr\"],\n      gap: \"1rem\",\n    });\n\n    document.getElementById(\"get_code\").addEventListener(\"click\", function () {\n      const current_layout = gen_code_for_layout();\n      show_code(\"Place the following in your CSS:\", current_layout);\n    });\n  }\n  interface Code_Text {\n    type: string;\n    code: string;\n  }\n  function show_code(\n    message: string,\n    code_blocks: Code_Text | Array<Code_Text>\n  ) {\n    const code_modal = focused_modal({\n      header_text: `${message}`,\n      modal_callbacks: {\n        event: \"click\",\n        func: function (event) {\n          // This is needed to stop clicks on modal from triggering the cancel\n          // event that is attached to the background\n          event.stopPropagation();\n        },\n      },\n      background_callbacks: {\n        event: \"click\",\n        func: close_modal,\n      },\n    });\n\n    as_array(code_blocks).forEach(function (code_to_show) {\n      const num_of_lines: number = code_to_show.code.match(/\\n/g).length;\n\n      const code_section = make_el(\n        code_modal.modal,\n        `div#${code_to_show.type}.code_chunk`,\n        {\n          styles: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n            gridTemplateRows: \"1fr, auto\",\n            gridGap: \"4px\",\n            gridTemplateAreas: concat_nl(\n              `\"code_type copy_btn\"`,\n              `\"code_text code_text\"`\n            ),\n          },\n        }\n      );\n\n      let code_text: HTMLInputElement;\n\n      make_el(code_section, \"strong\", {\n        innerHTML: code_to_show.type,\n        styles: { gridArea: \"code_type\" },\n      });\n\n      make_el(code_section, \"button#copy_code\", {\n        innerHTML: \"Copy to clipboard\",\n        styles: { gridArea: \"copy_btn\" },\n        event_listener: {\n          event: \"click\",\n          func: function () {\n            code_text.select();\n            document.execCommand(\"copy\");\n          },\n        },\n      });\n\n      code_text = make_el(code_section, \"textarea#code_for_layout\", {\n        innerHTML: code_to_show.code,\n        props: { rows: num_of_lines + 3 },\n        styles: {\n          width: \"100%\",\n          background: \"#f3f2f2\",\n          fontFamily: \"monospace\",\n          display: \"block\",\n          padding: \"0.75rem\",\n          marginBottom: \"10px\",\n          borderRadius: \"5px\",\n          gridArea: \"code_text\",\n        },\n      }) as HTMLInputElement;\n    });\n\n    const action_buttons = make_el(code_modal.modal, \"div#action_buttons\", {\n      styles: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n      },\n    });\n    make_el(action_buttons, \"button#close_code_model\", {\n      innerHTML: \"Close\",\n      event_listener: {\n        event: \"click\",\n        func: close_modal,\n      },\n    });\n\n    function close_modal() {\n      code_modal.remove();\n    }\n  }\n\n  function fill_grid_cells() {\n    const grid_dims = { rows: get_current_rows(), cols: get_current_cols() };\n    const num_rows = grid_dims.rows.length;\n    const num_cols = grid_dims.cols.length;\n    // Grab currently drawn cells (if any) so we can check if we need to redraw\n    // or if this was simply a column/row sizing update\n    current_cells = [];\n    const need_to_reset_cells = current_cells.length != num_rows * num_cols;\n\n    if (need_to_reset_cells) {\n      remove_elements(grid_holder.querySelectorAll(\".grid-cell\"));\n      for (let row_i = 1; row_i <= num_rows; row_i++) {\n        for (let col_i = 1; col_i <= num_cols; col_i++) {\n          current_cells.push(\n            make_el(grid_holder, `div.r${row_i}.c${col_i}.grid-cell`, {\n              data_props: { row: row_i, col: col_i },\n              grid_pos: { start_row: row_i, start_col: col_i },\n            })\n          );\n        }\n      }\n\n      // Build each column and row's sizing controler\n      for (let type in grid_controls) {\n        // Get rid of old ones to start with fresh slate\n        remove_elements(grid_holder.querySelectorAll(`.${type}-controls`));\n        grid_controls[type] = grid_dims[type].map(function (\n          size: string,\n          i: number\n        ) {\n          // The i + 1 is because grid is indexed at 1, not zero\n          const grid_i = i + 1;\n\n          return make_css_unit_input({\n            parent_el: grid_holder,\n            selector: `#control_${type}${grid_i}.${type}-controls`,\n            start_val: get_css_value(size),\n            start_unit: get_css_unit(size),\n            on_change: () => update_grid(get_layout_from_controls()),\n            form_styles: {\n              [`grid${\n                type === \"rows\" ? \"Row\" : \"Column\"\n              }`]: make_template_start_end(grid_i),\n            },\n            drag_dir: type === \"rows\" ? \"y\" : \"x\",\n          });\n        });\n      }\n      const current_selection_box = make_el(\n        grid_holder,\n        \"div#current_selection_box.added-element\"\n      );\n      const drag_canvas = make_el(grid_holder, \"div#drag_canvas\");\n\n      drag_on_grid({\n        watching_element: drag_canvas,\n        grid_element: current_selection_box,\n        drag_dir: Drag_Type.bottom_right,\n        on_start: () => {\n          current_selection_box.style.borderColor = get_next_color();\n        },\n        on_end: ({ grid }) => {\n          name_new_element({\n            grid_pos: grid,\n            selection_box: current_selection_box,\n          });\n        },\n      });\n\n      // Make sure any added elements sit on top by re-appending them to grid holder\n      // Make sure that the drag detector sits over everything\n      [\n        drag_canvas,\n        ...grid_holder.querySelectorAll(\".added-element\"),\n      ].forEach((el) => grid_holder.appendChild(el));\n    } else {\n    }\n  }\n  function get_drag_extent_on_grid(selection_rect: Selection_Rect): Grid_Pos {\n    // Reset bounding box definitions so we only use current selection extent\n    const sel_bounds: Grid_Pos = { start_col: null, start_row: null };\n\n    current_cells.forEach(function (el) {\n      // Cell is overlapped by selection box\n      if (boxes_overlap(get_bounding_rect(el), selection_rect)) {\n        const el_row: number = +el.dataset.row;\n        const el_col: number = +el.dataset.col;\n        sel_bounds.start_row = min_w_missing(sel_bounds.start_row, el_row);\n        sel_bounds.end_row = max_w_missing(sel_bounds.end_row, el_row);\n        sel_bounds.start_col = min_w_missing(sel_bounds.start_col, el_col);\n        sel_bounds.end_col = max_w_missing(sel_bounds.end_col, el_col);\n      }\n    });\n\n    return sel_bounds;\n  }\n\n  interface Grid_Update_Options {\n    rows?: Array<string>;\n    cols?: Array<string>;\n    gap?: string;\n  }\n  function update_grid(opts: Grid_Update_Options) {\n    const old_num_rows = get_current_rows().length;\n    const old_num_cols = get_current_cols().length;\n    const old_gap = grid_holder.style.getPropertyValue(\"--grid-gap\");\n    const new_gap = opts.gap || old_gap;\n    const new_num_rows = opts.rows ? opts.rows.length : old_num_rows;\n    const new_num_cols = opts.cols ? opts.cols.length : old_num_cols;\n\n    // Make sure settings panel is up-to-date\n    grid_settings.num_rows(new_num_rows);\n    grid_settings.num_cols(new_num_cols);\n    grid_settings.gap.update_value(new_gap);\n\n    const grid_numbers_changed =\n      old_num_rows !== new_num_rows || old_num_cols !== new_num_cols;\n    if (grid_numbers_changed) {\n      // Check for elements that may get dropped\n      const all_els = current_elements();\n      let in_danger_els = [];\n      let auto_removed_el_ids = [];\n\n      all_els.forEach(function (el) {\n        const sits_outside_grid =\n          el.end_row > new_num_rows || el.end_col > new_num_cols;\n        const completely_outside_grid =\n          el.start_row > new_num_rows || el.start_col > new_num_cols;\n\n        if (completely_outside_grid) {\n          auto_removed_el_ids.push(el.id);\n        } else if (sits_outside_grid) {\n          in_danger_els.push(el);\n        }\n      });\n\n      remove_added_elements(auto_removed_el_ids);\n\n      if (in_danger_els.length > 0) {\n        const fix_els_modal = focused_modal({\n          header_text: `\n        <h2>The following elements dont fit on the new grid layout.</h2>\n        <p>Below, choose to either remove the element or to shink its bounds to the new grid sizing</p>\n        `,\n        });\n\n        const radio_inputs_html = in_danger_els.reduce(\n          (radio_group, el) =>\n            `\n          ${radio_group}\n          <div class = \"radio-set-group\">\n            <div class = \"radio-set-label\"> ${el.id} </div>\n            <div class = \"radio-set-options\">\n              <input type=\"radio\" id = \"delete_${el.id}\" name=\"${el.id}\" value=\"delete\" checked>\n              <label for=\"delete_${el.id}\">Delete</label>\n              <input type=\"radio\" id = \"shrink_${el.id}\" name=\"${el.id}\" value=\"shrink\">\n              <label for=\"shrink_${el.id}\">Shink</label>\n            </div>\n          </div>\n        `,\n          \"\"\n        );\n\n        const delete_or_edit_form = make_el(\n          fix_els_modal.modal,\n          \"form#delete_or_fix_list\",\n          {\n            innerHTML: `<div class = \"update-action-form\"> ${radio_inputs_html} </div>`,\n            event_listener: {\n              event: \"submit\",\n              func: function () {\n                const form = this;\n                const to_delete = in_danger_els.filter(\n                  (d) => form[d.id].value === \"delete\"\n                );\n\n                remove_added_elements(to_delete.map((d) => d.id));\n                const to_edit = in_danger_els.filter(\n                  (d) => form[d.id].value === \"shrink\"\n                );\n                to_edit.forEach((el) => {\n                  const el_node: HTMLElement = grid_holder.querySelector(\n                    `#${el.id}`\n                  );\n\n                  el_node.style.gridRow = make_template_start_end(\n                    el.start_row,\n                    Math.min(el.end_row, new_num_rows)\n                  );\n                  el_node.style.gridColumn = make_template_start_end(\n                    el.start_col,\n                    Math.min(el.end_col, new_num_cols)\n                  );\n                });\n\n                fix_els_modal.remove();\n                // Now that we've updated elements properly, we should be able to\n                // just recall the function and it won't spit an error\n                update_grid({\n                  rows: opts.rows,\n                  cols: opts.cols,\n                  gap: opts.gap,\n                });\n              },\n            },\n          }\n        );\n\n        make_el(delete_or_edit_form, \"input#name_submit\", {\n          props: { type: \"submit\" },\n        });\n\n        make_el(fix_els_modal.modal, \"p.notice-text\", {\n          innerHTML:\n            \"Note that elements residing completely in the removed row or column are automatically deleted.\",\n        });\n\n        return;\n      }\n    }\n\n    if (opts.rows) {\n      grid_holder.style.gridTemplateRows = sizes_to_template_def(opts.rows);\n    }\n    if (opts.cols) {\n      grid_holder.style.gridTemplateColumns = sizes_to_template_def(opts.cols);\n    }\n    if (opts.gap) {\n      // To give a consistant gap around everything we also add margin of same size\n      grid_holder.style.setProperty(\"--grid-gap\", opts.gap);\n    }\n\n    if (grid_numbers_changed) fill_grid_cells();\n\n    if (app_mode == App_Mode.ShinyNew) {\n      Shiny.setInputValue(\"grid_sizing\", {\n        rows: grid_holder.style.gridTemplateRows.split(\" \"),\n        cols: grid_holder.style.gridTemplateColumns.split(\" \"),\n        gap: grid_holder.style.getPropertyValue(\"--grid-gap\"),\n      });\n    }\n\n    return grid_holder;\n  }\n\n  function get_layout_from_controls() {\n    const sizes = {};\n    for (let type in grid_controls) {\n      sizes[type] = grid_controls[type].map((unit_input) =>\n        unit_input.current_value()\n      );\n    }\n    return sizes;\n  }\n\n  function name_new_element({ grid_pos, selection_box }) {\n    const modal_divs = focused_modal({\n      background_callbacks: {\n        // Clicking outside of the modal will cancel the naming. Seems natural\n        event: \"click\",\n        func: reset_el_creation,\n      },\n      modal_callbacks: {\n        event: \"click\",\n        func: function (event) {\n          // This is needed to stop clicks on modal from triggering the cancel\n          // event that is attached to the background\n          event.stopPropagation();\n        },\n      },\n    });\n\n    const modal_div = modal_divs.modal;\n\n    make_el(modal_div, \"div.instructions\", {\n      innerHTML: `\n      <h2>Name your element:</h2>\n      <p>This name will be used to place items in your app.\n      For instance if you want to place a plot in this element,\n      this name will match the label of the plot output\n      </p>\n      `,\n    });\n\n    const name_form = make_el(modal_div, \"form#name_form\", {\n      event_listener: {\n        event: \"submit\",\n        func: function (event) {\n          event.preventDefault();\n          const id = this[\"name_input\"].value.replace(/\\s/g, \"_\");\n\n          const element_exists: boolean = !!current_elements().find(\n            (el) => el.id === id\n          );\n          if (element_exists) {\n            // Cant have duplicate ids!\n            warn_about_bad_id(\n              `You already have an element with the id ${id}, all ids need to be unique.`\n            );\n            return;\n          }\n          if (id.match(/^[^a-zA-Z]/g)) {\n            warn_about_bad_id(`Valid ids need to start with a character.`);\n            return;\n          }\n\n          // Add the new element in to grid\n          add_element({\n            id,\n            color: selection_box.style.borderColor,\n            grid_pos,\n          });\n\n          reset_el_creation();\n        },\n      },\n    });\n    make_el(name_form, \"input#cancel_btn\", {\n      props: { type: \"button\", value: \"cancel\" },\n      event_listener: { event: \"click\", func: reset_el_creation },\n    });\n\n    make_el(name_form, \"input#name_input\", {\n      props: { type: \"text\" },\n      event_listener: {\n        // Don't leave warning message up while user is typing\n        event: \"input\",\n        func: hide_warning_msg,\n      },\n    }).focus(); // So user can immediately type in id\n\n    make_el(name_form, \"input#name_submit\", {\n      props: { type: \"submit\" },\n    });\n\n    function warn_about_bad_id(msg) {\n      make_el(modal_div, \"span#bad_id_msg.notice-text\", {\n        innerHTML: msg,\n        styles: { color: \"orangered\" },\n      });\n    }\n    function hide_warning_msg() {\n      const warn_msg = modal_div.querySelector(\"span#bad_id_msg\");\n      if (warn_msg) {\n        warn_msg.remove();\n      }\n    }\n    function reset_el_creation() {\n      // All done here so get rid of the whole interface.\n      modal_divs.remove();\n      // Remove the temporary dragged element\n      selection_box.style.display = \"none\";\n    }\n  }\n\n  // Adds a new element of a given id to the app. Both in the grid window\n  // and the addeded elements panel\n  interface New_Element {\n    id: string;\n    color?: string;\n    grid_pos: Grid_Pos;\n    existing_element?: HTMLElement;\n  }\n\n  function add_element(el_props: New_Element) {\n    const { grid_pos, color = get_next_color(), existing_element } = el_props;\n    const mirrors_existing_element = existing_element !== undefined;\n    // If element ids were generated with the grid_container R function then\n    // they have a prefix of the container name which we should remove so the\n    // added elements list is not ugly looking\n    const id = mirrors_existing_element\n      ? el_props.id.replace(/^.+?__/g, \"\")\n      : el_props.id;\n\n    const element_in_grid = make_el(\n      grid_holder,\n      `div#${id}.el_${id}.added-element`,\n      {\n        grid_pos,\n        styles: {\n          borderColor: color,\n          position: \"relative\",\n        },\n      }\n    );\n\n    // Setup drag behavior\n    [Drag_Type.top_left, Drag_Type.bottom_right, Drag_Type.center].forEach(\n      function (handle_type) {\n        drag_on_grid({\n          watching_element: make_el(\n            element_in_grid,\n            `div.dragger.visible.${handle_type}`,\n            {\n              styles: { background: color },\n              innerHTML:\n                handle_type === \"center\"\n                  ? drag_icon\n                  : handle_type === Drag_Type.bottom_right\n                  ? se_arrow\n                  : nw_arrow,\n            }\n          ),\n          grid_element: element_in_grid,\n          drag_dir: handle_type,\n          on_drag: (res) => {\n            if (mirrors_existing_element) {\n              set_element_in_grid(existing_element, res.grid);\n            }\n          },\n          on_end: () => {\n            send_elements_to_shiny();\n          },\n        });\n      }\n    );\n\n    const element_in_list = make_el(\n      document.querySelector(\"#added_elements\"),\n      `div.el_${id}.added-element`,\n      {\n        innerHTML: id,\n        styles: {\n          borderColor: color,\n        },\n        event_listener: [\n          {\n            event: \"mouseover\",\n            func: function () {\n              this.classList.add(\"hovered\");\n              element_in_grid.classList.add(\"hovered\");\n            },\n          },\n          {\n            event: \"mouseout\",\n            func: function () {\n              this.classList.remove(\"hovered\");\n              element_in_grid.classList.remove(\"hovered\");\n            },\n          },\n        ],\n      }\n    );\n\n    if (!mirrors_existing_element) {\n      // Turn of deleting if were editing an existing app\n      // This means that if were in app editing mode and the user adds a new element\n      // they can delete that new element but they can't delete the existing elements\n      make_el(element_in_list, \"button.remove_el\", {\n        innerHTML: trashcan_icon,\n        event_listener: {\n          event: \"click\",\n          func: function () {\n            remove_added_elements(id);\n          },\n        },\n      });\n    }\n\n    // Let shiny know we have a new element\n    send_elements_to_shiny();\n  }\n\n  function get_grid_pos(grid_el: HTMLElement): Grid_Pos {\n    const el_styles = getComputedStyle(grid_el);\n    return {\n      start_row: +el_styles.gridRowStart,\n      start_col: +el_styles.gridColumnStart,\n      end_row: +el_styles.gridRowEnd - 1,\n      end_col: +el_styles.gridColumnEnd - 1,\n    };\n  }\n\n  function drag_on_grid(opts: Drag_Options): void {\n    let drag_feedback_rect: HTMLElement;\n    let start_rect: Selection_Rect;\n    let start_loc: XY_Pos;\n\n    const editor_el: HTMLElement = document.querySelector(\"#editor\");\n\n    opts.watching_element.onmousedown = function (event: MouseEvent) {\n      start_loc = event as DragEvent;\n\n      // make sure dragged element is on top\n      grid_holder.appendChild(opts.grid_element);\n\n      // If this is a new element drag there wont be a bounding box for the grid\n      // element yet, so we need to make a new zero-width/height one at start\n      // of the drag\n      start_rect = get_bounding_rect(opts.grid_element) || {\n        left: event.offsetX,\n        right: event.offsetX,\n        top: event.offsetY,\n        bottom: event.offsetY,\n      };\n\n      drag_feedback_rect = make_el(\n        grid_holder.querySelector(\"#drag_canvas\"),\n        \"div.drag-feedback-rect\",\n        {\n          styles: {\n            ...bounding_rect_to_css_pos(start_rect),\n          },\n        }\n      );\n\n      // We start grid position here in case user selects by simply clicking,\n      // which would mean we never get to run the drag function\n      update_grid_pos(opts.grid_element, start_rect);\n\n      if (opts.on_start) opts.on_start(start_loc);\n\n      // Add listener to editor so we can continue to track this drag\n      editor_el.addEventListener(\"mousemove\", drag);\n      editor_el.addEventListener(\"mouseup\", drag_end);\n    };\n\n    function update_grid_pos(\n      element: HTMLElement,\n      bounding_rect: Selection_Rect\n    ): Grid_Pos {\n      const grid_extent = get_drag_extent_on_grid(bounding_rect);\n      set_element_in_grid(element, grid_extent);\n      return grid_extent;\n    }\n\n    function drag(event: MouseEvent) {\n      const curr_loc: XY_Pos = event;\n      // Sometimes the drag event gets fired with nonsense zeros\n      if (curr_loc.x === 0 && curr_loc.y === 0) return;\n\n      const new_rect = update_rect_with_delta(\n        start_rect,\n        { x: curr_loc.x - start_loc.x, y: curr_loc.y - start_loc.y },\n        opts.drag_dir\n      );\n\n      Object.assign(\n        drag_feedback_rect.style,\n        bounding_rect_to_css_pos(new_rect)\n      );\n      const grid_extent = update_grid_pos(opts.grid_element, new_rect);\n      if (opts.on_drag) opts.on_drag({ xy: curr_loc, grid: grid_extent });\n    }\n\n    function drag_end(event: MouseEvent) {\n      const end_loc: XY_Pos = event;\n      drag_feedback_rect.remove();\n      start_rect = null;\n      start_loc = null;\n      if (opts.on_end)\n        opts.on_end({\n          xy: end_loc,\n          grid: get_grid_pos(opts.grid_element || this.parentElement),\n        });\n\n      editor_el.removeEventListener(\"mousemove\", drag);\n      editor_el.removeEventListener(\"mouseup\", drag_end);\n    }\n\n    function bounding_rect_to_css_pos(rect: Selection_Rect) {\n      return {\n        left: `${rect.left}px`,\n        top: `${rect.top}px`,\n        width: `${rect.right - rect.left}px`,\n        height: `${rect.bottom - rect.top}px`,\n      };\n    }\n  }\n\n  interface Element_Info {\n    id: string;\n    start_row: number;\n    end_row: number;\n    start_col: number;\n    end_col: number;\n  }\n\n  function current_elements(): Array<Element_Info> {\n    let elements: Array<Element_Info> = [];\n\n    (grid_holder.querySelectorAll(\".added-element\") as NodeListOf<\n      HTMLElement\n    >).forEach(function (el: HTMLElement) {\n      // Ignore the selection box\n      if (el.id === \"current_selection_box\") return;\n      const grid_area = el.style.gridArea.split(\" / \");\n      elements.push({\n        id: el.id,\n        start_row: +grid_area[0],\n        start_col: +grid_area[1],\n        // Subtract one here because the end in css is the end line, not row\n        end_row: +grid_area[2] - 1,\n        end_col: +grid_area[3] - 1,\n      });\n    });\n\n    return elements;\n  }\n\n  function send_elements_to_shiny() {\n    if (app_mode == App_Mode.ShinyNew) {\n      const elements_by_id = {};\n      current_elements().forEach(function (el) {\n        elements_by_id[el.id] = el;\n      });\n      Shiny.setInputValue(\"elements\", elements_by_id);\n    }\n  }\n\n  function gen_code_for_layout(): Array<Code_Text> {\n    const container_selector = \"#container\";\n    const elements = current_elements();\n\n    const element_defs = elements.map((el) =>\n      concat_nl(\n        `#${el.id} {`,\n        `  grid-column: ${make_template_start_end(el.start_col, el.end_col)};`,\n        `  grid-row: ${make_template_start_end(el.start_row, el.end_row)};`,\n        `}`\n      )\n    );\n\n    const css_code = concat_nl(\n      `${container_selector} {`,\n      `  display: grid;`,\n      `  grid-template-columns: ${grid_holder.style.gridTemplateColumns};`,\n      `  grid-template-rows: ${grid_holder.style.gridTemplateRows};`,\n      `  grid-gap: ${grid_holder.style.getPropertyValue(\"--grid-gap\")}`,\n      `}`,\n      ...element_defs\n    );\n\n    const html_code = concat_nl(\n      `<div id = ${container_selector}>`,\n      ...elements.map((el) =>\n        concat_nl(`  <div id = \"#${el.id}\">`, `  </div>`)\n      ),\n      `</div>`\n    );\n\n    return [\n      { type: \"css\", code: css_code },\n      { type: \"html\", code: html_code },\n    ];\n  }\n\n  function get_current_rows() {\n    return grid_holder.style.gridTemplateRows.split(\" \");\n  }\n\n  function get_current_cols() {\n    return grid_holder.style.gridTemplateColumns.split(\" \");\n  }\n\n  // Get the next color in our list of colors.\n  function get_next_color() {\n    const colors = [\n      \"#e41a1c\",\n      \"#377eb8\",\n      \"#4daf4a\",\n      \"#984ea3\",\n      \"#ff7f00\",\n      \"#a65628\",\n      \"#f781bf\",\n    ];\n    const all_elements = grid_holder.querySelectorAll(\".added-element\");\n    // If we have more elements than colors we simply recycle\n    return colors[all_elements.length % colors.length];\n  }\n\n  // Removes elements the user has added to the grid by id\n  function remove_added_elements(ids: string | Array<string>) {\n    as_array(ids).forEach((el_id) => {\n      remove_elements(\n        document.querySelectorAll(`div.el_${el_id}.added-element`)\n      );\n    });\n\n    send_elements_to_shiny();\n  }\n}; // End of the window.onload callback\n\nwindow.onresize = function () {\n  draw_browser_header();\n};\n"]}