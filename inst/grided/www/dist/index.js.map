{"version":3,"sources":["misc-helpers.ts","make_el.ts","icons.ts","make_incrementer.ts","focused_modal.ts","make_css_unit_input.ts","make_toggle_switch.ts","find_rules_by_selector.ts","index.ts"],"names":[],"mappings":";;;;;;AEAa,OAAA,CAAA,kBAAA,GAAqB,+IAArB;AEAb,AFIa,AGJb,AFAA,AGAA,IFAA,ACAA,AFAA,AGAA,GJIa,CAAA,GGJb,AFAA,ECAA,AEAA,CDAA,AFAA,ECAA,AEAA,KDAA,AFAA,CEAA,AFAA,CCAA,AEAA,CFAA,AEAA,IJIa,GAAuB,AGJpC,AFAA,CEAA,AFAA,GCAA,AEAA,CFAA,AEAA,0JJIa;AAIA,OAAA,CAAA,aAAA,GAAgB,8LAAhB;AEDb,AFKa,AGXb,AFAA,AGCA,IDDA,AFAA,GDWa,CAAA,CELG,AELA,IDDhB,AFAA,GEAA,AFAA,MCMA,CAA8B,ACN9B,AFAA,CEAA,AFAA,EDWa,CELb,AELA,CACE,CFI+C,AFKf,KIVlC,CDDA,AFAA,CEAA,AFAA,AGGE,EHDF,MGDA,EAGE,OAHF,EAIE,SAJF,EAIqC,0HJMxB;AEJX,AFQW,AIRX,MFAM,AEAA,CJQK,CAAA,OIRI,CFAC,AFQL,EIRO,CFAC,AFQG,QIRJ,CFAC,AEAD,CFAC,MEAD,CFAC,AEAO,CFCxB,KEDgB,EAAgB,CFCxB,CAAC,aAAT,CAAuB,GEDP,CAAlB,EFCE,CADiB,EAEjB,wBAFiB,EAGjB,mFFKS;AEJP,AFQO,AGlBb,ACOE,EAAA,EFGI,ACVN,GHkBa,CAAA,GIXX,CAAA,IJWW,EERO,ACVpB,CHkBwB,AIXtB,CFGoB,AEHZ,CDPV,GDU0B,CAAC,GCV3B,CAAA,ACOE,EAAmB,cDPrB,CAAA,ACOE,EDAF,ACAsC,oIJWzB;AETT,AFaS,AGdb,AFNA,AGMI,GFFiB,CAAnB,AEEE,GJcS,CAAA,CCpBG,IGMH,EAAE,OJcF,GAAiB,ACpB9B,CAAiC,EAAjC,EAMC,0JDcY;AERX,AFYW,AGjBb,ACFsC,GAApC,GFOM,ADXN,CDuBW,CAAA,GEZA,GAAG,CDXL,EDuBE,CCvBF,EDuBc,ACvBd,CAAA,ECWK,CAAA,OAAA,CAAQ,SGhBxB,CHgBgB,EAAoB,WAApB,EAAiC,yZFYpC;AK3Bb,AHgBI,AFeS,AGpBb,ACAE,IFKE,EDXF,AGMM,CJoBK,CAAA,AC1BX,GAAA,AGMW,EHNX,CAAA,AGMc,GJoBH,CEfK,EAAE,AFeK,GIpBT,CFKQ,AELR,CFKS,MELT,CAAQ,SAAR,EAAmB,cAAnB,CAAd,gHJoBW;AK9Bb,AHciD,AFoBpC,AGvBb,AJZA,AKYE,EAAA,CFGc,CAAd,AHfF,EEKE,CD8BW,CAAA,GIvBX,CAAA,GHPS,GD8BE,ADnCb,AEKW,CGOT,CHPS,AGOD,CJuBgB,ADnC1B,IEKW,GFLX,CAAA,AKYE,CHPS,CAAA,AGOU,GHPP,CAAH,GAAI,OFLf,AKYE,CLZF,CKYqC,CLOrC,oGCgBa;AKjCb,ADWI,IAAA,EHPF,EAAA,GAAA,EAAA,AGOW,CHPX,CGOa;AFMb,AEPmC,GAAnC,GFOI,ADbJ,EAAE,ECaM,CAAC,ADbP,EAAA,KAAA,ICaF,CDbE,CCaoB,ADbpB,GAAG,aAAH,GAAgB;AIHpB,AHiBI,ACPJ,AJOA,AKLE,EAAA,EFKE,EDbF,EAAA,CIJc,AFUA,AJOP,EEbP,AGQA,CAAA,CFKE,ADbF,CCaE,ADbF,KFaF,AKLE,CLKkB,AKLV,CFKN,CAAQ,GELV,EFKE,AHAJ,AKLiB,CDFjB,CDOmB,ACPiB,AJOD,EMjBnC,AFUA,CETE,CFkBD,CCPC,EAAwB,SCZ1B,EAEE,AHeE,EAAmC,aGjBvC,EAE0B;AAExB,AHcI,AHAJ,AKLE,IAAA,EFKE,ACPJ,AJOM,AEdN,GGSO,EHTF,AGSI,GLKK,AEdT,CCcQ,ACPJ,CFPJ,CCcU,AHAoB,CIP1B,EAAA,CDOU,ACPV,AFPJ,CCce,EHAsB,CAAC,CEdtC,CAAA,GFc8B,AEd3B,CFcyC,EGDZ,UHCF,CAAnC,EEdK,GAAmB;AICxB,AHcI,AHAJ,AKNW,MCRL,AHcF,ACPJ,AFPA,AGQW,EDDX,AFPA,CFcO,CKNQ,CDDf,AFPA,CCcU,AENO,CDDjB,AFPA,CCcY,ACPZ,AFPA,GFce,GAAG,CMdG,GAAG,INcE,CAAC,CAAD,CAAR,CAAY,CMdxB,MNcY,CAAoB,GAApB,EAAyB,EAAzB,CMdM,ANcT,CMdU,ENcuB,IAAhD,OMdwB,EAAsB;AAAK,AHe7C,AHAP,AKPU,KADe,CDAxB,AFPA,ECeM,GGf6C,GFO3C,GAAA,CFPI,CEOJ,EEP4C,AHejC,ADfP,ECeS,ADfT,CEOJ,CEP2C,EAAc,CJArD,CEOJ,CAAA,GAAG,AFPC,CAAA,CEOJ,EFPO,CEOF,SFPG,CAAD,EAAE,kVHCnB;AOAI,AHaU,ADdU,AGSpB,IAAA,EDDF,EAAA,GAAA,AFRsB,EICnB,AFOH,CAAA,GEPwB,CAAC,AJDI,AGSb,CHTc,CGSZ,EHTI,CAAY,CAAZ,CAAA,KICnB,KAAuC,aAAxC;AAAqD,AHWlB,AHKvC,AEjBsC,AGUhC,ANRN,GGFc,EIAuC,AHYjD,CCJF,AFRoC,AGUhC,GLOG,ADfO,EMQL,EAAE,EDFF,GAAA,EAAA,CCCS,GLQpB,CITW,AJSc,KITd,CAAA,CJSX,ADfA,CAAwC,CKM1B,AJSyB,CIT5B,GAAI,ALNf,EAAuD,GAAvD,EAAmE;AODV,AHiBtD,AHAD,AEfA,AGQI,ANRJ,GOHA,GFSA,AJSM,AEfA,AGQF,EDFJ,ECEQ,CDFR,CCEU,CDFV,CAAA,EJSgB,GAAqB,CEfjB,GAAG,GFeqB,AKPjC,CLOkC,IKPnC,CLO2B,AEfd,CFe4B,AEf5B,AGQP,OHRO,CACrB,MFcmC,CAArC,EEfuB,EAErB,SAAO,EAAP,GAAS,6CAFY,EAGrB;AFaF,AEZI,AGKE,ANRN,IGGI,EEEJ,ECGM,CLOC,IEZM,EAAE,CEEL,CCGK,CAAE,CDHP,AJUO,EIVP,CJWN,CKRkB,CAAC,EDHb,ICGO,CDHP,ACGyC,CDHzC,GAAG,AJWT,CAAA,EAAA,AKRW,CDHL,ACGJ,CLQE,EIXS,EFFuB,KAAzB,CFaX,CAAA,CAAgB,AEbyB,GFazC,CAAoB,UAAA,CAAA,EAAC;AMjBzB,AHiBA,AHA6B,AEd3B,AGOG,ANRL,GGFuB,CAAvB,EIAM,AFON,ALLM,EKKN,CDUO,ECVP,AJU6B,CAAC,CIV9B,AJU+B,CIV/B,EEPgB,GAAA,CNiBa,ADfT,CCemB,EDfP,ECeH,EAAgB,CDfR,CCeR,CAAA,CDfW,COFxB,APEhB,COFgB,APDiD,CAKjE,COJgB,EAAO,QAAQ,CAAC,WAAhB,CAAhB;AHkBE,AHD8C,AEThD,AGFkB,ANDlB,GCYI,CGCF,AHFe,EITjB,AFCM,CFUF,IAFJ,GGEY,CCXH,CDWG,ADVI,EEDP,CFCU,CEDV,KAAA,CDUF,EDTY,CAAA,CEDV,CAAA,GAAG,EFCO,CAAQ,OEDd,CAAD,EAAU,IFCH,EAAwB,+BAAxB,CAAnB;AIPA,AHkBE,ACZyB,AJY5B,AETC,AGNwB,ELiB1B,CKjBE,CFeE,EGlBI,AJSA,GCSC,EAAA,ACZoB,IFGZ,CCOR,ECV2B,AFGhB,CEHiB,GAAR,CAAY,CENf,GAAG,AJST,CAAA,OAAA,CAAQ,CITW,CAClC,EFKwB,EAA+B,CAA/B,CENA,AFMA,CELjB,CJQQ,EAAoB,OIR3B,WAAD,EAA2B,eJQnB,EAAyD;AIPvE,AHiBF,ACb0D,AJe9D,AEXI,AGGF,ANRA,EMQA,ANRA,CKCS,CDaP,ADTA,CHLC,CKCyD,ELDtD,CGKC,CCSC,CGjBJ,AJQK,AGGT,ANRS,CIcC,AENV,ENRY,GAAG,EMQf,CAAQ,ANRU,CAAT,GOHL,ACfN,ARkBwB,COHlB,ADWJ,ECXI,ADWW,ECXP,APGmB,CIcjB,GJdqB,OOHZ,ADWnB,CCXoB,CDTe,CAsBnC,GCbI,CAAA,APGyC,COHlB,EPGqB,CAAC,COH7C,APGyC,COHb,EPGqB,CAA1B,CAA3B,CAPiE,CAQjE,SOJ+C,CAAC,aAAD,CAA3C,CAAA;AAA2D,AHiB/C,AHGlB,AEZY,GIViB,EAIxB,CFGH,AFGU,EIViB,AFO3B,CEFI,CJKU,CEHd,CFGgB,CCSA,ACZhB,CAAA,KEFK,CAAD,EAAE,CHcoB,CAAC,MAAX,EAAA;AGbV,AHa6B,AI/BrC,ALsBW,AGMT,ANRA,IQpBF,CLqB6E,CEF3E,ACSM,GNRI,EOFH,EClBT,CRoBiB,EQpBjB,CF4BmB,ANRF,EKDF,CCSsB,EDTtB,ALCH,CQpBZ,CDkBS,AClBT,AHmBe,CEDN,APEc,EOFd,CDUoC,ANR3C,COFW,AFCE,ACS+B,CCVhC,CAAC,GFCA,CGnBf,AHmBe,CGnBf,EHmBkB,CEDT,AFCU,CEDV,ADU4B,CCVZ,ADUiC,CAArB,CDTnB,ACShB,ECVO,AFCgB,CEDK,GFCZ,EAAa,KAAb,CAAH,GAAsB,CEDQ,CAAC,aAAD,CAApC,EACE,KADH;AACQ,AHSP,ADLL,AGOF,ANTD,EMSC,CClB2B,AHgB3B,CDLE,CIFC,CFDH,EAAA,GER2B,AFQ3B,CECU,CFDV,AFGW,AGOA,CDVX,ACUY,CHPC,OIFF,AJEE,CIFH,AJEG,CGOb,CCTY,ADSW,QHToD,4MGS3E;ACTiB,AHYlB,AIhCD,APkCA,AEXI,AGiBF,EAAA,EExCF,ALuBI,EEJF,GJec,EMdI,EDoBP,CAAC,ELNd,CIfa,AJgBX,CEZgB,EEJL,AFIO,EKvBpB,AHmBa,CJeb,CKME,CExCF,APoCE,AKIuB,CCpBU,CFDtB,EECyB,CAAC,CAAC,CCpBxC,AHmBa,AJeb,COlCA,AHmBa,CJkBX,EIlBc,EAAH,AJeb,EAGyB,CIlBP,KECqB,CAAJ,GAAwB,GCpB3D,CDoBmB,ACpBnB,gCFwCE;ACpB8D,ANiB9D,AEbI,AGqBJ,ANpCF,EMoCE,CClC2B,CAA3B,EFSA,AJiBA,AEbI,CHfN,CKWE,ALXF,EC4BE,CIjBA,AFIS,EEJT,AFIW,AGqBA,CDzBX,ACyBY,CLRZ,KAAA,AEdkB,CFclB,EAAA,CKQA,CAAuB,MNpCzB,GAAA,uBAAA,uCMoCE;ACvBA,AHjBF,AIJA,APoCE,AEZI,AG0BJ,EAAA,EElDF,APoCE,EMfM,AFFN,AFKI,CCpBN,CAAA,AHgCE,EEZQ,CFYR,CEZU,CFYV,AKcW,CC7BG,AFFN,AC+BI,GC7Ba,AFFjB,EGnBV,AHmBU,EDfV,CIJA,EJIA,ACeU,AC+BR,CACE,IEnDJ,AHmBU,AFKmB,CKxB7B,AHmBU,AFKoB,CAAC,CAAF,CELhB,EEEgC,CAAC,CHjB9C,ECeU,GEER,AFFiB,KGnBnB,CAAA,mFFkDE,EAOE,CAPF,EA/CmC,CAyDnC;ADvCA,AJeuB,AEdL,AHDpB,MKAQ,GLAQ,OKAE,GAAG,QAAQ,CLA7B,CACE,EADF,CKAkC,CLEhC,KKFA,MLAF,EAGE,SAHF,EAGiC;AOF/B,ACrBF,AHsBE,AFJ2E,AG0C3E,ANnCA,EMmCA,CH1CkB,CKlBpB,ALkBE,EIGI,AFCE,ALGF,IKHM,GAAG,ACsCF,CCvCC,ADuCA,GNnCG,CAAC,COJC,CAAjB,EAAoB,AFCP,CAAA,CCsCb,CE5DF,AF6DI,ENpCF,CQzBF,CRyB6B,CKHd,CAAQ,IGtBvB,CAAA,IHsBe,EAAmB,SAAO,QGtBzC,AHsBkC,CGtBlC,EHsBiD,iBAAlC,EAAqD,cCsClE,EAME,CANF;ACtCE,AFCA,AJeF,AEZA,AG2CA,AN3CE,EM2CF,ED9CE,ALGA,ECYI,AEZA,AHAF,CAAC,GKHG,EAAE,ALGR,CM2CS,AN3CA,CCYG,AK+BF,GL/Ba,EEZN,GAAG,CEJ4C,CJgBlC,AK+BhC,CL/BiC,AKgC/B,AN5CA,GAAwB,ECYD,CAAc,AEZjB,CAAA,OAAA,AHAe,CGAP,AHAQ,KCYb,EAA8B,CAA9B,CAAzB,ADZ0B,CGAJ,AHA0B,EGAN,MHAhB,EAAxB,qBGAoB,EAAmD,0KG2CzE,EAaE,CAbF;AC9CE,ACtBJ,AHuBI,AJeF,AEZE,AGyDF,ANzDC,EMyDD,EEnFF,AHuBI,AFGA,EFYI,EMhBE,GNgBG,EEZA,AGyDA,CL7CG,AK6CF,CHzDC,GIJK,ACtBpB,AHuBkB,EAAE,CEDG,ACtBvB,AHwBM,GJcoB,AEZF,AGyDtB,CL7CyB,AEZF,AG0DrB,GEpFJ,CAAA,EDsBiC,CAAC,ANgBR,CAAxB,AEZa,SIJ6B,CAAC,ECtB7C,CAAA,GDsBkC,GAAoB,CAArB,CAA7B,yND6DF,EAaE,CAbF;AC5DE,AFCI,AJeN,AEdyE,AGyEzE,EAAA,CHzEsB,CIFpB,AJEF,EEDM,AJeA,KIfK,EAAE,AC0EF,CC3EC,AD2EA,CC3EC,CNgBG,GAAG,EIff,GC0EJ,CC3EE,AD4EA,CC5EyB,QNgBO,CAAC,IMhBK,GAAA,ANgBN,CAAlC,KMhBE,EAA8C,CAA9C,sCD2EF,EAIE,CAJF;ACzEE,ACRJ,AHOyB,AJiBvB,AEZA,AG2EA,AN7EA,EGEA,AG2EA,EEvFF,EHOyB,AJiBnB,ADdA,ECcE,EIjBqB,CECjB,ANgBY,AEZtB,CEL6B,AFK7B,CG2EW,CAAC,GL/DgB,ADdb,CCcc,ADdb,CGEhB,CAAQ,IIJE,ACRZ,AFuFE,CC/EU,ADgFR,AN9EF,EOFU,ACRZ,ARU2B,EOFX,CJId,CFYsB,CAAqB,AEZvB,EKZtB,CAAA,IDQ0B,ANgBF,CMhBG,ANgBzB,QMhBU,CAAA,CAAyB,IAAzB,CACN,ECTN,CAAA,QLYE,EAAwD,EIHrC,CAAC,aAAD,CADT,EAEW,ED6ErB,EAIE,CCnFA,AD+EF;AC5EC,AFJG,AFMF,AGgFF,ANlFE,EMkFF,CC1FA,CJUE,AHFA,CKLgB,CLKd,CKHA,ALGC,EOAE,AJEA,EAAE,CHFP,CMkFS,ANlFA,CMkFC,SNlFV,CMkFF,CACE,CNnFsB,CAAC,WAAW,CAAC,OAAZ,GAAsB,CAAvB,EAA0B,QAA1B,EAAtB,oHMkFF,EAME,CANF;ACjFE,ACXJ,AHQQ,AJgBN,AEZU,AGwFX,ANzFE,IQXH,EHQQ,AJgBF,AEZM,CFYL,EAAL,CEZc,CKZhB,AHQa,AJgBF,CEZO,CEJH,CGRf,OAAA,AHOM,CGPN,SAAA,CAAA;ADYI,AFHI,AJgBJ,AEbO,KAD+C,CEFlD,IAAI,CEGD,CFHG,cAAU,CAAV,EEGe,AFHJ,CEGK,QAAQ,GAAG,CAAZ,CAAzB;AACD,ACZH,AHSU,AJgBN,AEbA,AGlCJ,ANiCE,IQXF,APyBI,AEbA,EFaE,ADdA,CMjCN,CAAA,CL+CS,IEbI,EAAE,EFaE,ADdA,CCcC,ADdA,IGCH,CAAA,GGlCf,CNiCE,CQXF,CFtBA,ANiC6B,EQX7B,APyBS,CAAuB,AEf0B,MKV1D,CAAA,CPyBS,CAAL,MK/CJ,kBEsBA,CAAA;ADaC,AFHS,AFGN,AHDA,IGCA,AHDA,EAAE,CAAC,CKFG,CAAC,CAAC,ELER,CAAS,KGCK,EAAE,IEHV,ILEN,GAA2B,WAAW,CAAC,SAAZ,CAAsB,QAAtB,EAA3B;AQVS,AHSJ,AJeL,AEZE,AHDH,MGCG,CKZO,CAAA,APwBL,GEZG,EKZE,APwBT,AEZS,EFYE,COxBO,ILWF,EKXgB,CAAC,KAAxB;ADtBb,AF0BM,AJqBA,AEZA,KEXc,CFWd,CInCN,CAAA,EJmCU,EAAE,iBAAiB,CInC7B,AJmC8B,CAAD,EInC7B,sBAAA;AC6DA,AHvCoE,AJ0B9D,AEfc,AHClB,GKZa,CAAb,EGuCI,APbA,ADdA,CQ2BC,CPbC,CAAC,EAAH,EOaN,CPbc,EOaE,CR3BC,CAAC,CCcZ,MDdJ,EAAyB,CQ2BX;AACd,AH1BA,AJaG,AEnBqD,AHKtD,GGLF,CHKE,EKCI,ALDF,CAAC,KAAH,CAAS,IKCM,GACf,MLFA,GKEA,ALFyB,CKEzB,ALF0B,OKE1B,CAAQ,GLF6B,CKErC,ALFsC,EKExB,KLFY,GAAsB,CAAvB,EAA0B,QAA1B,EAAzB,OKEA,EAA4C;AG0B9C,AHzBI,ALFH,IKEG,KAAK,EAAE;AG0BX,AHzBM,AJYJ,AEZF,MKyBM,AHzBA,EJYA,EIZI,CFAD,CEAG,MJYV,COaiB,CH1BR,AJaO,EOaI,CLzBtB,CAAsB,SAAtB,EAAuC;AKyBf,AHxBlB,AJYF,AEZF,AHFF,EAAA,EQ0BwB,ALxBtB,AHFA,CAAC,CKEG,AJYF,EOYwB,CHxBnB,CGwBqB,AR1B9B,CKEW,ALFF,CQ0Ba,AH1BX,IJcG,CAAC,AEZA,CAAC,AHFhB,GAAmB,GCcf,CAAmB,EEZrB,CHFF,CAf+B,CGiBH,AHFA,KCcJ,CAAD,EAAE,CEZY,CAAC,QAAV,EAA1B;AKwBgC,AHvB5B,AJWwB,ADb/B,IQyBmC,EHvB5B,EGuBgC,EAAE,CHvB7B,EAAE,EJWiB,EAAE,CAAC,IIdtB,KJcmB,CAAa,GAAb,CAAiB,CAAjB,CAAA;AOYR,AHtBhB,AJU2C,AEV/C,GKsBF,CAHc,CAId,CHvBM,CJUF,CEVE,EEAI,EAAE,CAJD,IFII,KAAK,CAAlB,EAAqB;AECjB,AJUH,AEVC,AHvBN,MGuBM,CHvBN,CAAA,OGuBe,CAAC,GEAK,MFAf,CAAoB,CHvB1B,EGuBM,CAAwB,AHvB9B,UGuBM,SHvBN,EAqBA;AQyBE,AH5BW,AFMR,AHFL,KGAI,CKwBE,KLtBK,QKsBQ,GAAG,EAApB,CALc,CAOd;AACA,AHhC8C,AJkB5C,AEVE,GERF,CADF,EFSI,EFUE,IAAI,CAAC,EEVE,CAAC,EFUZ,EAAgB,KEVd,CAAoB,MAApB,CAA2B,UAA3B;AKyBJ,AHtBA,AJQI,AEVD,AHHL,MKKQ,AJQF,GDbU,GCaJ,CAAC,MIRQ,AJQf,CAAc,EIPhB,AJOE,EAAkB,IAAI,CAAC,CDb7B,CKMI,ALNkC,CKMlC,EJOE,CDbN,EAAyD,EKMrD,CAAQ,IAAR,EAAc,8BAAd,EAA8C;AAC5C,AJOD,AEVF,AHHD,IKMI,KAAK,ALNF,EKMI,ILNE,CAAC,IAAD,EAAO,GAAP,CAAb;AQ2BA,AHrBa,ALLd,MQ0BO,AHrBO,IAAI,EAAE,KGqBF,GAAgB,QAAQ,CAAC,aAAT,CAAuB,YAAvB,CAAjC;AAEA,AHvBW,AJST,AEXF,IFWE,EOcI,IPdE,CAAC,AEXA,SKyBW,EPdlB,COckC,APdf,EAAnB,GEXF,CAA2B,EKyBiB,CAAC,GLzB7C,EAAiC,QKyBG,CAClC,sBADkC,CAApC;AAIA,AH5BgD,AJW/C,AEXC,AHNJ,GKMI,CADF,EG6BM,CRlCR,CAAA,GGMW,QK4BU,GAAkB,CL5B5B,MHNX,GAAA,qBAAA;AQmCI,AHxBF,AFJI,IK4BF,EHxBI,IFJI,EK4BA,CHxBG,CGwBD,EHxBI,GFJG,GAAG,CAAC,EEIP,CAAA,MGwBJ,CAAA,AHxBI,CAAQ,EFJY,CAAC,CEIrB,EAAc,MFJR,GK4BV,AL5BqC,CK4BpB,KL5BzB,aEIY,EAA4C;AGyBxD,AHxBF,AJOF,AEVI,AHLN,IKQI,EGwBE,APjBA,AEVA,GHLU,CCeN,CAAC,EIPE,EGwBE,AHxBA,ALRf,CACE,CQ+Be,CL3BC,CAAC,IEGI,EJOrB,CDfF,CCe2B,CIPC,AFHV,AHHhB,CGGI,EK0ByB,AHvBhB,GAAmB,OAAA,ALRlC,CKQkC,CLNL,iBKMd,GAAwC,OAAA,CAAA;AGyBjD,AH1BwD,AJS1D,AEVE,AHJJ,GKKgB,CAAhB,AJSE,CI5CH,CG6DK,AHtBJ,AFLI,AHJJ,EQ+BM,EAAE,QPjBN,AEVc,CFUd,AEVe,AHJjB,CQ6B6B,IR7B7B,GCcE,CAAS,AEVK,CAAZ,AHJJ,CAAA,ECce,ADdf,CCcgB,cAAd,EAA8B,OAA9B,CACE,UAAC,QAAD,EAAS;AOiBT,AHtBJ,AJKkB,AEVf,AHLH,IAAA,CGAE,CKgCE,OPjBe,EOiBN,APjBQ,CAAC,COiBP,ARhCf,CQ6B6B,ER7B7B,GCe6B,ADf7B,QCeqC,CAAC,KAAjB,CAAF,GAA4B,QAAQ,CAAC,IAAtC;AOkBd,AHtBJ,AJI6D,AET5D,AHN0B,KCczB,COmBE,KAAK,EAAE,gBAJkB;AAKzB,APjBH,MOiBG,YAAY,EAAE,sBAAC,CAAD,EAAE;AAAK,AHtBzB,AFJA,AHNA,EKUA,OFJO,AHNA,EKUP,CAAA,GGsByB,IHtBzB,ALViB,CKUT,ALVU,CGMlB,KHNO,CKUP,ALTE,EKSe,QLTd,CQ+B6C,CAAC,MAAD,CR/B9C,CQ+BuD,CAAT,AR/BlC,CQ+BW,MR/BvB,EAAqB,CAArB,EAAsB,GKSxB,EAAqD;AGsBM,AHrBzD,AJMF,AEVD,AHLK,IKSF,EJME,GING,CJMC,CINC,AJMA,ADfL,MCeJ,EAAiB,CDfJ,IAAI,CAAC,GAAG,CAAJ,GAAQ,aAAR,GAAwB,EAA5B,CAAT,GAA2C,OAA3C;AQyByB,AHhBlB,AJOT,ADhBoD,GAF/C,CCkBL,COSU,ARxBV,CQuBmC,AHf1B,CLXJ,CAAP,ECkBQ,CAAC,IIPW,EAAE,AJOpB,CAAc,EAAE,CAAC,KAAjB,EAAwB,IAAI,CAAC,MAA7B;AOgBA,AHvBO,AJQR,AEtEH,AHwDC,IQ6BG,CHxBmD,EF7DvD,CAAA,IKqFY,EAAE,ULrFd,GAAA,KKqFc,CAAA,ULrFd,MKqFc,CAAiB;AACzB,AHvBF,IAAA,EGuBE,SAAS,EAAE,CHvBC,EAAE,CACd,UGqByB;AAEzB,AHtBE,AJON,ADzBF,MQwCM,AHtBE,AJOF,CDzBN,CQwCQ,ARxCR,EQwCU,APfA,CIPG,AJOF,EIPI,CLlBf,GAAA,GQsC+B,APb7B,EAAoB,CDzBtB,CKiBM;AGwBA,AHtBE,AJOJ,IAAA,EOeE,AHtBE,AJOF,CAAC,GIPK,EAAE,GGsBC,CPfX,COea,CAHc,CPZZ,IAAI,CAAC,EIPA,KAAV,EAAe,AJOzB;AOgBE,AHtBI,AJOP,ADhBH,MQ+BM,GR/BU,EQ+BL,EAAE,AHtBE,KLTf,EKSU,CAAa,ALTE,QQ2BM,AHlBrB,GAAwB,WAAW,CAAC,KAApC;AGuBJ,AHtBI,ALVgB,MQgCpB,ARhCoB,OKUX,KGsBG,EAAE,AHtBV,CAAa,ELVG,GKUhB,ALVgB,EAAA,CKUK,KAAK,CAAC,OGsBhB,CAAD,AHtBgB,CAA1B,CGsBY;AAAK,AHrBlB,AJOP,MAAI,IAAI,CAAC,IOcgB,MPdzB,EAAqB,eOc2B,CAAC,MAAD,EAAS,CAAT,CAAvB;AAAkC,AH1BvD,AJaF,IAAA,CIdgB,EAQd,ALboB,GCmBhB,CAAC,ADnBe,EAAA,GAAA,CCmBtB,CAAc,CDnBQ,CCmBN,CAAC,ADnBK,GAAA,ICmBtB,EAA0B,GDnBJ,CCmBQ,ADnBR,CCmBS,ODnBT,EAAA,CCmBtB,GDnBoD;AQ2BzB,AHbvB,AJML,ADpBuB,IAAA,CQ2BZ,CARyB,AHL/B,KAAK,EAAE,MADT,ELboB,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;AQkCtB,AHnBI,IGmBJ,EHnBI,CGmBD,EAAE,CHnBG,EAAE,cAAU,IGmBf,CAAA,AHnBK,EAAe,iBGmBpB,CAAoB;AACvB,AHnBI,AJMR,MOaI,APbA,IAAI,CAAC,CINK,GGmBD,EAAE,EPbf,CINsB,CJMH,EINM,GGmBV,CAAA,CHnBe,CAAC,KGmBhB,CACT,EHpBwB,CAAtB,CADmB,CAEnB,SGkBO,EAET,qDAFS,EAGT;AACE,APhBN,ADtBF,ICsBE,IOgBM,CRtCD,MAAM,CAAC,CQsCG,CPhBf,COgBiB,APhBjB,cDtBW,EAAoB,GCsB/B,CAAoB,ADtBT,CAAb,CCsBE,EAAwB,IAAI,CAAC,QAA7B;AOeI,AHpBE,AJMP,ADtBF,OQiCgB,CADY,IHhBf,QAAQ,KAAK,CAAjB,EAAoB;AGwBxB,AHvBI,MGuBJ,MHvBU,EGuBF,EAAE,KHvBS,GAAG,IAAI,CAAC,GAAL,CAChB,CADgB,CGeC,CHbjB,CAAC,KAAK,OAAL,CAAa,QAAd,IAA0B,KAAK,CAAC,QAAD,CAAL,GAAkB,KAAK,OAAL,CAAa,KAAzD,CAFgB,CAAlB;AGwBJ,AHpBI,AJGR,AD1BF,MQ2CM,CR3CN,CKuBU,ALvBV,CC0BS,EAAP,IOiBa,EAAE,AR3CjB,EKuBqB,CAAC,ALvBtB,KKuBU,GAAoB,CLvB9B,OQ2CkB,CAAD,AHpBsB,CAAC,CGoBrB,OHpBW,EAApB;AGoBc,AHnBd,AJGT,QIHS,OGmBc,EHnBL,CAAC,QGmBe,CAAC,IHnBH,EAAd,CAAT;AGmB4B,AHlB7B,ALrBT,SAAgB,CQuCsB,GAAG,EAAE,GRvC3C,GAAyB;AQuCW,AH9B9B,AJvCN,AD8B0B,KKCN,CLDM,CC9B1B,CAAA,COqEmC,CAAX,KPrExB,GAAA,KD8B0B,EC9B1B,CD8B0B,CCyB1B,CDzB0B;AQuCqB,AHxCQ,GAArD,IG+B2B;AAUvB,AHdJ,AJAF,EIAE,IGcI,CRxCoB,EC0BV,ED1BU,EAAA,EK0BX,CAAC,AL1BU,GQwCP,ARxCO,EQwCL,ARxCK,CQwCJ,CHdpB,CAAsB,AJAxB,AD1B0B,CC0BM,COcX,EAAO,KAAP,ARxCK,CK0BQ,AL1BR,IC0B1B,EAAkE,ED1BxC,CK0BF,CL1BE,CK0BiB,GL1Ba;AQ8B3B,AHHzB,AJAF,AD3BwB,EC2BxB,ED3BwB,CQ8BjB,GHHC,OJAK,CAAC,GIAK,EL3BK,CK4BpB,AL5BoB,CC2BxB,CAAsB,AD3BE,CAAA,GAAA,GK4BpB,CAAA,EJDmB,CAAD,EAAE,AD3BA,CAAA,CK4BpB,CAAQ,AL5BY,CAAA,YK4BpB,EAAuB,YAAU,SAAjC,EAA8C;AGbb,AHc/B,AJFuB,GOZ7B,GHcM,KAAK,AJFkB,CAAC,CIEjB,AJFkB,MAAF,EAAA;AIEd,AJFwB,GAAvC,KIEe,KAAK,EAAE;AGetB,AHfa,AJDd,AD3BC,OK2BkD,EL3B3C,EQ2CE,IR3CI,CAAC,iBAAD,CQ2Cb,CAAiC,AR3CA,GQ2CjC,AR3Ca,CAAb,CQ2CsC,SAAtC,EAA+C;AHdzC,AL5BP,MK4BO,SAAS,EAAE;AAFiC,AJFpD,KIEM,CADF,CJDJ,CAAA,eAAA,GAAA,eAAA;AOmBI,AR7CJ,OAAA,CQ6CU,AR7CV,SAAA,GQ6CsB,AR7CtB,GQ8CM,GAAG,GR9CT,EQ8Cc,MAAR,GAAiB,gBAAgB,EAAjC,GAAsC,gBAAgB,EADxD;AHXA,QAAI,SAAS,KAAK,UAAlB,EAA8B;AGc9B,AHbE,AL/BN,MK+BM,EGaE,CR5CQ,QQ4CC,AHbA,AL/BjB,CK+BkB,AL/BU,EQ4CR,KR5CpB,CK+BM,CL/B2C,EK+BpB,GGaG,CAAC,AHb3B,MGaF,EAAqC;AACnC,AHbD,AL/BH,MQ4CI,AR5CA,OAAO,KQ4CK,CAAC,IAAb,CAAkB,CR5CC,IQ4CnB,CR5CJ,EAA8B;AQ6C3B,AHbF,AL/BC,GKoBF,EGsBE,MAEO,AR5CA,IQ4CI,GR5CX,MQ4CoB,GAAG,YAAY,CAAC,MAA7B,EAAqC;AAC1C,AR5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","file":"index.js","sourceRoot":"..","sourcesContent":["import { Grid_Pos } from \"./index\";\n// Functions related to grid construction\n\nexport type XY_Pos = {\n  x: number;\n  y: number;\n}\n\nexport type Drag_Type = \"top-left\" | \"bottom-right\" | \"center\";\n\n// Builds the start/end css string for a grid-{row,column}\nexport function make_template_start_end(start: number, end?: number): string {\n  // If we only have a single value just assume we take up one row\n  // If single index is a negative one, we need to subtract instead of add to it\n  const negative_index: boolean = start < 0;\n\n  // Grid works with lines so if we want an element to end at the 4th column we\n  // need to tell it to end at the (4+1)5th line, so we add one\n  end = end ? end + 1 : start + (negative_index ? -1 : 1);\n  // end = end ? +end + 1 : start + (negative_index ? -1 : 1);\n\n  return `${start} / ${end}`;\n}\n\nexport function set_element_in_grid(\n  el: HTMLElement,\n  grid_bounds: Grid_Pos,\n  el_styles?: CSSStyleDeclaration\n) {\n  if (grid_bounds.start_row) {\n    el.style.gridRowStart = grid_bounds.start_row.toString();\n  }\n  if (grid_bounds.end_row) {\n    el.style.gridRowEnd = (grid_bounds.end_row + 1).toString();\n  }\n  if (grid_bounds.start_col) {\n    el.style.gridColumnStart = grid_bounds.start_col.toString();\n  }\n  if (grid_bounds.end_col) {\n    el.style.gridColumnEnd = (grid_bounds.end_col + 1).toString();\n  }\n\n  el.style.display = \"block\"; // make sure we can see the element\n}\n\n// grid-template-{column,row}: ...\n// Take a vector of css sizes and turn into the format for the css argument for\nexport function sizes_to_template_def(defs: Array<string>) {\n  return concat(defs, \" \");\n}\n\nexport function concat(\n  string_vec: Array<string>,\n  collapse_char: string = \" \"\n): string {\n  return string_vec.reduce(\n    (concatted, current, i) =>\n      concatted + (i > 0 ? collapse_char : \"\") + current,\n    \"\"\n  );\n}\n\nexport function concat_nl(...component_strings: string[]) {\n  return concat(component_strings, \"\\n\");\n}\n\nexport function concat_sp(...component_strings: string[]) {\n  return concat(component_strings, \" \");\n}\n\nexport function as_array<T>(content: T | Array<T>): Array<T> {\n  if (content instanceof Array) {\n    return content;\n  } else {\n    return [content];\n  }\n}\n\n// Passing an undefined value to a compare like min or max will always give undefined\n// These functions let you default to the second option in the case the first is falsy\nexport function compare_w_missing(\n  compare_fn: (...values: number[]) => number,\n  maybe_a: number | null,\n  b: number\n) {\n  return maybe_a ? compare_fn(maybe_a, b) : b;\n}\nexport function min_w_missing(maybe_a: number | null, b: number) {\n  return compare_w_missing(Math.min, maybe_a, b);\n}\nexport function max_w_missing(maybe_a: number | null, b: number) {\n  return compare_w_missing(Math.max, maybe_a, b);\n}\n\nexport type Selection_Rect = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n}\n\n// Produce bounding rectangle relative to parent of any element\nexport function get_bounding_rect(el: HTMLElement): Selection_Rect | null {\n  if (el.offsetParent === null) {\n    return null;\n  }\n  const top = el.offsetTop;\n  const left = el.offsetLeft;\n  const height = el.offsetHeight;\n  const width = el.offsetWidth;\n  return { left: left, right: left + width, top: top, bottom: top + height };\n}\n\nexport function boxes_overlap(\n  box_a: Selection_Rect,\n  box_b: Selection_Rect\n): boolean {\n  const horizontal_overlap = intervals_overlap(\n    [box_a.left, box_a.right],\n    [box_b.left, box_b.right]\n  );\n  const vertical_overlap = intervals_overlap(\n    [box_a.top, box_a.bottom],\n    [box_b.top, box_b.bottom]\n  );\n\n  return horizontal_overlap && vertical_overlap;\n\n  // Figure out of two intervals overlap eachother\n  function intervals_overlap([a_start, a_end], [b_start, b_end]) {\n    //   aaaaaaaaaa\n    // bbbbbb\n    //         bbbbbb\n    const a_contains_b_endpoint =\n      (a_start >= b_start && a_start <= b_end) ||\n      (a_end >= b_start && a_end <= b_end);\n\n    //   aaaaaa\n    // bbbbbbbbbb\n    const b_covers_a = a_start <= b_start && a_end >= b_end;\n\n    return a_contains_b_endpoint || b_covers_a;\n  }\n}\n\nexport function update_rect_with_delta(\n  rect: Selection_Rect,\n  delta: XY_Pos,\n  dir: Drag_Type\n): Selection_Rect {\n  // Need to destructure down to numbers to avoid copy\n  const new_rect: Selection_Rect = { ...rect };\n\n  // The bounding here means that we dont let the user drag the box \"inside-out\"\n  if (dir === \"top-left\") {\n    new_rect.left = new_rect.left + delta.x;\n    new_rect.top = new_rect.top + delta.y;\n  } else if (dir === \"bottom-right\") {\n    (new_rect.right = new_rect.right + delta.x), new_rect.left;\n    (new_rect.bottom = new_rect.bottom + delta.y), new_rect.top;\n  } else {\n    // Just move the box\n    new_rect.left += delta.x;\n    new_rect.top += delta.y;\n    new_rect.right += delta.x;\n    new_rect.bottom += delta.y;\n  }\n\n  // Make sure positions are proper for bounding box (in case box was flipped inside out)\n  if (new_rect.left > new_rect.right) {\n    const { left, right } = new_rect;\n    new_rect.right = left;\n    new_rect.left = right;\n  }\n  if (new_rect.top > new_rect.bottom) {\n    const { top, bottom } = new_rect;\n    new_rect.bottom = top;\n    new_rect.top = bottom;\n  }\n\n  return new_rect;\n}\n\nexport function get_css_unit(css_size: string): string {\n  return css_size.match(/[^ \\d | \\.]+$/g)[0] || \"px\";\n}\n\nexport function get_css_value(css_size: string): number {\n  return Number(css_size.match(/^[\\d | \\.]+/g)[0]);\n}\n\n\n","import { Grid_Pos } from \".\";\nimport {\n  as_array,\n  set_element_in_grid,\n} from \"./misc-helpers\";\n\nexport type Event_Listener = {\n  event: string;\n  func: (event: Event) => void;\n}\n\ntype Element_Opts = {\n  event_listener?: Event_Listener | Event_Listener[];\n  styles?: object;\n  innerHTML?: string;\n  data_props?: object;\n  grid_pos?: Grid_Pos;\n  props?: object;\n}\n\n// Safari doesn't support lookbehinds for regex so we have to make it manually\nfunction extract_id(sel_txt: string): string|null {\n  const id_match: RegExpMatchArray = sel_txt.match(/#([^\\.]+)/g);\n  return id_match ? id_match[0].replace(\"#\", \"\"): null;\n}\n\nfunction extract_classes(sel_txt:string): Array<string>|null {\n  const class_list: RegExpMatchArray = sel_txt.match(/\\.([^\\.#]+)/g);\n  return class_list \n    ? [...class_list].map(c => c.replace(\"\\.\", \"\"))\n    : null;\n}\n\n// This is a heavy-lifter that takes care of building elements and placing them\n// on the grid etc.. It only create's an element if it needs to, which means\n// that we dont get dom leaks caused by recalling stuff over and over again.\nexport function make_el(\n  parent: HTMLElement,\n  sel_txt: string,\n  opts: Element_Opts = {}\n  ) {  \n\n  const tag_type: string = sel_txt.match(/^([^#\\.]+)+/g)[0];\n  const el_id = extract_id(sel_txt);\n  const class_list = extract_classes(sel_txt);\n\n  let el: HTMLElement = parent.querySelector(sel_txt);\n  if (!el) {\n    // Element doesn't exists so we need to make it\n    el = document.createElement(tag_type);\n    if (el_id) {\n      // debugger;\n      el.id = el_id;\n    }\n\n    if (class_list) {\n      class_list.forEach((x) => el.classList.add(x));\n    }\n\n    if (opts.props) {\n      Object.assign(el, opts.props);\n    }\n\n    parent.appendChild(el);\n  }\n\n  if (opts.event_listener) {\n    as_array(opts.event_listener).forEach(\n      (listener) => (el[\"on\" + listener.event] = listener.func)\n    );\n  }\n\n  if (opts.styles) {\n    Object.assign(el.style, opts.styles);\n  }\n\n  if (opts.innerHTML) {\n    el.innerHTML = opts.innerHTML;\n  }\n\n  if (opts.data_props) {\n    Object.assign(el.dataset, opts.data_props);\n  }\n\n  if (opts.grid_pos) {\n    set_element_in_grid(el, opts.grid_pos);\n  }\n\n  return el;\n}\n\n// Given a list of elements from a query selector, remove them all\nexport function remove_elements(els_to_remove: NodeListOf<Element>): void {\n  els_to_remove.forEach((e) => e.remove());\n}\n","export const vertical_drag_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M21 11H3V9H21V11M21 13H3V15H21V13Z\" />\n</svg>`;\n\nexport const horizontal_drag_icon = `<svg style=\"width:24px;height:24px;max-height:100%;\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M11 21H9V3H11V21M15 3H13V21H15V3Z\" />\n</svg>`;\n\nexport const trashcan_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,4H15.5L14.5,3H9.5L8.5,4H5V6H19M6,19A2,2 0 0,0 8,21H16A2,2 0 0,0 18,19V7H6V19Z\" />\n</svg>`;\n\nexport const bottom_right_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const se_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const nw_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,17.59L17.59,19L7,8.41V15H5V5H15V7H8.41L19,17.59Z\" />\n</svg>`;\n\nexport const top_left_arrow = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M5,6.41L6.41,5L17,15.59V9H19V19H9V17H15.59L5,6.41Z\" />\n</svg>`;\n\nexport const drag_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M22.67,12L18.18,16.5L15.67,14L17.65,12L15.67,10.04L18.18,7.53L22.67,12M12,1.33L16.47,5.82L13.96,8.33L12,6.35L10,8.33L7.5,5.82L12,1.33M12,22.67L7.53,18.18L10.04,15.67L12,17.65L14,15.67L16.5,18.18L12,22.67M1.33,12L5.82,7.5L8.33,10L6.35,12L8.33,13.96L5.82,16.47L1.33,12M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10Z\" />\n</svg>`;\n\nexport const plus_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z\" />\n</svg>`;\n\nexport const minus_icon = `<svg style=\"width:24px;height:24px\" viewBox=\"0 0 24 24\">\n<path fill=\"currentColor\" d=\"M19,13H5V11H19V13Z\" />\n</svg>`;","import { minus_icon, plus_icon } from \"./icons\";\nimport { make_el } from \"./make_el\";\n\n// Builds an up down button and value input\nexport function make_incrementer({\n  parent_el,\n  start_val = 2,\n  id = \"incrementer\",\n  label = \"my incrementer\",\n  on_increment = (x) => console.log(x),\n}): (new_value: number) => void {\n\n  const plus_minus_div = make_el(\n    parent_el,\n    `div#${id}_incrementer.plus-minus-input.settings-grid`,\n    {\n      innerHTML: `<span class = \"label\">${label}</span>`,\n    }\n  );\n\n  const inputs_div = make_el(plus_minus_div, \"div.plus-minus-input-controls\");\n\n  const minus_btn = make_el(inputs_div, \"button.plus-minus-input-btn.minus\", {\n    props: {name: \"plus button\"},\n    innerHTML: minus_icon,\n    event_listener: {\n      event: \"click\",\n      func: increment_counter(-1),\n    },\n  });\n  const current_value = make_el(inputs_div, \"span.plus-minus-input-value\", {\n    innerHTML: start_val.toString(),\n  });\n\n  make_el(inputs_div, \"button.plus-minus-input-btn.plus\", {\n    props: {name: \"minus button\"},\n    innerHTML: plus_icon,\n    event_listener: {\n      event: \"click\",\n      func: increment_counter(1),\n    },\n  });\n\n  function update_value(new_value: number) {\n    current_value.innerHTML = new_value.toString();\n\n    if (new_value === 1) {\n      minus_btn.classList.add(\"disabled\");\n    } else {\n      minus_btn.classList.remove(\"disabled\");\n    }\n  }\n  function increment_counter(amount) {\n    return function () {\n      const new_value = +current_value.innerHTML + amount;\n\n      update_value(new_value);\n      on_increment(new_value);\n    };\n  }\n\n  return update_value;\n}\n","import { make_el, Event_Listener } from \"./make_el\";\n\ntype Modal_Options = {\n  background_callbacks?: Event_Listener | Event_Listener[];\n  modal_callbacks?: Event_Listener | Event_Listener[];\n  header_text?: string;\n}\nexport function focused_modal(opts: Modal_Options) {\n  const background = make_el(\n    document.querySelector(\"body\"),\n    \"div.background-blurrer\",\n    {\n      event_listener: opts.background_callbacks,\n    }\n  );\n\n  const modal = make_el(background, \"div.modal\", {\n    event_listener: opts.modal_callbacks,\n  });\n\n  if (opts.header_text) {\n    make_el(modal, \"div.modal_header\", {\n      innerHTML: opts.header_text,\n      styles: {\n        paddingBottom: \"1rem\",\n      },\n    });\n  }\n\n  return {\n    background,\n    modal,\n    remove: () => background.remove(),\n  };\n}\n","import { horizontal_drag_icon, vertical_drag_icon } from \"./icons\";\nimport { make_el } from \"./make_el\";\nimport { get_css_value, get_css_unit } from \"./misc-helpers\";\n\nexport type CSS_Input = {\n  form: HTMLElement;\n  current_value: () => string;\n  update_value: (new_value: string) => void;\n}\n// =============================================================================\n// From here on are a series of general purpose helper functions not\n// specifically related to the app and its state\n// Input with value text box on left and unit selector dropdown on right\n// Used to make valid css sizes\nexport function make_css_unit_input({\n  parent_el,\n  selector = \"\",\n  start_val = 1,\n  start_unit = \"fr\",\n  on_change = (x: string) => console.log(\"css unit change\", x),\n  allowed_units = [\"fr\", \"px\", \"rem\"],\n  form_styles = {},\n  drag_dir = \"none\",\n}): CSS_Input {\n  const allow_drag = drag_dir !== \"none\";\n\n  const form = make_el(parent_el, `form${selector}.css-unit-input`, {\n    styles: form_styles,\n    event_listener: [\n      { event: \"change\", func: on_update },\n      {\n        event: \"submit\",\n        func: function (e) {\n          // Needed to stop pressing enter causing page to refresh\n          e.preventDefault();\n        },\n      },\n    ],\n  });\n\n  const value_input = <HTMLInputElement>(\n    make_el(form, \"input.css-unit-input-value\", {\n      props: {\n        type: \"number\",\n        min: 0,\n        value: start_val,\n        step: 1,\n        \"aria-live\": \"polite\",\n      },\n    })\n  );\n\n  const unit_selector = <HTMLSelectElement>(\n    make_el(form, \"select.css-unit-input-select\", {\n      props: { name: \"units\" },\n    })\n  );\n\n  const resizer = make_el(form, \"div.css-unit-input-dragger\", {\n    innerHTML: drag_dir === \"y\" ? vertical_drag_icon : horizontal_drag_icon,\n  });\n\n  // Place an invisible div over the main one that we let be dragged. This means\n  // we can use the nice drag interaction callbacks without the ugly default\n  // drag behavior of two copies of the div and zooming back to the start pos etc.\n  make_el(resizer, \"div.css-unit-input-drag-detector\", {\n    props: { draggable: true },\n    event_listener: [\n      {\n        event: \"dragstart\",\n        func: function (event) {\n          this.dataset.baseline = value_input.value;\n          this.dataset.start = event[drag_dir];\n        },\n      },\n      {\n        event: \"drag\",\n        func: function (event) {\n          const drag_pos = event[drag_dir];\n          // At the end of the drag we get a drag event with 0 values that throws stuff off\n          if (drag_pos === 0) return;\n          const new_value = Math.max(\n            0,\n            +this.dataset.baseline + (event[drag_dir] - this.dataset.start)\n          );\n          value_input.value = new_value.toString();\n          on_change(current_value());\n        },\n      },\n    ],\n  });\n\n  allowed_units.forEach(function (unit_type) {\n    const unit_option = <HTMLOptionElement>(\n      make_el(unit_selector, `option.${unit_type}`, {\n        props: { value: unit_type },\n        innerHTML: unit_type,\n      })\n    );\n\n    if (unit_type === start_unit) {\n      unit_option.selected = true;\n    }\n  });\n  function current_value() {\n    return `${value_input.value}${unit_selector.value}`;\n  }\n  function on_update() {\n    const val = current_value();\n    update_value(val);\n    on_change(val);\n  }\n\n  function update_value(new_value: string) {\n    value_input.value = get_css_value(new_value).toString();\n    const new_unit = get_css_unit(new_value);\n\n    for (let opt of unit_selector.children as HTMLCollectionOf<\n      HTMLOptionElement\n    >) {\n      opt.selected = opt.value === new_unit;\n    }\n\n    if (new_unit === \"px\" && allow_drag) {\n      form.classList.add(\"with-drag\");\n    } else {\n      form.classList.remove(\"with-drag\");\n    }\n  }\n\n  update_value(`${start_val}${start_unit}`);\n\n  return { form, current_value, update_value };\n}\n","import { make_el } from \"./make_el\";\n\nexport function make_toggle_switch(\n  parent: HTMLElement,\n  off_text: string,\n  on_text: string,\n  on_change: (is_on: boolean) => void\n) {\n  const container = make_el(parent, \"div.toggle-switch\");\n  make_el(container, \"span.off-text\", {\n    innerHTML: off_text,\n  });\n  const label = make_el(container, \"label.switch\");\n  make_el(container, \"span.on-text\", {\n    innerHTML: on_text,\n  });\n  make_el(label, \"input\", {\n    props: { type: \"checkbox\" },\n    event_listener: {\n      event: \"change\",\n      func: (event) => {\n        on_change((event.target as HTMLInputElement).checked);\n      },\n    },\n  });\n\n  make_el(label, \"span.slider\");\n\n  // Add styles\n  const style_sheet: CSSStyleSheet = document.styleSheets[0];\n\n  style_sheet.insertRule(`\n    div.toggle-switch {\n      display: inline-grid;\n      grid-template-columns: 1fr auto 1fr;\n      grid-gap: 3px;\n      width: 180px;\n      align-items: center;\n      justify-items: center;\n    }\n  `);\n\n  style_sheet.insertRule(`\n  .toggle-switch > span {\n    font-size: 0.85rem;\n  }\n`);\n  style_sheet.insertRule(`\n    .toggle-switch > .off-text {\n      text-align: end;\n    }\n  `);\n\n  style_sheet.insertRule(\n    `.switch {\n    position: relative;\n    display: inline-block;\n    width: 60px;\n    height: 34px;\n  }`,\n    0\n  );\n\n  // Hide default HTML checkbox\n  style_sheet.insertRule(\n    `.switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }`,\n    0\n  );\n\n  style_sheet.insertRule(\n    `.slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    border-radius: 34px;\n    background-color: #ccc;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `.slider:before {\n    position: absolute;\n    content: \"\";\n    height: 26px;\n    width: 26px;\n    left: 4px;\n    bottom: 4px;\n    border-radius: 50%;\n    background-color: white;\n    -webkit-transition: .4s;\n    transition: .4s;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `input:checked + .slider {\n    background-color: #2196F3;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `input:focus + .slider {\n    box-shadow: 0 0 1px #2196F3;\n  }`,\n    0\n  );\n  style_sheet.insertRule(\n    `input:checked + .slider:before {\n    -webkit-transform: translateX(26px);\n    -ms-transform: translateX(26px);\n    transform: translateX(26px);\n  }`,\n    0\n  );\n}\n","// Assumes that only one stylesheet has rules for the given selector and\n// that only one rule targeting that selector alone is defined\n// If target_property is provided the function will chose the sheet that defines\n// that given property (if multiple exist)\nexport function find_rules_by_selector(\n  selector_text: string,\n  target_property?: string\n) {\n  // Find the stylesheet which contains the containers styles\n  const defines_ruleset = (selector_text: string) => (rule: CSSRule) =>\n    (rule as CSSStyleRule).selectorText === selector_text;\n\n  const all_sheets = [...document.styleSheets];\n  const rules_for_selector = all_sheets\n    .filter((style_sheet: CSSStyleSheet) =>\n      [...style_sheet.rules].find(defines_ruleset(selector_text))\n    )\n    .map(\n      (x) =>\n        ([...x.cssRules].find(defines_ruleset(selector_text)) as CSSStyleRule)\n          .style\n    )\n    .filter((x) => (target_property ? x[target_property] : true));\n\n  const n_sheets: number = rules_for_selector.length;\n  if (n_sheets === 0) {\n    // No rules declared so make a new rule and append to last style sheet\n    const last_sheet = all_sheets[all_sheets.length - 1];\n    last_sheet.insertRule(`${selector_text} { }`, 0);\n\n    return ([...last_sheet.cssRules].find(\n      defines_ruleset(selector_text)\n    ) as CSSStyleRule).style;\n  } else {\n    // Take the latest style sheet and (hope) that's the correct one\n    return rules_for_selector[n_sheets - 1];\n  }\n}\n","// JS entry point\nimport { Event_Listener, make_el, remove_elements } from \"./make_el\";\nimport { make_incrementer } from \"./make_incrementer\";\nimport { focused_modal } from \"./focused_modal\";\nimport { make_css_unit_input, CSS_Input } from \"./make_css_unit_input\";\nimport {\n  make_template_start_end,\n  sizes_to_template_def,\n  set_element_in_grid,\n  concat_nl,\n  as_array,\n  max_w_missing,\n  min_w_missing,\n  boxes_overlap,\n  get_bounding_rect,\n  get_css_unit,\n  get_css_value,\n  Selection_Rect,\n  update_rect_with_delta,\n  XY_Pos,\n  Drag_Type,\n} from \"./misc-helpers\";\nimport { make_toggle_switch } from \"./make_toggle_switch\";\nimport { trashcan_icon, drag_icon, se_arrow, nw_arrow } from \"./icons\";\nimport { find_rules_by_selector } from \"./find_rules_by_selector\";\n\nexport const Shiny = (window as any).Shiny;\n\ntype Grid_Settings = {\n  num_rows: (new_value: number) => void;\n  num_cols: (new_value: number) => void;\n  gap: CSS_Input;\n}\n\nexport type Grid_Pos = {\n  start_col?: number;\n  end_col?: number;\n  start_row?: number;\n  end_row?: number;\n}\n\ntype Drag_Res = {\n  xy: XY_Pos;\n  grid: Grid_Pos;\n}\n\ntype Drag_Options = {\n  watching_element: HTMLElement;\n  drag_dir: Drag_Type;\n  grid_element?: HTMLElement;\n  on_start?: (start_loc: XY_Pos) => void;\n  on_drag?: (drag_info: Drag_Res) => void;\n  on_end?: (drag_info: Drag_Res) => void;\n}\n\ntype Element_Info = {\n  id: string;\n  start_row: number;\n  end_row: number;\n  start_col: number;\n  end_col: number;\n}\n\n\n\nwindow.onload = function () {\n  // Keep track of the grid controls here. Tradeoff of a global variable\n  // feels worth it for direct access to the values without doing a dom query\n  const grid_controls = { rows: [], cols: [] };\n  // All the currently existing cells making up the grid\n  let current_cells = [];\n\n  // This holds the grid element dom node. Gets filled in the onload callback\n  // I am using a global variable here because we query inside this so much that\n  // it felt silly to regrab it every time as it never moves.\n  const grid_holder: HTMLElement = document.querySelector(\"#grid_page\");\n\n  const settings_panel: HTMLElement = document.querySelector(\n    \"#settings .card-body\"\n  );\n\n  const grid_settings: Grid_Settings = {\n    num_rows: make_incrementer({\n      parent_el: settings_panel,\n      id: \"num_rows\",\n      start_val: 2,\n      label: \"Number of rows\",\n      on_increment: (x) => update_num_rows_or_cols(\"rows\", x),\n    }),\n    num_cols: make_incrementer({\n      parent_el: settings_panel,\n      id: \"num_cols\",\n      start_val: 2,\n      label: \"Number of cols\",\n      on_increment: (x) => update_num_rows_or_cols(\"cols\", x),\n    }),\n    gap: make_css_unit_input({\n      parent_el: make_el(\n        settings_panel,\n        \"div#gap_size_chooser.plus_minus_input.settings-grid\",\n        {\n          innerHTML: `<span class = \"label\">Panel gap size</span>`,\n        }\n      ),\n      selector: \"#gap_size_chooser\",\n      on_change: (x) => update_grid({ gap: x }),\n      allowed_units: [\"px\", \"rem\"],\n    }),\n  };\n\n  function update_num_rows_or_cols(dir, new_count) {\n    const current_vals =\n      dir === \"rows\" ? get_current_rows() : get_current_cols();\n\n    if (new_count > current_vals.length) {\n      current_vals.push(\"1fr\");\n    } else if (new_count < current_vals.length) {\n      current_vals.pop();\n    } else {\n      // No change, shouldn't happen but maybe...\n    }\n    update_grid({ [dir]: current_vals });\n  }\n\n  const app_mode = grid_holder.hasChildNodes()\n    ? \"ShinyExisting\"\n    : Shiny\n    ? \"ShinyNew\"\n    : \"ClientSide\";\n\n  // Container styles are in this object\n  const styles_for_container = find_rules_by_selector(\n    \"#grid_page\",\n    \"gridTemplateColumns\"\n  );\n\n  styles_for_container.height = \"100%\";\n  styles_for_container.width = \"100%\";\n  styles_for_container.display = \"grid\";\n  styles_for_container.gap = \"1rem\";\n  styles_for_container.padding = \"1rem\";\n\n  add_shiny_listener(\n    \"shiny-loaded\",\n    function (event) {\n      console.log(\"connected to shiny\");\n      // Send elements to Shiny so app is aware of what it's working with\n      send_elements_to_shiny();\n      send_grid_sizing_to_shiny();\n    }\n  );\n\n  function setShinyInput(input_id: string, input_value: any){\n    // Sent input value to shiny but only if it's initialized\n    Shiny.setInputValue?.(input_id, input_value);\n  }\n\n  if (app_mode === \"ShinyExisting\") {\n    const current_rows = styles_for_container.gridTemplateRows.split(\" \");\n    const current_cols = styles_for_container.gridTemplateColumns.split(\" \");\n    // I dont know why this is just .gap and not gridGap\n    const current_gap = styles_for_container.gap;\n\n    // If grided is running on an existing app, we need to parse the children and\n    // add them as elements;\n    const children = [...grid_holder.children];\n\n    children.forEach(function (el) {\n      add_element({\n        id: el.id,\n        grid_pos: get_grid_pos(el as HTMLElement),\n        existing_element: el as HTMLElement,\n      });\n    });\n\n\n\n    // Make sure grid matches the one the app is working with\n    update_grid({\n      rows: current_rows,\n      cols: current_cols,\n      gap: current_gap,\n      force: true,\n    });\n\n    // Make grid cells transparent so the app is seen beneath them\n    find_rules_by_selector(\".grid-cell\").background = \"none\";\n\n    // And edit mode toggle to allow user to interact with app\n    make_toggle_switch(\n      document.querySelector(\"#header .code_btns\"),\n      \"Edit layout\",\n      \"Interact mode\",\n      (interact_is_on: boolean) => {\n        const update_el = function (el: Element) {\n          if (interact_is_on) {\n            el.classList.add(\"disabled\");\n          } else {\n            el.classList.remove(\"disabled\");\n          }\n        };\n        document\n          .querySelectorAll(\"#grid_page .added-element\")\n          .forEach(update_el);\n        document.querySelectorAll(\".grid-cell\").forEach(update_el);\n        update_el(document.querySelector(\"#added_elements\"));\n        update_el(document.querySelector(\"#drag_canvas\"));\n      }\n    );\n  } else if (app_mode === \"ShinyNew\") {\n    add_shiny_listener(\"update-grid\", update_grid);\n\n    type Shiny_Element_Msg = {\n      id: string;\n      start_row: number;\n      end_row: number;\n      start_col: number;\n      end_col: number;\n    }\n    add_shiny_listener(\"add-elements\", function (\n      elements_to_add: Shiny_Element_Msg[]\n    ) {\n      elements_to_add.forEach((el: Shiny_Element_Msg) => {\n        add_element({\n          id: el.id,\n          grid_pos: el,\n        });\n      });\n    });\n  } else {\n    // If in pure-client-side mode we need to provide a default grid and also wireup the code button\n    update_grid({\n      rows: [\"1fr\", \"1fr\"],\n      cols: [\"1fr\", \"1fr\"],\n      gap: \"1rem\",\n    });\n\n    document.getElementById(\"get_code\").addEventListener(\"click\", function () {\n      show_code(\"Place the following in your CSS:\", gen_code_for_layout());\n    });\n  }\n\n  add_shiny_listener(\n    \"code_modal\",\n    function (code_to_show) {\n      show_code(\"Paste the following code into your app to update the layout\", {\n        type: \"R\",\n        code: code_to_show,\n      });\n    }\n  )\n\n  type Code_Text = {\n    type: string;\n    code: string;\n  }\n  function show_code(\n    message: string,\n    code_blocks: Code_Text | Array<Code_Text>\n  ) {\n    const code_modal = focused_modal({\n      header_text: `${message}`,\n      modal_callbacks: {\n        event: \"click\",\n        func: function (event) {\n          // This is needed to stop clicks on modal from triggering the cancel\n          // event that is attached to the background\n          event.stopPropagation();\n        },\n      },\n      background_callbacks: {\n        event: \"click\",\n        func: close_modal,\n      },\n    });\n\n    as_array(code_blocks).forEach(function (code_to_show) {\n      const num_of_lines: number = code_to_show.code.match(/\\n/g).length;\n\n      const code_section = make_el(\n        code_modal.modal,\n        `div#${code_to_show.type}.code_chunk`,\n        {\n          styles: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(2, 1fr)\",\n            gridTemplateRows: \"1fr, auto\",\n            gap: \"4px\",\n            gridTemplateAreas: concat_nl(\n              `\"code_type copy_btn\"`,\n              `\"code_text code_text\"`\n            ),\n          },\n        }\n      );\n\n      let code_text: HTMLInputElement;\n\n      make_el(code_section, \"strong\", {\n        innerHTML: code_to_show.type,\n        styles: { gridArea: \"code_type\" },\n      });\n\n      make_el(code_section, \"button#copy_code\", {\n        innerHTML: \"Copy to clipboard\",\n        styles: { gridArea: \"copy_btn\" },\n        event_listener: {\n          event: \"click\",\n          func: function () {\n            code_text.select();\n            document.execCommand(\"copy\");\n          },\n        },\n      });\n\n      code_text = make_el(code_section, \"textarea#code_for_layout\", {\n        innerHTML: code_to_show.code,\n        props: { rows: num_of_lines + 3 },\n        styles: {\n          width: \"100%\",\n          background: \"#f3f2f2\",\n          fontFamily: \"monospace\",\n          display: \"block\",\n          padding: \"0.75rem\",\n          marginBottom: \"10px\",\n          borderRadius: \"5px\",\n          gridArea: \"code_text\",\n        },\n      }) as HTMLInputElement;\n    });\n\n    const action_buttons = make_el(code_modal.modal, \"div#action_buttons\", {\n      styles: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n      },\n    });\n    make_el(action_buttons, \"button#close_code_model\", {\n      innerHTML: \"Close\",\n      event_listener: {\n        event: \"click\",\n        func: close_modal,\n      },\n    });\n\n    function close_modal() {\n      code_modal.remove();\n    }\n  }\n\n  function fill_grid_cells() {\n    const grid_dims = { rows: get_current_rows(), cols: get_current_cols() };\n    const num_rows = grid_dims.rows.length;\n    const num_cols = grid_dims.cols.length;\n    // Grab currently drawn cells (if any) so we can check if we need to redraw\n    // or if this was simply a column/row sizing update\n    current_cells = [];\n    const need_to_reset_cells = current_cells.length != num_rows * num_cols;\n\n    if (need_to_reset_cells) {\n      remove_elements(grid_holder.querySelectorAll(\".grid-cell\"));\n      for (let row_i = 1; row_i <= num_rows; row_i++) {\n        for (let col_i = 1; col_i <= num_cols; col_i++) {\n          current_cells.push(\n            make_el(grid_holder, `div.r${row_i}.c${col_i}.grid-cell`, {\n              data_props: { row: row_i, col: col_i },\n              grid_pos: { start_row: row_i, start_col: col_i },\n            })\n          );\n        }\n      }\n\n      // Build each column and row's sizing controler\n      for (let type in grid_controls) {\n        // Get rid of old ones to start with fresh slate\n        remove_elements(grid_holder.querySelectorAll(`.${type}-controls`));\n        grid_controls[type] = grid_dims[type].map(function (\n          size: string,\n          i: number\n        ) {\n          // The i + 1 is because grid is indexed at 1, not zero\n          const grid_i = i + 1;\n\n          return make_css_unit_input({\n            parent_el: grid_holder,\n            selector: `#control_${type}${grid_i}.${type}-controls`,\n            start_val: get_css_value(size),\n            start_unit: get_css_unit(size),\n            on_change: () => update_grid(get_layout_from_controls()),\n            form_styles: {\n              [`grid${\n                type === \"rows\" ? \"Row\" : \"Column\"\n              }`]: make_template_start_end(grid_i),\n            },\n            drag_dir: type === \"rows\" ? \"y\" : \"x\",\n          });\n        });\n      }\n      const current_selection_box = make_el(\n        grid_holder,\n        \"div#current_selection_box.added-element\"\n      );\n      const drag_canvas = make_el(grid_holder, \"div#drag_canvas\");\n\n      drag_on_grid({\n        watching_element: drag_canvas,\n        grid_element: current_selection_box,\n        drag_dir: \"bottom-right\",\n        on_start: () => {\n          current_selection_box.style.borderColor = get_next_color();\n        },\n        on_end: ({ grid }) => {\n          name_new_element({\n            grid_pos: grid,\n            selection_box: current_selection_box,\n          });\n        },\n      });\n\n      // Make sure any added elements sit on top by re-appending them to grid holder\n      // Make sure that the drag detector sits over everything\n      [\n        drag_canvas,\n        ...grid_holder.querySelectorAll(\".added-element\"),\n      ].forEach((el) => grid_holder.appendChild(el));\n    } else {\n    }\n  }\n  function get_drag_extent_on_grid(selection_rect: Selection_Rect): Grid_Pos {\n    // Reset bounding box definitions so we only use current selection extent\n    const sel_bounds: Grid_Pos = { start_col: null, start_row: null };\n\n    current_cells.forEach(function (el) {\n      // Cell is overlapped by selection box\n      if (boxes_overlap(get_bounding_rect(el), selection_rect)) {\n        const el_row: number = +el.dataset.row;\n        const el_col: number = +el.dataset.col;\n        sel_bounds.start_row = min_w_missing(sel_bounds.start_row, el_row);\n        sel_bounds.end_row = max_w_missing(sel_bounds.end_row, el_row);\n        sel_bounds.start_col = min_w_missing(sel_bounds.start_col, el_col);\n        sel_bounds.end_col = max_w_missing(sel_bounds.end_col, el_col);\n      }\n    });\n\n    return sel_bounds;\n  }\n\n  type Grid_Update_Options = {\n    rows?: string[];\n    cols?: string[];\n    gap?: string;\n    force?: boolean;\n  }\n  function update_grid(opts: Grid_Update_Options) {\n    const old_num_rows = get_current_rows().length;\n    const old_num_cols = get_current_cols().length;\n    const old_gap = styles_for_container.gap;\n    const new_gap = opts.gap || old_gap;\n    const new_num_rows = opts.rows ? opts.rows.length : old_num_rows;\n    const new_num_cols = opts.cols ? opts.cols.length : old_num_cols;\n\n    // Make sure settings panel is up-to-date\n    grid_settings.num_rows(new_num_rows);\n    grid_settings.num_cols(new_num_cols);\n    grid_settings.gap.update_value(new_gap);\n\n    const grid_numbers_changed =\n      old_num_rows !== new_num_rows || old_num_cols !== new_num_cols;\n    if (grid_numbers_changed) {\n      // Check for elements that may get dropped\n      const all_els = current_elements();\n      let in_danger_els = [];\n      let auto_removed_el_ids = [];\n\n      all_els.forEach(function (el) {\n        const sits_outside_grid =\n          el.end_row > new_num_rows || el.end_col > new_num_cols;\n        const completely_outside_grid =\n          el.start_row > new_num_rows || el.start_col > new_num_cols;\n\n        if (completely_outside_grid) {\n          auto_removed_el_ids.push(el.id);\n        } else if (sits_outside_grid) {\n          in_danger_els.push(el);\n        }\n      });\n\n      remove_added_elements(auto_removed_el_ids);\n\n      if (in_danger_els.length > 0) {\n        const fix_els_modal = focused_modal({\n          header_text: `\n        <h2>The following elements dont fit on the new grid layout.</h2>\n        <p>Below, choose to either remove the element or to shink its bounds to the new grid sizing</p>\n        `,\n        });\n\n        const radio_inputs_html = in_danger_els.reduce(\n          (radio_group, el) =>\n            `\n          ${radio_group}\n          <div class = \"radio-set-group\">\n            <div class = \"radio-set-label\"> ${el.id} </div>\n            <div class = \"radio-set-options\">\n              <input type=\"radio\" id = \"delete_${el.id}\" name=\"${el.id}\" value=\"delete\" checked>\n              <label for=\"delete_${el.id}\">Delete</label>\n              <input type=\"radio\" id = \"shrink_${el.id}\" name=\"${el.id}\" value=\"shrink\">\n              <label for=\"shrink_${el.id}\">Shink</label>\n            </div>\n          </div>\n        `,\n          \"\"\n        );\n\n        const delete_or_edit_form = make_el(\n          fix_els_modal.modal,\n          \"form#delete_or_fix_list\",\n          {\n            innerHTML: `<div class = \"update-action-form\"> ${radio_inputs_html} </div>`,\n            event_listener: {\n              event: \"submit\",\n              func: function () {\n                const form = this;\n                const to_delete = in_danger_els.filter(\n                  (d) => form[d.id].value === \"delete\"\n                );\n\n                remove_added_elements(to_delete.map((d) => d.id));\n                const to_edit = in_danger_els.filter(\n                  (d) => form[d.id].value === \"shrink\"\n                );\n                to_edit.forEach((el) => {\n                  const el_node: HTMLElement = grid_holder.querySelector(\n                    `#${el.id}`\n                  );\n\n                  el_node.style.gridRow = make_template_start_end(\n                    el.start_row,\n                    Math.min(el.end_row, new_num_rows)\n                  );\n                  el_node.style.gridColumn = make_template_start_end(\n                    el.start_col,\n                    Math.min(el.end_col, new_num_cols)\n                  );\n                });\n\n                fix_els_modal.remove();\n                // Now that we've updated elements properly, we should be able to\n                // just recall the function and it won't spit an error\n                update_grid({\n                  rows: opts.rows,\n                  cols: opts.cols,\n                  gap: opts.gap,\n                });\n              },\n            },\n          }\n        );\n\n        make_el(delete_or_edit_form, \"input#name_submit\", {\n          props: { type: \"submit\" },\n        });\n\n        make_el(fix_els_modal.modal, \"p.notice-text\", {\n          innerHTML:\n            \"Note that elements residing completely in the removed row or column are automatically deleted.\",\n        });\n\n        return;\n      }\n    }\n\n    if (opts.rows) {\n      styles_for_container.gridTemplateRows = sizes_to_template_def(opts.rows);\n    }\n    if (opts.cols) {\n      styles_for_container.gridTemplateColumns = sizes_to_template_def(opts.cols);\n    }\n    if (opts.gap) {\n      // This sets the --grid-gap variable so that the controls that need the \n      // info can use it to keep a constant distance from the grid holder\n      grid_holder.parentElement.style.setProperty(\"--grid-gap\", opts.gap);\n      // We dont use css variables in the exported css that existing apps used\n      // so we need to modify both gap and padding\n      styles_for_container.gap = opts.gap;\n      styles_for_container.padding = opts.gap;\n    }\n\n    if (grid_numbers_changed || opts.force) fill_grid_cells();\n\n    send_grid_sizing_to_shiny();\n\n    return grid_holder;\n  }\n\n  function get_layout_from_controls() {\n    const sizes = {};\n    for (let type in grid_controls) {\n      sizes[type] = grid_controls[type].map((unit_input) =>\n        unit_input.current_value()\n      );\n    }\n    return sizes;\n  }\n\n  function name_new_element({ grid_pos, selection_box }) {\n    const modal_divs = focused_modal({\n      background_callbacks: {\n        // Clicking outside of the modal will cancel the naming. Seems natural\n        event: \"click\",\n        func: reset_el_creation,\n      },\n      modal_callbacks: {\n        event: \"click\",\n        func: function (event) {\n          // This is needed to stop clicks on modal from triggering the cancel\n          // event that is attached to the background\n          event.stopPropagation();\n        },\n      },\n    });\n\n    const modal_div = modal_divs.modal;\n\n    make_el(modal_div, \"div.instructions\", {\n      innerHTML: `\n      <h2>Name your element:</h2>\n      <p>This name will be used to place items in your app.\n      For instance if you want to place a plot in this element,\n      this name will match the label of the plot output\n      </p>\n      `,\n    });\n\n    const name_form = make_el(modal_div, \"form#name_form\", {\n      event_listener: {\n        event: \"submit\",\n        func: function (event) {\n          event.preventDefault();\n          const id = this[\"name_input\"].value.replace(/\\s/g, \"_\");\n\n          const element_exists: boolean = !!current_elements().find(\n            (el) => el.id === id\n          );\n          if (element_exists) {\n            // Cant have duplicate ids!\n            warn_about_bad_id(\n              `You already have an element with the id ${id}, all ids need to be unique.`\n            );\n            return;\n          }\n          if (id.match(/^[^a-zA-Z]/g)) {\n            warn_about_bad_id(`Valid ids need to start with a character.`);\n            return;\n          }\n\n          // Add the new element in to grid\n          add_element({\n            id,\n            color: selection_box.style.borderColor,\n            grid_pos,\n          });\n\n          reset_el_creation();\n        },\n      },\n    });\n    make_el(name_form, \"input#cancel_btn\", {\n      props: { type: \"button\", value: \"cancel\" },\n      event_listener: { event: \"click\", func: reset_el_creation },\n    });\n\n    make_el(name_form, \"input#name_input\", {\n      props: { type: \"text\" },\n      event_listener: {\n        // Don't leave warning message up while user is typing\n        event: \"input\",\n        func: hide_warning_msg,\n      },\n    }).focus(); // So user can immediately type in id\n\n    make_el(name_form, \"input#name_submit\", {\n      props: { type: \"submit\" },\n    });\n\n    function warn_about_bad_id(msg) {\n      make_el(modal_div, \"span#bad_id_msg.notice-text\", {\n        innerHTML: msg,\n        styles: { color: \"orangered\" },\n      });\n    }\n    function hide_warning_msg() {\n      const warn_msg = modal_div.querySelector(\"span#bad_id_msg\");\n      if (warn_msg) {\n        warn_msg.remove();\n      }\n    }\n    function reset_el_creation() {\n      // All done here so get rid of the whole interface.\n      modal_divs.remove();\n      // Remove the temporary dragged element\n      selection_box.style.display = \"none\";\n    }\n  }\n\n  // Adds a new element of a given id to the app. Both in the grid window\n  // and the addeded elements panel\n  type New_Element = {\n    id: string;\n    color?: string;\n    grid_pos: Grid_Pos;\n    existing_element?: HTMLElement;\n  }\n\n  function add_element(el_props: New_Element) {\n    const { grid_pos, color = get_next_color(), existing_element } = el_props;\n    const mirrors_existing_element = existing_element !== undefined;\n    // If element ids were generated with the grid_container R function then\n    // they have a prefix of the container name which we should remove so the\n    // added elements list is not ugly looking\n    const id = mirrors_existing_element\n      ? el_props.id.replace(/^.+?__/g, \"\")\n      : el_props.id;\n\n    const element_in_grid = make_el(\n      grid_holder,\n      `div#${id}.el_${id}.added-element`,\n      {\n        grid_pos,\n        styles: {\n          borderColor: color,\n          position: \"relative\",\n        },\n      }\n    );\n\n    // Setup drag behavior\n    ([\"top-left\", \"bottom-right\", \"center\"] as Drag_Type[]).forEach(\n      function (handle_type: Drag_Type) {\n        drag_on_grid({\n          watching_element: make_el(\n            element_in_grid,\n            `div.dragger.visible.${handle_type}`,\n            {\n              styles: { background: color },\n              innerHTML:\n                handle_type === \"center\"\n                  ? drag_icon\n                  : handle_type === \"bottom-right\"\n                  ? se_arrow\n                  : nw_arrow,\n            }\n          ),\n          grid_element: element_in_grid,\n          drag_dir: handle_type,\n          on_drag: (res) => {\n            if (mirrors_existing_element) {\n              set_element_in_grid(existing_element, res.grid);\n            }\n          },\n          on_end: () => {\n            send_elements_to_shiny();\n          },\n        });\n      }\n    );\n\n    const element_in_list = make_el(\n      document.querySelector(\"#added_elements\"),\n      `div.el_${id}.added-element`,\n      {\n        innerHTML: id,\n        styles: {\n          borderColor: color,\n        },\n        event_listener: [\n          {\n            event: \"mouseover\",\n            func: function () {\n              this.classList.add(\"hovered\");\n              element_in_grid.classList.add(\"hovered\");\n            },\n          },\n          {\n            event: \"mouseout\",\n            func: function () {\n              this.classList.remove(\"hovered\");\n              element_in_grid.classList.remove(\"hovered\");\n            },\n          },\n        ],\n      }\n    );\n\n    if (!mirrors_existing_element) {\n      // Turn of deleting if were editing an existing app\n      // This means that if were in app editing mode and the user adds a new element\n      // they can delete that new element but they can't delete the existing elements\n      make_el(element_in_list, \"button.remove_el\", {\n        innerHTML: trashcan_icon,\n        event_listener: {\n          event: \"click\",\n          func: function () {\n            remove_added_elements(id);\n          },\n        },\n      });\n    }\n\n    // Let shiny know we have a new element\n    send_elements_to_shiny();\n  }\n\n  function get_grid_pos(grid_el: HTMLElement): Grid_Pos {\n    const el_styles = getComputedStyle(grid_el);\n    return {\n      start_row: +el_styles.gridRowStart,\n      start_col: +el_styles.gridColumnStart,\n      end_row: +el_styles.gridRowEnd - 1,\n      end_col: +el_styles.gridColumnEnd - 1,\n    };\n  }\n\n  function drag_on_grid(opts: Drag_Options): void {\n    let drag_feedback_rect: HTMLElement;\n    let start_rect: Selection_Rect;\n    let start_loc: XY_Pos;\n\n    const editor_el: HTMLElement = document.querySelector(\"#editor\");\n\n    opts.watching_element.onmousedown = function (event: MouseEvent) {\n      start_loc = event as DragEvent;\n\n      // make sure dragged element is on top\n      grid_holder.appendChild(opts.grid_element);\n\n      // If this is a new element drag there wont be a bounding box for the grid\n      // element yet, so we need to make a new zero-width/height one at start\n      // of the drag\n      start_rect = get_bounding_rect(opts.grid_element) || {\n        left: event.offsetX,\n        right: event.offsetX,\n        top: event.offsetY,\n        bottom: event.offsetY,\n      };\n\n      drag_feedback_rect = make_el(\n        grid_holder.querySelector(\"#drag_canvas\"),\n        \"div.drag-feedback-rect\",\n        {\n          styles: {\n            ...bounding_rect_to_css_pos(start_rect),\n          },\n        }\n      );\n\n      // We start grid position here in case user selects by simply clicking,\n      // which would mean we never get to run the drag function\n      update_grid_pos(opts.grid_element, start_rect);\n\n      if (opts.on_start) opts.on_start(start_loc);\n\n      // Add listener to editor so we can continue to track this drag\n      editor_el.addEventListener(\"mousemove\", drag);\n      editor_el.addEventListener(\"mouseup\", drag_end);\n    };\n\n    function update_grid_pos(\n      element: HTMLElement,\n      bounding_rect: Selection_Rect\n    ): Grid_Pos {\n      const grid_extent = get_drag_extent_on_grid(bounding_rect);\n      set_element_in_grid(element, grid_extent);\n      return grid_extent;\n    }\n\n    function drag(event: MouseEvent) {\n      const curr_loc: XY_Pos = event;\n      // Sometimes the drag event gets fired with nonsense zeros\n      if (curr_loc.x === 0 && curr_loc.y === 0) return;\n\n      const new_rect = update_rect_with_delta(\n        start_rect,\n        { x: curr_loc.x - start_loc.x, y: curr_loc.y - start_loc.y },\n        opts.drag_dir\n      );\n\n      Object.assign(\n        drag_feedback_rect.style,\n        bounding_rect_to_css_pos(new_rect)\n      );\n      const grid_extent = update_grid_pos(opts.grid_element, new_rect);\n      if (opts.on_drag) opts.on_drag({ xy: curr_loc, grid: grid_extent });\n    }\n\n    function drag_end(event: MouseEvent) {\n      const end_loc: XY_Pos = event;\n      drag_feedback_rect.remove();\n      start_rect = null;\n      start_loc = null;\n      if (opts.on_end)\n        opts.on_end({\n          xy: end_loc,\n          grid: get_grid_pos(opts.grid_element || this.parentElement),\n        });\n\n      editor_el.removeEventListener(\"mousemove\", drag);\n      editor_el.removeEventListener(\"mouseup\", drag_end);\n    }\n\n    function bounding_rect_to_css_pos(rect: Selection_Rect) {\n      return {\n        left: `${rect.left}px`,\n        top: `${rect.top}px`,\n        width: `${rect.right - rect.left}px`,\n        height: `${rect.bottom - rect.top}px`,\n      };\n    }\n  }\n\n \n  function current_elements(): Array<Element_Info> {\n    let elements: Array<Element_Info> = [];\n\n    (grid_holder.querySelectorAll(\".added-element\") as NodeListOf<\n      HTMLElement\n    >).forEach(function (el: HTMLElement) {\n      // Ignore the selection box\n      if (el.id === \"current_selection_box\") return;\n      const grid_area = el.style.gridArea.split(\" / \");\n      elements.push({\n        id: el.id,\n        start_row: +grid_area[0],\n        start_col: +grid_area[1],\n        // Subtract one here because the end in css is the end line, not row\n        end_row: +grid_area[2] - 1,\n        end_col: +grid_area[3] - 1,\n      });\n    });\n\n    return elements;\n  }\n\n  // These are functions for communicating with Shiny. They are all optional\n  // chained so they won't spit errors if Shiny isn't connected or initialized\n  // yet.\n\n  function add_shiny_listener(event_id : string, callback_func: Function){\n    Shiny?.addCustomMessageHandler(event_id , callback_func);\n  }\n\n  function send_elements_to_shiny() {\n    const elements_by_id = {};\n    current_elements().forEach(function (el) {\n      elements_by_id[el.id] = el;\n    });\n    \n    setShinyInput(\"elements\", elements_by_id);\n  }\n\n  function send_grid_sizing_to_shiny(){\n    setShinyInput(\n      \"grid_sizing\", {\n        rows: styles_for_container.gridTemplateRows.split(\" \"),\n        cols: styles_for_container.gridTemplateColumns.split(\" \"),\n        gap: styles_for_container.gap,\n      }\n    );\n  }\n\n  function gen_code_for_layout(): Array<Code_Text> {\n    const container_selector = \"#container\";\n    const elements = current_elements();\n\n    const element_defs = elements.map((el) =>\n      concat_nl(\n        `#${el.id} {`,\n        `  grid-column: ${make_template_start_end(el.start_col, el.end_col)};`,\n        `  grid-row: ${make_template_start_end(el.start_row, el.end_row)};`,\n        `}`\n      )\n    );\n\n    const css_code = concat_nl(\n      `${container_selector} {`,\n      `  display: grid;`,\n      `  grid-template-columns: ${styles_for_container.gridTemplateColumns};`,\n      `  grid-template-rows: ${styles_for_container.gridTemplateRows};`,\n      `  gap: ${styles_for_container.gap}`,\n      `}`,\n      ...element_defs\n    );\n\n    const html_code = concat_nl(\n      `<div id = ${container_selector}>`,\n      ...elements.map((el) =>\n        concat_nl(`  <div id = \"#${el.id}\">`, `  </div>`)\n      ),\n      `</div>`\n    );\n\n    return [\n      { type: \"css\", code: css_code },\n      { type: \"html\", code: html_code },\n    ];\n  }\n\n  function get_current_rows() {\n    return styles_for_container.gridTemplateRows.split(\" \");\n  }\n\n  function get_current_cols() {\n    return styles_for_container.gridTemplateColumns.split(\" \");\n  }\n\n  // Get the next color in our list of colors.\n  function get_next_color() {\n    const colors = [\n      \"#e41a1c\",\n      \"#377eb8\",\n      \"#4daf4a\",\n      \"#984ea3\",\n      \"#ff7f00\",\n      \"#a65628\",\n      \"#f781bf\",\n    ];\n    const all_elements = grid_holder.querySelectorAll(\".added-element\");\n    // If we have more elements than colors we simply recycle\n    return colors[all_elements.length % colors.length];\n  }\n\n  // Removes elements the user has added to the grid by id\n  function remove_added_elements(ids: string | Array<string>) {\n    as_array(ids).forEach((el_id) => {\n      remove_elements(\n        document.querySelectorAll(`div.el_${el_id}.added-element`)\n      );\n    });\n\n    send_elements_to_shiny();\n  }\n}; // End of the window.onload callback\n"]}